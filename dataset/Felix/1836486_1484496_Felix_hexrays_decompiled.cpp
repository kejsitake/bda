/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2014 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

int init_proc();
// int __cdecl std::ostream::operator<<(_DWORD, _DWORD); weak
// int __cxa_atexit(const char *, ...); weak
// int __gmon_start__(void); weak
// void __cdecl operator delete(void *); idb
// _DWORD std::ios_base::Init::Init(std::ios_base::Init *this); idb
// _DWORD __cdecl std::ios_base::Init::~Init(std::ios_base::Init *__hidden this); idb
// int __cdecl std::operator<<<std::char_traits<char>>(_DWORD, _DWORD); weak
// _DWORD __cdecl operator new(unsigned int); idb
// int __cdecl std::istream::operator>>(_DWORD, _DWORD); weak
// int std::ostream::operator<<(_DWORD, const char *, ...); weak
// _DWORD std::__throw_bad_alloc(void); idb
signed int deregister_tm_clones();
int register_tm_clones();
void _do_global_dtors_aux();
int frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
int __cdecl __static_initialization_and_destruction_0(int a1, int a2);
int GLOBAL__sub_I_main();
void std::allocator<int>::allocator();
void std::allocator<int>::~allocator();
int __cdecl std::vector<int,std::allocator<int>>::vector(int a1, unsigned int a2, int a3);
void __cdecl std::vector<int,std::allocator<int>>::~vector(int a1);
int __cdecl std::vector<int,std::allocator<int>>::operator[](int a1, int a2);
int __cdecl std::vector<int,std::allocator<int>>::vector<int>(int a1, unsigned int a2, char a3);
void __gnu_cxx::new_allocator<int>::new_allocator();
void __gnu_cxx::new_allocator<int>::~new_allocator();
void std::_Vector_base<int,std::allocator<int>>::_Vector_impl::~_Vector_impl();
int __cdecl std::_Vector_base<int,std::allocator<int>>::_Vector_base(int a1, unsigned int a2);
void __cdecl std::_Vector_base<int,std::allocator<int>>::~_Vector_base(int a1);
int __cdecl std::vector<int,std::allocator<int>>::_M_fill_initialize(int a1, int a2, int a3);
int __cdecl std::_Vector_base<int,std::allocator<int>>::_M_get_Tp_allocator(int a1);
void std::_Destroy<int *,int>();
int __cdecl std::_Vector_base<int,std::allocator<int>>::_Vector_base(int a1);
int __cdecl std::vector<int,std::allocator<int>>::_M_initialize_dispatch<int>(int a1, unsigned int a2, char a3);
int __cdecl std::_Vector_base<int,std::allocator<int>>::_Vector_impl::_Vector_impl(int a1);
int __cdecl std::_Vector_base<int,std::allocator<int>>::_M_create_storage(int a1, unsigned int a2);
void __cdecl std::_Vector_base<int,std::allocator<int>>::_M_deallocate(int a1, void *a2);
int __cdecl std::__uninitialized_fill_n_a<int *,unsigned int,int,int>(int a1, int a2, int a3);
void std::_Destroy<int *>();
int __cdecl std::_Vector_base<int,std::allocator<int>>::_M_allocate(int a1, unsigned int a2);
void std::allocator<int>::allocator();
void __cdecl __gnu_cxx::new_allocator<int>::deallocate(int a1, void *a2);
int __cdecl std::uninitialized_fill_n<int *,unsigned int,int>(int a1, int a2, int a3);
void std::_Destroy_aux<true>::__destroy<int *>();
int __cdecl __gnu_cxx::new_allocator<int>::allocate(int a1, unsigned int a2);
void __gnu_cxx::new_allocator<int>::new_allocator();
int __cdecl std::__uninitialized_fill_n<true>::__uninit_fill_n<int *,unsigned int,int>(int a1, int a2, int a3);
signed int __gnu_cxx::new_allocator<int>::max_size();
int __cdecl std::fill_n<int *,unsigned int,int>(int a1, int a2, int a3);
int __cdecl std::__niter_base<int *>(int a1);
int __cdecl std::__fill_n_a<int *,unsigned int,int>(int a1, int a2, int a3);
int __cdecl std::_Iter_base<int *,false>::_S_base(int a1);
void _libc_csu_fini(); // idb
void __cdecl _libc_csu_init();
void _i686_get_pc_thunk_bx();
int __fastcall _do_global_ctors_aux(int a1, int a2);
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

// extern _UNKNOWN std::endl<char,std::char_traits<char>>; weak
int (*off_804AA54)() = &GLOBAL__sub_I_main; // weak
int _DTOR_LIST__[] = { 4294967295 }; // weak
_UNKNOWN _DTOR_END__; // weak
_UNKNOWN _dso_handle; // weak
_UNKNOWN std::cin; // weak
_UNKNOWN std::cout; // weak
char completed_3328; // weak
int dtor_idx_3330; // weak
_UNKNOWN std::__ioinit; // weak
// extern _UNKNOWN _gmon_start__; weak


//----- (080486BC) --------------------------------------------------------
int init_proc()
{
  int v0; // edx@3
  int v1; // ecx@3
  int v3; // [sp+0h] [bp-8h]@0

  if ( &_gmon_start__ )
    __gmon_start__();
  frame_dummy();
  _do_global_ctors_aux(v1, v0);
  return v3;
}
// 8048720: using guessed type int __gmon_start__(void);

//----- (080487F0) --------------------------------------------------------
#error "80487F3: positive sp value has been found (funcsize=2)"

//----- (08048820) --------------------------------------------------------
signed int deregister_tm_clones()
{
  return 3;
}
// 8048820: could not find valid save-restore pair for ebp

//----- (08048850) --------------------------------------------------------
int register_tm_clones()
{
  return 0;
}
// 8048850: could not find valid save-restore pair for ebp

//----- (08048890) --------------------------------------------------------
void _do_global_dtors_aux()
{
  int v0; // eax@2
  int i; // ebx@2

  if ( !completed_3328 )
  {
    v0 = dtor_idx_3330;
    for ( i = ((&_DTOR_END__ - (_UNKNOWN *)_DTOR_LIST__) >> 2) - 1; dtor_idx_3330 < (unsigned int)i; v0 = dtor_idx_3330 )
    {
      dtor_idx_3330 = v0 + 1;
      ((void (*)(void))_DTOR_LIST__[v0 + 1])();
    }
    deregister_tm_clones();
    completed_3328 = 1;
  }
}
// 804AA5C: using guessed type int _DTOR_LIST__[];
// 804ACCC: using guessed type char completed_3328;
// 804ACD0: using guessed type int dtor_idx_3330;

//----- (080488E0) --------------------------------------------------------
int frame_dummy()
{
  return register_tm_clones();
}
// 80488E0: could not find valid save-restore pair for ebp

//----- (08048910) --------------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  int v3; // eax@3
  int v4; // eax@5
  int v5; // eax@5
  int v6; // eax@5
  int v7; // eax@8
  int v8; // eax@17
  int v9; // eax@21
  int v10; // eax@25
  int v11; // eax@29
  int v12; // eax@34
  int v13; // eax@36
  int v15; // [sp+10h] [bp-54h]@5
  int v16; // [sp+1Ch] [bp-48h]@2
  unsigned int v17; // [sp+28h] [bp-3Ch]@2
  int v18; // [sp+2Ch] [bp-38h]@1
  int v19; // [sp+34h] [bp-30h]@2
  int n; // [sp+3Ch] [bp-28h]@20
  int m; // [sp+40h] [bp-24h]@12
  char v22; // [sp+47h] [bp-1Dh]@12
  int l; // [sp+48h] [bp-1Ch]@6
  int v24; // [sp+4Ch] [bp-18h]@6
  signed int k; // [sp+50h] [bp-14h]@5
  char v26; // [sp+57h] [bp-Dh]@5
  int j; // [sp+58h] [bp-Ch]@2
  signed int i; // [sp+5Ch] [bp-8h]@1

  std::istream::operator>>(&std::cin, &v18);
  for ( i = 1; ; ++i )
  {
    v13 = v18--;
    if ( v13 == 0 )
      break;
    std::istream::operator>>(&std::cin, &v17);
    std::allocator<int>::allocator();
    v19 = 0;
    std::vector<int,std::allocator<int>>::vector((int)&v16, v17, (int)&v19);
    std::allocator<int>::~allocator();
    for ( j = 0; j < (signed int)v17; ++j )
    {
      v3 = std::vector<int,std::allocator<int>>::operator[]((int)&v16, j);
      std::istream::operator>>(&std::cin, v3);
    }
    v4 = std::operator<<<std::char_traits<char>>(&std::cout, "Case #");
    v5 = std::ostream::operator<<(v4, i);
    v6 = std::operator<<<std::char_traits<char>>(v5, ":");
    std::ostream::operator<<(v6, (const char *)&std::endl<char,std::char_traits<char>>);
    std::allocator<int>::allocator();
    std::vector<int,std::allocator<int>>::vector<int>((int)&v15, 100000 * v17 + 1, -1);
    std::allocator<int>::~allocator();
    v26 = 0;
    for ( k = 0; 1 << v17 > k && (unsigned __int8)v26 ^ 1; ++k )
    {
      v24 = 0;
      for ( l = 0; l < (signed int)v17; ++l )
      {
        if ( (k >> l) & 1 )
        {
          v7 = std::vector<int,std::allocator<int>>::operator[]((int)&v16, l);
          v24 += *(_DWORD *)v7;
        }
      }
      if ( *(_DWORD *)std::vector<int,std::allocator<int>>::operator[]((int)&v15, v24) != -1 )
      {
        v26 = 1;
        v22 = 1;
        for ( m = 0; m < (signed int)v17; ++m )
        {
          if ( (k >> m) & 1 )
          {
            if ( v22 )
              v22 = 0;
            else
              std::operator<<<std::char_traits<char>>(&std::cout, " ");
            v8 = std::vector<int,std::allocator<int>>::operator[]((int)&v16, m);
            std::ostream::operator<<(&std::cout, *(_DWORD *)v8);
          }
        }
        std::ostream::operator<<(&std::cout, (const char *)&std::endl<char,std::char_traits<char>>);
        v22 = 1;
        for ( n = 0; n < (signed int)v17; ++n )
        {
          v9 = std::vector<int,std::allocator<int>>::operator[]((int)&v15, v24);
          if ( ((*(_DWORD *)v9 >> n) & 1) != 0 )
          {
            if ( v22 )
              v22 = 0;
            else
              std::operator<<<std::char_traits<char>>(&std::cout, " ");
            v10 = std::vector<int,std::allocator<int>>::operator[]((int)&v16, n);
            std::ostream::operator<<(&std::cout, *(_DWORD *)v10);
          }
        }
        std::ostream::operator<<(&std::cout, (const char *)&std::endl<char,std::char_traits<char>>);
      }
      else
      {
        v11 = std::vector<int,std::allocator<int>>::operator[]((int)&v15, v24);
        *(_DWORD *)v11 = k;
      }
    }
    if ( (unsigned __int8)v26 ^ 1 )
    {
      v12 = std::operator<<<std::char_traits<char>>(&std::cout, "Impossible");
      std::ostream::operator<<(v12, (const char *)&std::endl<char,std::char_traits<char>>);
    }
    std::vector<int,std::allocator<int>>::~vector((int)&v15);
    std::vector<int,std::allocator<int>>::~vector((int)&v16);
  }
  return 0;
}
// 8048700: using guessed type int __cdecl std::ostream::operator<<(_DWORD, _DWORD);
// 8048770: using guessed type int __cdecl std::operator<<<std::char_traits<char>>(_DWORD, _DWORD);
// 8048790: using guessed type int __cdecl std::istream::operator>>(_DWORD, _DWORD);
// 80487A0: using guessed type int std::ostream::operator<<(_DWORD, const char *, ...);

//----- (08048D2E) --------------------------------------------------------
int __cdecl __static_initialization_and_destruction_0(int a1, int a2)
{
  int result; // eax@3

  if ( a1 == 1 && a2 == 0xFFFF )
  {
    std::ios_base::Init::Init((std::ios_base::Init *)&std::__ioinit);
    result = __cxa_atexit((const char *)std::ios_base::Init::~Init, &std::__ioinit, &_dso_handle);
  }
  return result;
}
// 8048710: using guessed type int __cxa_atexit(const char *, ...);

//----- (08048D6D) --------------------------------------------------------
int GLOBAL__sub_I_main()
{
  return __static_initialization_and_destruction_0(1, 0xFFFF);
}

//----- (08048D8A) --------------------------------------------------------
void std::allocator<int>::allocator()
{
  __gnu_cxx::new_allocator<int>::new_allocator();
}

//----- (08048D9E) --------------------------------------------------------
void std::allocator<int>::~allocator()
{
  __gnu_cxx::new_allocator<int>::~new_allocator();
}

//----- (08048DB2) --------------------------------------------------------
int __cdecl std::vector<int,std::allocator<int>>::vector(int a1, unsigned int a2, int a3)
{
  std::_Vector_base<int,std::allocator<int>>::_Vector_base(a1, a2);
  return std::vector<int,std::allocator<int>>::_M_fill_initialize(a1, a2, a3);
}

//----- (08048E0A) --------------------------------------------------------
void __cdecl std::vector<int,std::allocator<int>>::~vector(int a1)
{
  int v1; // ST04_4@1
  int v2; // ST00_4@1

  std::_Vector_base<int,std::allocator<int>>::_M_get_Tp_allocator(a1);
  v1 = *(_DWORD *)(a1 + 4);
  v2 = *(_DWORD *)a1;
  std::_Destroy<int *,int>();
  std::_Vector_base<int,std::allocator<int>>::~_Vector_base(a1);
}

//----- (08048E62) --------------------------------------------------------
int __cdecl std::vector<int,std::allocator<int>>::operator[](int a1, int a2)
{
  return 4 * a2 + *(_DWORD *)a1;
}

//----- (08048E74) --------------------------------------------------------
int __cdecl std::vector<int,std::allocator<int>>::vector<int>(int a1, unsigned int a2, char a3)
{
  std::_Vector_base<int,std::allocator<int>>::_Vector_base(a1);
  return std::vector<int,std::allocator<int>>::_M_initialize_dispatch<int>(a1, a2, a3);
}

//----- (08048ECA) --------------------------------------------------------
void __gnu_cxx::new_allocator<int>::new_allocator()
{
  ;
}

//----- (08048ED0) --------------------------------------------------------
void __gnu_cxx::new_allocator<int>::~new_allocator()
{
  ;
}

//----- (08048ED6) --------------------------------------------------------
void std::_Vector_base<int,std::allocator<int>>::_Vector_impl::~_Vector_impl()
{
  std::allocator<int>::~allocator();
}

//----- (08048EEA) --------------------------------------------------------
int __cdecl std::_Vector_base<int,std::allocator<int>>::_Vector_base(int a1, unsigned int a2)
{
  std::_Vector_base<int,std::allocator<int>>::_Vector_impl::_Vector_impl(a1);
  return std::_Vector_base<int,std::allocator<int>>::_M_create_storage(a1, a2);
}

//----- (08048F34) --------------------------------------------------------
void __cdecl std::_Vector_base<int,std::allocator<int>>::~_Vector_base(int a1)
{
  int v1; // ST08_4@1

  v1 = (*(_DWORD *)(a1 + 8) - *(_DWORD *)a1) >> 2;
  std::_Vector_base<int,std::allocator<int>>::_M_deallocate(a1, *(void **)a1);
  std::_Vector_base<int,std::allocator<int>>::_Vector_impl::~_Vector_impl();
}

//----- (08048F94) --------------------------------------------------------
int __cdecl std::vector<int,std::allocator<int>>::_M_fill_initialize(int a1, int a2, int a3)
{
  int result; // eax@1

  std::_Vector_base<int,std::allocator<int>>::_M_get_Tp_allocator(a1);
  std::__uninitialized_fill_n_a<int *,unsigned int,int,int>(*(_DWORD *)a1, a2, a3);
  result = a1;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a1 + 8);
  return result;
}

//----- (08048FD2) --------------------------------------------------------
int __cdecl std::_Vector_base<int,std::allocator<int>>::_M_get_Tp_allocator(int a1)
{
  return a1;
}

//----- (08048FDA) --------------------------------------------------------
void std::_Destroy<int *,int>()
{
  std::_Destroy<int *>();
}

//----- (08048FF4) --------------------------------------------------------
int __cdecl std::_Vector_base<int,std::allocator<int>>::_Vector_base(int a1)
{
  return std::_Vector_base<int,std::allocator<int>>::_Vector_impl::_Vector_impl(a1);
}

//----- (0804900E) --------------------------------------------------------
int __cdecl std::vector<int,std::allocator<int>>::_M_initialize_dispatch<int>(int a1, unsigned int a2, char a3)
{
  *(_DWORD *)a1 = std::_Vector_base<int,std::allocator<int>>::_M_allocate(a1, a2);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)a1 + 4 * a2;
  return std::vector<int,std::allocator<int>>::_M_fill_initialize(a1, a2, (int)&a3);
}

//----- (0804905A) --------------------------------------------------------
int __cdecl std::_Vector_base<int,std::allocator<int>>::_Vector_impl::_Vector_impl(int a1)
{
  int result; // eax@1

  std::allocator<int>::allocator();
  *(_DWORD *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  result = a1;
  *(_DWORD *)(a1 + 8) = 0;
  return result;
}

//----- (08049092) --------------------------------------------------------
int __cdecl std::_Vector_base<int,std::allocator<int>>::_M_create_storage(int a1, unsigned int a2)
{
  int result; // eax@1

  *(_DWORD *)a1 = std::_Vector_base<int,std::allocator<int>>::_M_allocate(a1, a2);
  *(_DWORD *)(a1 + 4) = *(_DWORD *)a1;
  result = a1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)a1 + 4 * a2;
  return result;
}

//----- (080490D0) --------------------------------------------------------
void __cdecl std::_Vector_base<int,std::allocator<int>>::_M_deallocate(int a1, void *a2)
{
  if ( a2 )
    __gnu_cxx::new_allocator<int>::deallocate(a1, a2);
}

//----- (080490F7) --------------------------------------------------------
int __cdecl std::__uninitialized_fill_n_a<int *,unsigned int,int,int>(int a1, int a2, int a3)
{
  return std::uninitialized_fill_n<int *,unsigned int,int>(a1, a2, a3);
}

//----- (08049118) --------------------------------------------------------
void std::_Destroy<int *>()
{
  std::_Destroy_aux<true>::__destroy<int *>();
}

//----- (08049132) --------------------------------------------------------
int __cdecl std::_Vector_base<int,std::allocator<int>>::_M_allocate(int a1, unsigned int a2)
{
  int result; // eax@2

  if ( a2 )
    result = __gnu_cxx::new_allocator<int>::allocate(a1, a2);
  else
    result = 0;
  return result;
}

//----- (08049162) --------------------------------------------------------
void std::allocator<int>::allocator()
{
  __gnu_cxx::new_allocator<int>::new_allocator();
}

//----- (0804917C) --------------------------------------------------------
void __cdecl __gnu_cxx::new_allocator<int>::deallocate(int a1, void *a2)
{
  operator delete(a2);
}

//----- (0804918F) --------------------------------------------------------
int __cdecl std::uninitialized_fill_n<int *,unsigned int,int>(int a1, int a2, int a3)
{
  return std::__uninitialized_fill_n<true>::__uninit_fill_n<int *,unsigned int,int>(a1, a2, a3);
}

//----- (080491B0) --------------------------------------------------------
void std::_Destroy_aux<true>::__destroy<int *>()
{
  ;
}

//----- (080491B6) --------------------------------------------------------
int __cdecl __gnu_cxx::new_allocator<int>::allocate(int a1, unsigned int a2)
{
  if ( __gnu_cxx::new_allocator<int>::max_size() < a2 )
    std::__throw_bad_alloc();
  return operator new(4 * a2);
}

//----- (080491E6) --------------------------------------------------------
void __gnu_cxx::new_allocator<int>::new_allocator()
{
  ;
}

//----- (080491EB) --------------------------------------------------------
int __cdecl std::__uninitialized_fill_n<true>::__uninit_fill_n<int *,unsigned int,int>(int a1, int a2, int a3)
{
  return std::fill_n<int *,unsigned int,int>(a1, a2, a3);
}

//----- (0804920C) --------------------------------------------------------
signed int __gnu_cxx::new_allocator<int>::max_size()
{
  return 0x3FFFFFFF;
}

//----- (08049216) --------------------------------------------------------
int __cdecl std::fill_n<int *,unsigned int,int>(int a1, int a2, int a3)
{
  int v3; // eax@1

  v3 = std::__niter_base<int *>(a1);
  return std::__fill_n_a<int *,unsigned int,int>(v3, a2, a3);
}

//----- (0804923F) --------------------------------------------------------
int __cdecl std::__niter_base<int *>(int a1)
{
  return std::_Iter_base<int *,false>::_S_base(a1);
}

//----- (08049252) --------------------------------------------------------
int __cdecl std::__fill_n_a<int *,unsigned int,int>(int a1, int a2, int a3)
{
  int v4; // [sp+8h] [bp-8h]@1
  int v5; // [sp+Ch] [bp-4h]@1

  v4 = *(_DWORD *)a3;
  v5 = a2;
  while ( v5 )
  {
    *(_DWORD *)a1 = v4;
    --v5;
    a1 += 4;
  }
  return a1;
}

//----- (08049282) --------------------------------------------------------
int __cdecl std::_Iter_base<int *,false>::_S_base(int a1)
{
  return a1;
}

//----- (08049290) --------------------------------------------------------
void _libc_csu_fini()
{
  ;
}

//----- (080492A0) --------------------------------------------------------
void __cdecl _libc_csu_init()
{
  init_proc();
}

//----- (080492FA) --------------------------------------------------------
void _i686_get_pc_thunk_bx()
{
  ;
}

//----- (08049300) --------------------------------------------------------
int __fastcall _do_global_ctors_aux(int a1, int a2)
{
  int (**v2)(); // ebx@1
  void (__cdecl *v3)(); // eax@1
  int v5; // [sp-4h] [bp-8h]@1

  v5 = a2;
  v2 = &off_804AA54;
  v3 = (void (__cdecl *)())off_804AA54;
  if ( off_804AA54 != (int (*)())-1 )
  {
    do
    {
      --v2;
      v3();
      v3 = (void (__cdecl *)())*v2;
    }
    while ( *v2 != (int (*)())-1 );
  }
  return v5;
}
// 804AA54: using guessed type int (*off_804AA54)();

//----- (08049328) --------------------------------------------------------
void term_proc()
{
  _do_global_dtors_aux();
}

#error "There were 1 decompilation failure(s) on 48 function(s)"
