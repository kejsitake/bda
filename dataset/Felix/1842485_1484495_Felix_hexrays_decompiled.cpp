/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2014 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

int init_proc();
// int __cxa_atexit(const char *, ...); weak
// int __gmon_start__(void); weak
// void __cdecl operator delete(void *); idb
// _DWORD std::ios_base::Init::Init(std::ios_base::Init *this); idb
// _DWORD __cdecl std::ios_base::Init::~Init(std::ios_base::Init *__hidden this); idb
// _DWORD __cdecl operator new(unsigned int); idb
// int __stdcall std::istream::operator>>(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD); weak
// _DWORD std::__throw_bad_alloc(void); idb
signed int deregister_tm_clones();
int register_tm_clones();
void _do_global_dtors_aux();
int frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
int __cdecl __static_initialization_and_destruction_0(int a1, int a2);
int GLOBAL__sub_I_main();
int __cdecl std::__lg(int a1);
void *__cdecl operator new(unsigned int a1, void *a2);
int __cdecl std::pair<int,int>::pair(int a1);
void std::allocator<std::pair<int,int>>::allocator();
void std::allocator<std::pair<int,int>>::~allocator();
int __cdecl std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::vector(int a1, unsigned int a2, int a3);
void __cdecl std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::~vector(int a1);
int __cdecl std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::operator[](int a1, int a2);
// int __userpurge std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::begin@<eax>(int a1, int a2);
// int __userpurge std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::end@<eax>(int a1, int a2);
bool __cdecl std::sort<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(int a1, int a2);
int __cdecl std::max<int>(int a1, int a2);
int __cdecl std::pair<int,int>::pair(int a1, int a2, int a3);
void __gnu_cxx::new_allocator<std::pair<int,int>>::new_allocator();
void __gnu_cxx::new_allocator<std::pair<int,int>>::~new_allocator();
void std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_Vector_impl::~_Vector_impl();
int __cdecl std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_Vector_base(int a1, unsigned int a2);
void __cdecl std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::~_Vector_base(int a1);
int __cdecl std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_fill_initialize(int a1, int a2, int a3);
int __cdecl std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_get_Tp_allocator(int a1);
void std::_Destroy<std::pair<int,int> *,std::pair<int,int>>();
int __cdecl __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::__normal_iterator(int a1, int a2);
bool __cdecl __gnu_cxx::operator!=<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(int a1, int a2);
int __cdecl __gnu_cxx::operator-<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(int a1, int a2);
bool __cdecl std::__introsort_loop<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,int>(char a1, int a2, int a3);
bool __cdecl std::__final_insertion_sort<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(int a1, char a2);
int __cdecl std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_Vector_impl::_Vector_impl(int a1);
int __cdecl std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_create_storage(int a1, unsigned int a2);
void __cdecl std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_deallocate(int a1, void *a2);
void *__cdecl std::__uninitialized_fill_n_a<std::pair<int,int> *,unsigned int,std::pair<int,int>,std::pair<int,int>>(int a1, int a2, int a3);
void std::_Destroy<std::pair<int,int> *>();
int __cdecl __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::base(int a1);
bool __cdecl std::partial_sort<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, int a2, char a3);
// int __userpurge std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>@<eax>(int a1, char a2, char a3);
// int __userpurge __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+@<eax>(int a1, int a2, int a3);
bool __cdecl std::__insertion_sort<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(int a1, char a2);
bool __cdecl std::__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(int a1, char a2);
void std::allocator<std::pair<int,int>>::allocator();
int __cdecl std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_allocate(int a1, unsigned int a2);
void __cdecl __gnu_cxx::new_allocator<std::pair<int,int>>::deallocate(int a1, void *a2);
void *__cdecl std::uninitialized_fill_n<std::pair<int,int> *,unsigned int,std::pair<int,int>>(int a1, int a2, int a3);
void std::_Destroy_aux<true>::__destroy<std::pair<int,int> *>();
bool __cdecl std::__heap_select<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, int a2, char a3);
bool __cdecl std::sort_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, char a2);
// int __userpurge __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator-@<eax>(int a1, int a2, int a3);
char __cdecl std::__move_median_first<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, char a2, char a3);
int __cdecl __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*(int a1);
// int __userpurge std::__unguarded_partition<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,std::pair<int,int>>@<eax>(int a1, int a2, char a3, int a4);
bool __cdecl __gnu_cxx::operator==<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(int a1, int a2);
int __cdecl __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator++(int a1);
bool __cdecl std::operator<<int,int>(int a1, int a2);
// int __userpurge std::copy_backward<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>@<eax>(int a1, int a2, int a3, char a4);
int __cdecl std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(int a1);
void __gnu_cxx::new_allocator<std::pair<int,int>>::new_allocator();
int __cdecl __gnu_cxx::new_allocator<std::pair<int,int>>::allocate(int a1, unsigned int a2);
void *__cdecl std::__uninitialized_fill_n<false>::__uninit_fill_n<std::pair<int,int> *,unsigned int,std::pair<int,int>>(int a1, int a2, int a3);
char __cdecl std::make_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, char a2);
bool __cdecl __gnu_cxx::operator<<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(int a1, int a2);
int __cdecl std::__pop_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, char a2, char a3);
int __cdecl __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator--(int a1);
int __cdecl std::iter_swap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, char a2);
// int __userpurge std::__miter_base<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>@<eax>(int a1, int a2);
// int __userpurge std::__copy_move_backward_a2<false,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>@<eax>(int a1, char a2, char a3, char a4);
signed int __gnu_cxx::new_allocator<std::pair<int,int>>::max_size();
int __cdecl std::__addressof<std::pair<int,int>>(int a1);
void *__cdecl std::_Construct<std::pair<int,int>,std::pair<int,int>>(void *a1, int a2);
int __cdecl std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,int,std::pair<int,int>>(char a1, int a2, int a3, int a4, int a5);
int __cdecl std::__iter_swap<true>::iter_swap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, char a2);
// int __userpurge std::_Iter_base<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,false>::_S_base@<eax>(int a1, int a2);
int __cdecl std::__niter_base<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1);
int __cdecl std::__copy_move_backward_a<false,std::pair<int,int> *,std::pair<int,int> *>(int a1, int a2, int a3);
int __cdecl std::__push_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,int,std::pair<int,int>>(char a1, int a2, int a3, int a4, int a5);
int __cdecl std::swap<std::pair<int,int>>(int a1, int a2);
int __cdecl std::_Iter_base<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,true>::_S_base(char a1);
int __cdecl std::__copy_move_backward<false,false,std::random_access_iterator_tag>::__copy_move_b<std::pair<int,int> *,std::pair<int,int> *>(int a1, int a2, int a3);
void _libc_csu_fini(); // idb
void __cdecl _libc_csu_init();
void _i686_get_pc_thunk_bx();
int __fastcall _do_global_ctors_aux(int a1, int a2);
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

int (*off_804C2F4)() = &GLOBAL__sub_I_main; // weak
int _DTOR_LIST__[] = { 4294967295 }; // weak
_UNKNOWN _DTOR_END__; // weak
_UNKNOWN _dso_handle; // weak
char completed_3328; // weak
int dtor_idx_3330; // weak
_UNKNOWN std::__ioinit; // weak
// extern _UNKNOWN _gmon_start__; weak


//----- (080486E4) --------------------------------------------------------
int init_proc()
{
  int v0; // edx@3
  int v1; // ecx@3
  int v3; // [sp+0h] [bp-8h]@0

  if ( &_gmon_start__ )
    __gmon_start__();
  frame_dummy();
  _do_global_ctors_aux(v1, v0);
  return v3;
}
// 8048750: using guessed type int __gmon_start__(void);

//----- (08048820) --------------------------------------------------------
#error "8048823: positive sp value has been found (funcsize=2)"

//----- (08048850) --------------------------------------------------------
signed int deregister_tm_clones()
{
  return 3;
}
// 8048850: could not find valid save-restore pair for ebp

//----- (08048880) --------------------------------------------------------
int register_tm_clones()
{
  return 0;
}
// 8048880: could not find valid save-restore pair for ebp

//----- (080488C0) --------------------------------------------------------
void _do_global_dtors_aux()
{
  int v0; // eax@2
  int i; // ebx@2

  if ( !completed_3328 )
  {
    v0 = dtor_idx_3330;
    for ( i = ((&_DTOR_END__ - (_UNKNOWN *)_DTOR_LIST__) >> 2) - 1; dtor_idx_3330 < (unsigned int)i; v0 = dtor_idx_3330 )
    {
      dtor_idx_3330 = v0 + 1;
      ((void (*)(void))_DTOR_LIST__[v0 + 1])();
    }
    deregister_tm_clones();
    completed_3328 = 1;
  }
}
// 804C2FC: using guessed type int _DTOR_LIST__[];
// 804C60C: using guessed type char completed_3328;
// 804C610: using guessed type int dtor_idx_3330;

//----- (08048910) --------------------------------------------------------
int frame_dummy()
{
  return register_tm_clones();
}
// 8048910: could not find valid save-restore pair for ebp

//----- (08048940) --------------------------------------------------------
#error "80489B9: call analysis failed (funcsize=337)"

//----- (08048F17) --------------------------------------------------------
int __cdecl __static_initialization_and_destruction_0(int a1, int a2)
{
  int result; // eax@3

  if ( a1 == 1 && a2 == 0xFFFF )
  {
    std::ios_base::Init::Init((std::ios_base::Init *)&std::__ioinit);
    result = __cxa_atexit((const char *)std::ios_base::Init::~Init, &std::__ioinit, &_dso_handle);
  }
  return result;
}
// 8048740: using guessed type int __cxa_atexit(const char *, ...);

//----- (08048F56) --------------------------------------------------------
int GLOBAL__sub_I_main()
{
  return __static_initialization_and_destruction_0(1, 0xFFFF);
}

//----- (08048F72) --------------------------------------------------------
int __cdecl std::__lg(int a1)
{
  _EAX = a1;
  __asm { bsr     eax, eax }
  return 32 - (_EAX ^ 0x1F) - 1;
}

//----- (08048F8A) --------------------------------------------------------
void *__cdecl operator new(unsigned int a1, void *a2)
{
  return a2;
}

//----- (08048F92) --------------------------------------------------------
int __cdecl std::pair<int,int>::pair(int a1)
{
  int result; // eax@1

  *(_DWORD *)a1 = 0;
  result = a1;
  *(_DWORD *)(a1 + 4) = 0;
  return result;
}

//----- (08048FAA) --------------------------------------------------------
void std::allocator<std::pair<int,int>>::allocator()
{
  __gnu_cxx::new_allocator<std::pair<int,int>>::new_allocator();
}

//----- (08048FBE) --------------------------------------------------------
void std::allocator<std::pair<int,int>>::~allocator()
{
  __gnu_cxx::new_allocator<std::pair<int,int>>::~new_allocator();
}

//----- (08048FD2) --------------------------------------------------------
int __cdecl std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::vector(int a1, unsigned int a2, int a3)
{
  std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_Vector_base(a1, a2);
  return std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_fill_initialize(a1, a2, a3);
}

//----- (0804902A) --------------------------------------------------------
void __cdecl std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::~vector(int a1)
{
  int v1; // ST04_4@1
  int v2; // ST00_4@1

  std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_get_Tp_allocator(a1);
  v1 = *(_DWORD *)(a1 + 4);
  v2 = *(_DWORD *)a1;
  std::_Destroy<std::pair<int,int> *,std::pair<int,int>>();
  std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::~_Vector_base(a1);
}

//----- (08049082) --------------------------------------------------------
int __cdecl std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::operator[](int a1, int a2)
{
  return 8 * a2 + *(_DWORD *)a1;
}

//----- (08049094) --------------------------------------------------------
int __userpurge std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::begin@<eax>(int a1, int a2)
{
  __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::__normal_iterator(
    a1,
    a2);
  return a1;
}

//----- (080490B4) --------------------------------------------------------
int __userpurge std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::end@<eax>(int a1, int a2)
{
  __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::__normal_iterator(
    a1,
    a2 + 4);
  return a1;
}

//----- (080490D6) --------------------------------------------------------
bool __cdecl std::sort<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(int a1, int a2)
{
  bool result; // al@1
  int v3; // eax@2
  int v4; // eax@2

  result = __gnu_cxx::operator!=<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(
             (int)&a1,
             (int)&a2);
  if ( result )
  {
    v3 = __gnu_cxx::operator-<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(
           (int)&a2,
           (int)&a1);
    v4 = std::__lg(v3);
    std::__introsort_loop<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,int>(
      a1,
      a2,
      2 * v4);
    result = std::__final_insertion_sort<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
               a1,
               a2);
  }
  return result;
}

//----- (08049138) --------------------------------------------------------
int __cdecl std::max<int>(int a1, int a2)
{
  int result; // eax@2

  if ( *(_DWORD *)a1 >= *(_DWORD *)a2 )
    result = a1;
  else
    result = a2;
  return result;
}

//----- (08049154) --------------------------------------------------------
int __cdecl std::pair<int,int>::pair(int a1, int a2, int a3)
{
  int result; // eax@1

  *(_DWORD *)a1 = *(_DWORD *)a2;
  result = a1;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)a3;
  return result;
}

//----- (0804916E) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<int,int>>::new_allocator()
{
  ;
}

//----- (08049174) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<int,int>>::~new_allocator()
{
  ;
}

//----- (0804917A) --------------------------------------------------------
void std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_Vector_impl::~_Vector_impl()
{
  std::allocator<std::pair<int,int>>::~allocator();
}

//----- (0804918E) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_Vector_base(int a1, unsigned int a2)
{
  std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_Vector_impl::_Vector_impl(a1);
  return std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_create_storage(a1, a2);
}

//----- (080491D8) --------------------------------------------------------
void __cdecl std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::~_Vector_base(int a1)
{
  int v1; // ST08_4@1

  v1 = (*(_DWORD *)(a1 + 8) - *(_DWORD *)a1) >> 3;
  std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_deallocate(a1, *(void **)a1);
  std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_Vector_impl::~_Vector_impl();
}

//----- (08049238) --------------------------------------------------------
int __cdecl std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_fill_initialize(int a1, int a2, int a3)
{
  int result; // eax@1

  std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_get_Tp_allocator(a1);
  std::__uninitialized_fill_n_a<std::pair<int,int> *,unsigned int,std::pair<int,int>,std::pair<int,int>>(
    *(_DWORD *)a1,
    a2,
    a3);
  result = a1;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a1 + 8);
  return result;
}

//----- (08049276) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_get_Tp_allocator(int a1)
{
  return a1;
}

//----- (0804927E) --------------------------------------------------------
void std::_Destroy<std::pair<int,int> *,std::pair<int,int>>()
{
  std::_Destroy<std::pair<int,int> *>();
}

//----- (08049298) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::__normal_iterator(int a1, int a2)
{
  int result; // eax@1

  result = a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  return result;
}

//----- (080492A7) --------------------------------------------------------
bool __cdecl __gnu_cxx::operator!=<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(int a1, int a2)
{
  int v2; // ebx@1

  v2 = *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::base(a1);
  return v2 != *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::base(a2);
}

//----- (080492D3) --------------------------------------------------------
int __cdecl __gnu_cxx::operator-<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(int a1, int a2)
{
  int v2; // ebx@1

  v2 = *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::base(a1);
  return (v2
        - *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::base(a2)) >> 3;
}

//----- (08049303) --------------------------------------------------------
bool __cdecl std::__introsort_loop<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,int>(char a1, int a2, int a3)
{
  bool result; // al@3
  int v4; // [sp+1Ch] [bp-Ch]@4

  while ( 1 )
  {
    result = __gnu_cxx::operator-<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(
               (int)&a2,
               (int)&a1) > 16;
    if ( !result )
      break;
    if ( !a3 )
      return std::partial_sort<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
               a1,
               a2,
               a2);
    --a3;
    std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
      (int)&v4,
      a1,
      a2);
    std::__introsort_loop<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,int>(
      v4,
      a2,
      a3);
    a2 = v4;
  }
  return result;
}

//----- (08049392) --------------------------------------------------------
bool __cdecl std::__final_insertion_sort<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(int a1, char a2)
{
  bool result; // al@2
  int v3; // [sp+10h] [bp-18h]@2
  int v4; // [sp+14h] [bp-14h]@2
  int v5; // [sp+18h] [bp-10h]@2
  int v6; // [sp+1Ch] [bp-Ch]@2

  if ( __gnu_cxx::operator-<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(
         (int)&a2,
         (int)&a1) > 16 )
  {
    v3 = 16;
    __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
      (int)&v4,
      (int)&a1,
      (int)&v3);
    std::__insertion_sort<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
      a1,
      v4);
    v5 = 16;
    __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
      (int)&v6,
      (int)&a1,
      (int)&v5);
    result = std::__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
               v6,
               a2);
  }
  else
  {
    result = std::__insertion_sort<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
               a1,
               a2);
  }
  return result;
}

//----- (0804944A) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_Vector_impl::_Vector_impl(int a1)
{
  int result; // eax@1

  std::allocator<std::pair<int,int>>::allocator();
  *(_DWORD *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  result = a1;
  *(_DWORD *)(a1 + 8) = 0;
  return result;
}

//----- (08049482) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_create_storage(int a1, unsigned int a2)
{
  int result; // eax@1

  *(_DWORD *)a1 = std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_allocate(a1, a2);
  *(_DWORD *)(a1 + 4) = *(_DWORD *)a1;
  result = a1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)a1 + 8 * a2;
  return result;
}

//----- (080494C0) --------------------------------------------------------
void __cdecl std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_deallocate(int a1, void *a2)
{
  if ( a2 )
    __gnu_cxx::new_allocator<std::pair<int,int>>::deallocate(a1, a2);
}

//----- (080494E7) --------------------------------------------------------
void *__cdecl std::__uninitialized_fill_n_a<std::pair<int,int> *,unsigned int,std::pair<int,int>,std::pair<int,int>>(int a1, int a2, int a3)
{
  return std::uninitialized_fill_n<std::pair<int,int> *,unsigned int,std::pair<int,int>>(a1, a2, a3);
}

//----- (08049508) --------------------------------------------------------
void std::_Destroy<std::pair<int,int> *>()
{
  std::_Destroy_aux<true>::__destroy<std::pair<int,int> *>();
}

//----- (08049522) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::base(int a1)
{
  return a1;
}

//----- (0804952A) --------------------------------------------------------
bool __cdecl std::partial_sort<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, int a2, char a3)
{
  std::__heap_select<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
    a1,
    a2,
    a3);
  return std::sort_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
           a1,
           a2);
}

//----- (0804955D) --------------------------------------------------------
int __userpurge std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>@<eax>(int a1, char a2, char a3)
{
  int v3; // ebx@1
  int v5; // [sp+18h] [bp-20h]@1
  int v6; // [sp+1Ch] [bp-1Ch]@1
  int v7; // [sp+20h] [bp-18h]@1
  int v8; // [sp+24h] [bp-14h]@1
  int v9; // [sp+28h] [bp-10h]@1
  int v10; // [sp+2Ch] [bp-Ch]@1

  v6 = __gnu_cxx::operator-<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(
         (int)&a3,
         (int)&a2)
     / 2;
  __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
    (int)&v5,
    (int)&a2,
    (int)&v6);
  v7 = 1;
  __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator-(
    (int)&v8,
    (int)&a3,
    (int)&v7);
  std::__move_median_first<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
    a2,
    v5,
    v8);
  v3 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a2);
  v9 = 1;
  __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
    (int)&v10,
    (int)&a2,
    (int)&v9);
  std::__unguarded_partition<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,std::pair<int,int>>(
    a1,
    v10,
    a3,
    v3);
  return a1;
}

//----- (08049640) --------------------------------------------------------
int __userpurge __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+@<eax>(int a1, int a2, int a3)
{
  int v4; // [sp+1Ch] [bp-Ch]@1

  v4 = *(_DWORD *)a2 + 8 * *(_DWORD *)a3;
  __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::__normal_iterator(
    a1,
    (int)&v4);
  return a1;
}

//----- (08049671) --------------------------------------------------------
bool __cdecl std::__insertion_sort<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(int a1, char a2)
{
  bool result; // al@1
  int v3; // ebx@3
  int v4; // eax@3
  int v5; // eax@4
  int v6; // ST14_4@4
  int v7; // ST18_4@4
  int v8; // eax@4
  int v9; // [sp+1Ch] [bp-1Ch]@2
  int v10; // [sp+20h] [bp-18h]@2
  char v11; // [sp+24h] [bp-14h]@4
  int v12; // [sp+28h] [bp-10h]@4
  int v13; // [sp+2Ch] [bp-Ch]@4

  result = __gnu_cxx::operator==<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(
             (int)&a1,
             (int)&a2);
  if ( !result )
  {
    v10 = 1;
    __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
      (int)&v9,
      (int)&a1,
      (int)&v10);
    while ( 1 )
    {
      result = __gnu_cxx::operator!=<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(
                 (int)&v9,
                 (int)&a2);
      if ( !result )
        break;
      v3 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a1);
      v4 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&v9);
      if ( std::operator<<int,int>(v4, v3) )
      {
        v5 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&v9);
        v6 = *(_DWORD *)v5;
        v7 = *(_DWORD *)(v5 + 4);
        v12 = 1;
        __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
          (int)&v13,
          (int)&v9,
          (int)&v12);
        std::copy_backward<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
          (int)&v11,
          a1,
          v9,
          v13);
        v8 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a1);
        *(_DWORD *)v8 = v6;
        *(_DWORD *)(v8 + 4) = v7;
      }
      else
      {
        std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(v9);
      }
      __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator++((int)&v9);
    }
  }
  return result;
}

//----- (0804979D) --------------------------------------------------------
bool __cdecl std::__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(int a1, char a2)
{
  bool result; // al@3
  int i; // [sp+1Ch] [bp-Ch]@1

  for ( i = a1;
        ;
        __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator++((int)&i) )
  {
    result = __gnu_cxx::operator!=<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(
               (int)&i,
               (int)&a2);
    if ( !result )
      break;
    std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(i);
  }
  return result;
}

//----- (080497E4) --------------------------------------------------------
void std::allocator<std::pair<int,int>>::allocator()
{
  __gnu_cxx::new_allocator<std::pair<int,int>>::new_allocator();
}

//----- (080497FE) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<int,int>,std::allocator<std::pair<int,int>>>::_M_allocate(int a1, unsigned int a2)
{
  int result; // eax@2

  if ( a2 )
    result = __gnu_cxx::new_allocator<std::pair<int,int>>::allocate(a1, a2);
  else
    result = 0;
  return result;
}

//----- (0804982E) --------------------------------------------------------
void __cdecl __gnu_cxx::new_allocator<std::pair<int,int>>::deallocate(int a1, void *a2)
{
  operator delete(a2);
}

//----- (08049841) --------------------------------------------------------
void *__cdecl std::uninitialized_fill_n<std::pair<int,int> *,unsigned int,std::pair<int,int>>(int a1, int a2, int a3)
{
  return std::__uninitialized_fill_n<false>::__uninit_fill_n<std::pair<int,int> *,unsigned int,std::pair<int,int>>(
           a1,
           a2,
           a3);
}

//----- (08049862) --------------------------------------------------------
void std::_Destroy_aux<true>::__destroy<std::pair<int,int> *>()
{
  ;
}

//----- (08049867) --------------------------------------------------------
bool __cdecl std::__heap_select<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, int a2, char a3)
{
  int v3; // ebx@2
  int v4; // eax@2
  bool result; // al@5
  int i; // [sp+1Ch] [bp-Ch]@1

  std::make_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
    a1,
    a2);
  for ( i = a2;
        ;
        __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator++((int)&i) )
  {
    result = __gnu_cxx::operator<<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(
               (int)&i,
               (int)&a3);
    if ( !result )
      break;
    v3 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a1);
    v4 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&i);
    if ( std::operator<<int,int>(v4, v3) )
      std::__pop_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
        a1,
        a2,
        i);
  }
  return result;
}

//----- (080498FA) --------------------------------------------------------
bool __cdecl std::sort_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, char a2)
{
  bool result; // al@3

  while ( 1 )
  {
    result = __gnu_cxx::operator-<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(
               (int)&a2,
               (int)&a1) > 1;
    if ( !result )
      break;
    __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator--((int)&a2);
    std::__pop_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
      a1,
      a2,
      a2);
  }
  return result;
}

//----- (08049944) --------------------------------------------------------
int __userpurge __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator-@<eax>(int a1, int a2, int a3)
{
  int v4; // [sp+1Ch] [bp-Ch]@1

  v4 = *(_DWORD *)a2 + -8 * *(_DWORD *)a3;
  __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::__normal_iterator(
    a1,
    (int)&v4);
  return a1;
}

//----- (08049977) --------------------------------------------------------
char __cdecl std::__move_median_first<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, char a2, char a3)
{
  int v3; // ebx@1
  int v4; // eax@1
  int v5; // ebx@2
  int v6; // eax@2
  char result; // al@3
  int v8; // ebx@4
  int v9; // eax@4
  int v10; // ebx@6
  int v11; // eax@6
  int v12; // ebx@7
  int v13; // eax@7

  v3 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a2);
  v4 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a1);
  if ( std::operator<<int,int>(v4, v3) )
  {
    v5 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a3);
    v6 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a2);
    if ( std::operator<<int,int>(v6, v5) )
    {
      result = std::iter_swap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
                 a1,
                 a2);
    }
    else
    {
      v8 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a3);
      v9 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a1);
      result = std::operator<<int,int>(v9, v8);
      if ( result )
        result = std::iter_swap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
                   a1,
                   a3);
    }
  }
  else
  {
    v10 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a3);
    v11 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a1);
    result = std::operator<<int,int>(v11, v10);
    if ( !result )
    {
      v12 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a3);
      v13 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a2);
      if ( std::operator<<int,int>(v13, v12) )
        result = std::iter_swap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
                   a1,
                   a3);
      else
        result = std::iter_swap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
                   a1,
                   a2);
    }
  }
  return result;
}

//----- (08049AA4) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*(int a1)
{
  return *(_DWORD *)a1;
}

//----- (08049AAE) --------------------------------------------------------
int __userpurge std::__unguarded_partition<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,std::pair<int,int>>@<eax>(int a1, int a2, char a3, int a4)
{
  int v4; // eax@3
  int v5; // eax@6

  while ( 1 )
  {
    while ( 1 )
    {
      v4 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a2);
      if ( !std::operator<<int,int>(v4, a4) )
        break;
      __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator++((int)&a2);
    }
    __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator--((int)&a3);
    while ( 1 )
    {
      v5 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a3);
      if ( !std::operator<<int,int>(a4, v5) )
        break;
      __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator--((int)&a3);
    }
    if ( !__gnu_cxx::operator<<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(
            (int)&a2,
            (int)&a3) )
      break;
    std::iter_swap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
      a2,
      a3);
    __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator++((int)&a2);
  }
  *(_DWORD *)a1 = a2;
  return a1;
}

//----- (08049B62) --------------------------------------------------------
bool __cdecl __gnu_cxx::operator==<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(int a1, int a2)
{
  int v2; // ebx@1

  v2 = *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::base(a1);
  return v2 == *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::base(a2);
}

//----- (08049B8E) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator++(int a1)
{
  *(_DWORD *)a1 += 8;
  return a1;
}

//----- (08049BA3) --------------------------------------------------------
bool __cdecl std::operator<<int,int>(int a1, int a2)
{
  return *(_DWORD *)a1 < *(_DWORD *)a2 || *(_DWORD *)a2 >= *(_DWORD *)a1 && *(_DWORD *)(a1 + 4) < *(_DWORD *)(a2 + 4);
}

//----- (08049BDA) --------------------------------------------------------
int __userpurge std::copy_backward<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>@<eax>(int a1, int a2, int a3, char a4)
{
  int v5; // [sp+18h] [bp-10h]@1
  int v6; // [sp+1Ch] [bp-Ch]@1

  std::__miter_base<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
    (int)&v5,
    a3);
  std::__miter_base<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
    (int)&v6,
    a2);
  std::__copy_move_backward_a2<false,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
    a1,
    v6,
    v5,
    a4);
  return a1;
}

//----- (08049C34) --------------------------------------------------------
int __cdecl std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(int a1)
{
  int v1; // eax@1
  int v2; // edx@1
  int v3; // ebx@2
  int v4; // eax@2
  int v5; // edx@2
  int v6; // eax@3
  int v7; // ecx@4
  int result; // eax@4
  int v9; // edx@4
  int v10; // [sp+14h] [bp-14h]@1
  int v11; // [sp+18h] [bp-10h]@1
  int v12; // [sp+1Ch] [bp-Ch]@1

  v1 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a1);
  v2 = *(_DWORD *)(v1 + 4);
  v11 = *(_DWORD *)v1;
  v12 = v2;
  v10 = a1;
  __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator--((int)&v10);
  while ( 1 )
  {
    v6 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&v10);
    if ( !std::operator<<int,int>((int)&v11, v6) )
      break;
    v3 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a1);
    v4 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&v10);
    v5 = *(_DWORD *)(v4 + 4);
    *(_DWORD *)v3 = *(_DWORD *)v4;
    *(_DWORD *)(v3 + 4) = v5;
    a1 = v10;
    __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator--((int)&v10);
  }
  v7 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a1);
  result = v11;
  v9 = v12;
  *(_DWORD *)v7 = v11;
  *(_DWORD *)(v7 + 4) = v9;
  return result;
}

//----- (08049CD4) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<int,int>>::new_allocator()
{
  ;
}

//----- (08049CDA) --------------------------------------------------------
int __cdecl __gnu_cxx::new_allocator<std::pair<int,int>>::allocate(int a1, unsigned int a2)
{
  if ( __gnu_cxx::new_allocator<std::pair<int,int>>::max_size() < a2 )
    std::__throw_bad_alloc();
  return operator new(8 * a2);
}

//----- (08049D0A) --------------------------------------------------------
void *__cdecl std::__uninitialized_fill_n<false>::__uninit_fill_n<std::pair<int,int> *,unsigned int,std::pair<int,int>>(int a1, int a2, int a3)
{
  void *result; // eax@1
  int v4; // eax@2
  int v5; // [sp+1Ch] [bp-Ch]@1

  result = (void *)a1;
  v5 = a1;
  while ( a2 )
  {
    v4 = std::__addressof<std::pair<int,int>>(v5);
    result = std::_Construct<std::pair<int,int>,std::pair<int,int>>((void *)v4, a3);
    --a2;
    v5 += 8;
  }
  return result;
}

//----- (08049D41) --------------------------------------------------------
char __cdecl std::make_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, char a2)
{
  char result; // al@1
  int v3; // eax@3
  int i; // [sp+34h] [bp-14h]@2
  char v5; // [sp+38h] [bp-10h]@3
  int v6; // [sp+3Ch] [bp-Ch]@2

  result = __gnu_cxx::operator-<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(
             (int)&a2,
             (int)&a1) <= 1;
  if ( !result )
  {
    v6 = __gnu_cxx::operator-<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(
           (int)&a2,
           (int)&a1);
    for ( i = (v6 - 2) / 2; ; --i )
    {
      __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
        (int)&v5,
        (int)&a1,
        (int)&i);
      v3 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&v5);
      std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,int,std::pair<int,int>>(
        a1,
        i,
        v6,
        *(_DWORD *)v3,
        *(_DWORD *)(v3 + 4));
      result = i;
      if ( !i )
        break;
    }
  }
  return result;
}

//----- (08049E06) --------------------------------------------------------
bool __cdecl __gnu_cxx::operator<<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(int a1, int a2)
{
  unsigned int v2; // ebx@1

  v2 = *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::base(a1);
  return v2 < *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::base(a2);
}

//----- (08049E32) --------------------------------------------------------
int __cdecl std::__pop_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, char a2, char a3)
{
  int v3; // eax@1
  int v4; // ST28_4@1
  int v5; // ST2C_4@1
  int v6; // ebx@1
  int v7; // eax@1
  int v8; // edx@1
  int v9; // eax@1

  v3 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a3);
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  v6 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a3);
  v7 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a1);
  v8 = *(_DWORD *)(v7 + 4);
  *(_DWORD *)v6 = *(_DWORD *)v7;
  *(_DWORD *)(v6 + 4) = v8;
  v9 = __gnu_cxx::operator-<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>(
         (int)&a2,
         (int)&a1);
  return std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,int,std::pair<int,int>>(
           a1,
           0,
           v9,
           v4,
           v5);
}

//----- (08049EBA) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator--(int a1)
{
  *(_DWORD *)a1 -= 8;
  return a1;
}

//----- (08049ECF) --------------------------------------------------------
int __cdecl std::iter_swap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, char a2)
{
  return std::__iter_swap<true>::iter_swap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(
           a1,
           a2);
}

//----- (08049EE9) --------------------------------------------------------
int __userpurge std::__miter_base<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>@<eax>(int a1, int a2)
{
  std::_Iter_base<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,false>::_S_base(
    a1,
    a2);
  return a1;
}

//----- (08049F0B) --------------------------------------------------------
int __userpurge std::__copy_move_backward_a2<false,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>@<eax>(int a1, char a2, char a3, char a4)
{
  int v4; // esi@1
  int v5; // ebx@1
  int v6; // eax@1
  int v8; // [sp+1Ch] [bp-Ch]@1

  v4 = std::__niter_base<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(a4);
  v5 = std::__niter_base<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(a3);
  v6 = std::__niter_base<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(a2);
  v8 = std::__copy_move_backward_a<false,std::pair<int,int> *,std::pair<int,int> *>(v6, v5, v4);
  __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::__normal_iterator(
    a1,
    (int)&v8);
  return a1;
}

//----- (08049F6A) --------------------------------------------------------
signed int __gnu_cxx::new_allocator<std::pair<int,int>>::max_size()
{
  return 0x1FFFFFFF;
}

//----- (08049F74) --------------------------------------------------------
int __cdecl std::__addressof<std::pair<int,int>>(int a1)
{
  return a1;
}

//----- (08049F7C) --------------------------------------------------------
void *__cdecl std::_Construct<std::pair<int,int>,std::pair<int,int>>(void *a1, int a2)
{
  void *result; // eax@1
  void *v3; // ecx@1
  int v4; // edx@2

  result = operator new(8u, a1);
  v3 = result;
  if ( result )
  {
    v4 = *(_DWORD *)(a2 + 4);
    result = *(void **)a2;
    *(_DWORD *)v3 = *(_DWORD *)a2;
    *((_DWORD *)v3 + 1) = v4;
  }
  return result;
}

//----- (08049FAA) --------------------------------------------------------
int __cdecl std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,int,std::pair<int,int>>(char a1, int a2, int a3, int a4, int a5)
{
  int v5; // ebx@2
  int v6; // eax@2
  int v7; // ebx@4
  int v8; // eax@4
  int v9; // edx@4
  int v10; // ebx@8
  int v11; // eax@8
  int v12; // edx@8
  int i; // [sp+28h] [bp-40h]@1
  char v15; // [sp+2Ch] [bp-3Ch]@2
  int v16; // [sp+30h] [bp-38h]@2
  char v17; // [sp+34h] [bp-34h]@2
  char v18; // [sp+38h] [bp-30h]@4
  char v19; // [sp+3Ch] [bp-2Ch]@4
  char v20; // [sp+40h] [bp-28h]@8
  char v21; // [sp+44h] [bp-24h]@8
  int v22; // [sp+48h] [bp-20h]@8
  int v23; // [sp+4Ch] [bp-1Ch]@1

  v23 = a2;
  for ( i = a2; (a3 - 1) / 2 > i; a2 = i )
  {
    i = 2 * (i + 1);
    v16 = i - 1;
    __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
      (int)&v15,
      (int)&a1,
      (int)&v16);
    v5 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&v15);
    __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
      (int)&v17,
      (int)&a1,
      (int)&i);
    v6 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&v17);
    if ( std::operator<<int,int>(v6, v5) )
      --i;
    __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
      (int)&v18,
      (int)&a1,
      (int)&a2);
    v7 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&v18);
    __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
      (int)&v19,
      (int)&a1,
      (int)&i);
    v8 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&v19);
    v9 = *(_DWORD *)(v8 + 4);
    *(_DWORD *)v7 = *(_DWORD *)v8;
    *(_DWORD *)(v7 + 4) = v9;
  }
  if ( !(a3 & 1) && (a3 - 2) / 2 == i )
  {
    i = 2 * (i + 1);
    __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
      (int)&v20,
      (int)&a1,
      (int)&a2);
    v10 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&v20);
    v22 = i - 1;
    __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
      (int)&v21,
      (int)&a1,
      (int)&v22);
    v11 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&v21);
    v12 = *(_DWORD *)(v11 + 4);
    *(_DWORD *)v10 = *(_DWORD *)v11;
    *(_DWORD *)(v10 + 4) = v12;
    a2 = i - 1;
  }
  return std::__push_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,int,std::pair<int,int>>(
           a1,
           a2,
           v23,
           a4,
           a5);
}

//----- (0804A17B) --------------------------------------------------------
int __cdecl std::__iter_swap<true>::iter_swap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1, char a2)
{
  int v2; // ebx@1
  int v3; // eax@1

  v2 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a2);
  v3 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&a1);
  return std::swap<std::pair<int,int>>(v3, v2);
}

//----- (0804A1AC) --------------------------------------------------------
int __userpurge std::_Iter_base<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,false>::_S_base@<eax>(int a1, int a2)
{
  *(_DWORD *)a1 = a2;
  return a1;
}

//----- (0804A1BE) --------------------------------------------------------
int __cdecl std::__niter_base<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>>(char a1)
{
  return std::_Iter_base<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,true>::_S_base(a1);
}

//----- (0804A1D1) --------------------------------------------------------
int __cdecl std::__copy_move_backward_a<false,std::pair<int,int> *,std::pair<int,int> *>(int a1, int a2, int a3)
{
  return std::__copy_move_backward<false,false,std::random_access_iterator_tag>::__copy_move_b<std::pair<int,int> *,std::pair<int,int> *>(
           a1,
           a2,
           a3);
}

//----- (0804A1F6) --------------------------------------------------------
int __cdecl std::__push_heap<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,int,std::pair<int,int>>(char a1, int a2, int a3, int a4, int a5)
{
  int v5; // ebx@2
  int v6; // eax@2
  int v7; // edx@2
  int v8; // eax@4
  bool v9; // al@5
  int v10; // ecx@8
  int result; // eax@8
  int v12; // edx@8
  int i; // [sp+1Ch] [bp-2Ch]@1
  char v14; // [sp+20h] [bp-28h]@2
  char v15; // [sp+24h] [bp-24h]@2
  char v16; // [sp+28h] [bp-20h]@4
  char v17; // [sp+2Ch] [bp-1Ch]@8

  for ( i = (a2 - 1) / 2; ; i = (i - 1) / 2 )
  {
    v9 = 0;
    if ( a2 > a3 )
    {
      __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
        (int)&v16,
        (int)&a1,
        (int)&i);
      v8 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&v16);
      if ( std::operator<<int,int>(v8, (int)&a4) )
        v9 = 1;
    }
    if ( !v9 )
      break;
    __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
      (int)&v14,
      (int)&a1,
      (int)&a2);
    v5 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&v14);
    __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
      (int)&v15,
      (int)&a1,
      (int)&i);
    v6 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&v15);
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v5 = *(_DWORD *)v6;
    *(_DWORD *)(v5 + 4) = v7;
    a2 = i;
  }
  __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator+(
    (int)&v17,
    (int)&a1,
    (int)&a2);
  v10 = __gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::operator*((int)&v17);
  result = a4;
  v12 = a5;
  *(_DWORD *)v10 = a4;
  *(_DWORD *)(v10 + 4) = v12;
  return result;
}

//----- (0804A313) --------------------------------------------------------
int __cdecl std::swap<std::pair<int,int>>(int a1, int a2)
{
  int v2; // ST08_4@1
  int v3; // ST0C_4@1
  int v4; // edx@1
  int result; // eax@1

  v2 = *(_DWORD *)a1;
  v3 = *(_DWORD *)(a1 + 4);
  v4 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = v4;
  result = v2;
  *(_DWORD *)a2 = v2;
  *(_DWORD *)(a2 + 4) = v3;
  return result;
}

//----- (0804A347) --------------------------------------------------------
int __cdecl std::_Iter_base<__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>,true>::_S_base(char a1)
{
  return *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<int,int> *,std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>>::base((int)&a1);
}

//----- (0804A35C) --------------------------------------------------------
int __cdecl std::__copy_move_backward<false,false,std::random_access_iterator_tag>::__copy_move_b<std::pair<int,int> *,std::pair<int,int> *>(int a1, int a2, int a3)
{
  int v3; // edx@2
  int i; // [sp+Ch] [bp-4h]@1

  for ( i = (a2 - a1) >> 3; i > 0; --i )
  {
    a3 -= 8;
    a2 -= 8;
    v3 = *(_DWORD *)(a2 + 4);
    *(_DWORD *)a3 = *(_DWORD *)a2;
    *(_DWORD *)(a3 + 4) = v3;
  }
  return a3;
}

//----- (0804A3A0) --------------------------------------------------------
void _libc_csu_fini()
{
  ;
}

//----- (0804A3B0) --------------------------------------------------------
void __cdecl _libc_csu_init()
{
  init_proc();
}

//----- (0804A40A) --------------------------------------------------------
void _i686_get_pc_thunk_bx()
{
  ;
}

//----- (0804A410) --------------------------------------------------------
int __fastcall _do_global_ctors_aux(int a1, int a2)
{
  int (**v2)(); // ebx@1
  void (__cdecl *v3)(); // eax@1
  int v5; // [sp-4h] [bp-8h]@1

  v5 = a2;
  v2 = &off_804C2F4;
  v3 = (void (__cdecl *)())off_804C2F4;
  if ( off_804C2F4 != (int (*)())-1 )
  {
    do
    {
      --v2;
      v3();
      v3 = (void (__cdecl *)())*v2;
    }
    while ( *v2 != (int (*)())-1 );
  }
  return v5;
}
// 804C2F4: using guessed type int (*off_804C2F4)();

//----- (0804A438) --------------------------------------------------------
void term_proc()
{
  _do_global_dtors_aux();
}

#error "There were 2 decompilation failure(s) on 89 function(s)"
