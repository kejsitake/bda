/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2014 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

int init_proc();
// int __cdecl std::ostream::operator<<(_DWORD, _DWORD); weak
// int __cxa_atexit(const char *, ...); weak
// int __gmon_start__(void); weak
// _DWORD std::ios_base::Init::Init(std::ios_base::Init *this); idb
// _DWORD __cdecl std::ios_base::Init::~Init(std::ios_base::Init *__hidden this); idb
// int __cdecl std::operator<<<std::char_traits<char>>(_DWORD, _DWORD); weak
// int __cdecl std::istream::operator>>(_DWORD, _DWORD); weak
// int std::ostream::operator<<(_DWORD, const char *, ...); weak
signed int deregister_tm_clones();
int register_tm_clones();
void _do_global_dtors_aux();
int frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
int __cdecl __static_initialization_and_destruction_0(int a1, int a2);
int GLOBAL__sub_I_main();
void _libc_csu_fini(); // idb
void __cdecl _libc_csu_init();
void _i686_get_pc_thunk_bx();
int __fastcall _do_global_ctors_aux(int a1, int a2);
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

// extern _UNKNOWN std::endl<char,std::char_traits<char>>; weak
int (*off_8049D64)() = &GLOBAL__sub_I_main; // weak
int _DTOR_LIST__[] = { 4294967295 }; // weak
_UNKNOWN _DTOR_END__; // weak
_UNKNOWN _dso_handle; // weak
_UNKNOWN edata; // weak
_UNKNOWN unk_8049EA3; // weak
_UNKNOWN std::cout; // weak
char completed_3328; // weak
int dtor_idx_3330; // weak
_UNKNOWN std::__ioinit; // weak
// extern _UNKNOWN _gmon_start__; weak


//----- (0804863C) --------------------------------------------------------
int init_proc()
{
  int v0; // edx@3
  int v1; // ecx@3
  int v3; // [sp+0h] [bp-8h]@0

  if ( &_gmon_start__ )
    __gmon_start__();
  frame_dummy();
  _do_global_ctors_aux(v1, v0);
  return v3;
}
// 80486A0: using guessed type int __gmon_start__(void);

//----- (08048740) --------------------------------------------------------
#error "8048743: positive sp value has been found (funcsize=2)"

//----- (08048770) --------------------------------------------------------
signed int deregister_tm_clones()
{
  signed int result; // eax@1

  result = &unk_8049EA3 - &edata;
  if ( (unsigned int)(&unk_8049EA3 - &edata) > 6 )
    result = 0;
  return result;
}
// 8048770: could not find valid save-restore pair for ebp

//----- (080487A0) --------------------------------------------------------
int register_tm_clones()
{
  return 0;
}
// 80487A0: could not find valid save-restore pair for ebp

//----- (080487E0) --------------------------------------------------------
void _do_global_dtors_aux()
{
  int v0; // eax@2
  int i; // ebx@2

  if ( !completed_3328 )
  {
    v0 = dtor_idx_3330;
    for ( i = ((&_DTOR_END__ - (_UNKNOWN *)_DTOR_LIST__) >> 2) - 1; dtor_idx_3330 < (unsigned int)i; v0 = dtor_idx_3330 )
    {
      dtor_idx_3330 = v0 + 1;
      ((void (*)(void))_DTOR_LIST__[v0 + 1])();
    }
    deregister_tm_clones();
    completed_3328 = 1;
  }
}
// 8049D6C: using guessed type int _DTOR_LIST__[];
// 8049FCC: using guessed type char completed_3328;
// 8049FD0: using guessed type int dtor_idx_3330;

//----- (08048830) --------------------------------------------------------
int frame_dummy()
{
  return register_tm_clones();
}
// 8048830: could not find valid save-restore pair for ebp

//----- (08048860) --------------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  int v3; // eax@24
  int v4; // eax@24
  int v5; // eax@24
  int v6; // eax@24
  int v7; // eax@26
  int v8; // eax@26
  int v9; // eax@26
  int v10; // eax@26
  int v11; // eax@27
  int v12; // eax@27
  int v13; // eax@27
  int v14; // eax@27
  int v16; // [sp+10h] [bp-78h]@2
  int v17; // [sp+50h] [bp-38h]@12
  int v18; // [sp+54h] [bp-34h]@4
  int v19; // [sp+58h] [bp-30h]@2
  signed int v20; // [sp+5Ch] [bp-2Ch]@1
  signed int n; // [sp+60h] [bp-28h]@18
  int v22; // [sp+64h] [bp-24h]@20
  int v23; // [sp+68h] [bp-20h]@18
  signed int m; // [sp+6Ch] [bp-1Ch]@11
  signed int l; // [sp+70h] [bp-18h]@10
  signed int k; // [sp+74h] [bp-14h]@3
  signed int j; // [sp+78h] [bp-10h]@2
  signed int i; // [sp+7Ch] [bp-Ch]@1

  std::istream::operator>>(&edata, &v20);
  for ( i = 1; i <= v20; ++i )
  {
    std::istream::operator>>(&edata, &v19);
    memset(&v16, 0, 0x40u);
    for ( j = 0; j <= 3; ++j )
    {
      for ( k = 0; k <= 3; ++k )
      {
        std::istream::operator>>(&edata, &v18);
        if ( v19 - 1 == j )
          ++*(&v16 + v18 - 1);
      }
    }
    std::istream::operator>>(&edata, &v19);
    for ( l = 0; l <= 3; ++l )
    {
      for ( m = 0; m <= 3; ++m )
      {
        std::istream::operator>>(&edata, &v17);
        if ( v19 - 1 == l )
          ++*(&v16 + v17 - 1);
      }
    }
    v23 = 0;
    for ( n = 0; n <= 15; ++n )
    {
      if ( *(&v16 + n) == 2 )
      {
        ++v23;
        v22 = n + 1;
      }
    }
    if ( v23 == 1 )
    {
      v3 = std::operator<<<std::char_traits<char>>(&std::cout, "Case #");
      v4 = std::ostream::operator<<(v3, i);
      v5 = std::operator<<<std::char_traits<char>>(v4, ": ");
      v6 = std::ostream::operator<<(v5, v22);
      std::ostream::operator<<(v6, (const char *)&std::endl<char,std::char_traits<char>>);
    }
    else if ( v23 )
    {
      v11 = std::operator<<<std::char_traits<char>>(&std::cout, "Case #");
      v12 = std::ostream::operator<<(v11, i);
      v13 = std::operator<<<std::char_traits<char>>(v12, ": ");
      v14 = std::operator<<<std::char_traits<char>>(v13, "Bad magician!");
      std::ostream::operator<<(v14, (const char *)&std::endl<char,std::char_traits<char>>);
    }
    else
    {
      v7 = std::operator<<<std::char_traits<char>>(&std::cout, "Case #");
      v8 = std::ostream::operator<<(v7, i);
      v9 = std::operator<<<std::char_traits<char>>(v8, ": ");
      v10 = std::operator<<<std::char_traits<char>>(v9, "Volunteer cheated!");
      std::ostream::operator<<(v10, (const char *)&std::endl<char,std::char_traits<char>>);
    }
  }
  return 0;
}
// 8048680: using guessed type int __cdecl std::ostream::operator<<(_DWORD, _DWORD);
// 80486E0: using guessed type int __cdecl std::operator<<<std::char_traits<char>>(_DWORD, _DWORD);
// 80486F0: using guessed type int __cdecl std::istream::operator>>(_DWORD, _DWORD);
// 8048700: using guessed type int std::ostream::operator<<(_DWORD, const char *, ...);

//----- (08048AEC) --------------------------------------------------------
int __cdecl __static_initialization_and_destruction_0(int a1, int a2)
{
  int result; // eax@3

  if ( a1 == 1 && a2 == 0xFFFF )
  {
    std::ios_base::Init::Init((std::ios_base::Init *)&std::__ioinit);
    result = __cxa_atexit((const char *)std::ios_base::Init::~Init, &std::__ioinit, &_dso_handle);
  }
  return result;
}
// 8048690: using guessed type int __cxa_atexit(const char *, ...);

//----- (08048B2B) --------------------------------------------------------
int GLOBAL__sub_I_main()
{
  return __static_initialization_and_destruction_0(1, 0xFFFF);
}

//----- (08048B50) --------------------------------------------------------
void _libc_csu_fini()
{
  ;
}

//----- (08048B60) --------------------------------------------------------
void __cdecl _libc_csu_init()
{
  init_proc();
}

//----- (08048BBA) --------------------------------------------------------
void _i686_get_pc_thunk_bx()
{
  ;
}

//----- (08048BC0) --------------------------------------------------------
int __fastcall _do_global_ctors_aux(int a1, int a2)
{
  int (**v2)(); // ebx@1
  void (__cdecl *v3)(); // eax@1
  int v5; // [sp-4h] [bp-8h]@1

  v5 = a2;
  v2 = &off_8049D64;
  v3 = (void (__cdecl *)())off_8049D64;
  if ( off_8049D64 != (int (*)())-1 )
  {
    do
    {
      --v2;
      v3();
      v3 = (void (__cdecl *)())*v2;
    }
    while ( *v2 != (int (*)())-1 );
  }
  return v5;
}
// 8049D64: using guessed type int (*off_8049D64)();

//----- (08048BE8) --------------------------------------------------------
void term_proc()
{
  _do_global_dtors_aux();
}

#error "There were 1 decompilation failure(s) on 14 function(s)"
