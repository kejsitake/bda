/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2014 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

int init_proc();
// int __cxa_atexit(const char *, ...); weak
// int __gmon_start__(void); weak
// void __cdecl operator delete(void *); idb
// _DWORD std::ios_base::Init::Init(std::ios_base::Init *this); idb
// _DWORD __cdecl std::ios_base::Init::~Init(std::ios_base::Init *__hidden this); idb
// _DWORD __cdecl operator new(unsigned int); idb
// int __stdcall std::istream::operator>>(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD); weak
// _DWORD std::__throw_bad_alloc(void); idb
signed int deregister_tm_clones();
int register_tm_clones();
void _do_global_dtors_aux();
int frame_dummy();
bool __cdecl comp(int a1, int a2);
int __cdecl main(int argc, const char **argv, const char **envp);
int __cdecl __static_initialization_and_destruction_0(int a1, int a2);
int GLOBAL__sub_I__Z4compRKSt4pairIS_IiiEiES3_();
int __cdecl std::__lg(int a1);
void *__cdecl operator new(unsigned int a1, void *a2);
int __cdecl std::pair<std::pair<int,int>,int>::pair(int a1);
void std::allocator<std::pair<std::pair<int,int>,int>>::allocator();
void std::allocator<std::pair<std::pair<int,int>,int>>::~allocator();
int __cdecl std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::vector(int a1, unsigned int a2, int a3);
void __cdecl std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::~vector(int a1);
int __cdecl std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::operator[](int a1, int a2);
// int __userpurge std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::begin@<eax>(int a1, int a2);
// int __userpurge std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::end@<eax>(int a1, int a2);
bool __cdecl std::sort<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(int a1, int a2, int a3);
int __cdecl std::pair<int,int>::pair(int a1);
void __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::new_allocator();
void __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::~new_allocator();
void std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_Vector_impl::~_Vector_impl();
int __cdecl std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_Vector_base(int a1, unsigned int a2);
void __cdecl std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::~_Vector_base(int a1);
int __cdecl std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_fill_initialize(int a1, int a2, int a3);
int __cdecl std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_get_Tp_allocator(int a1);
void std::_Destroy<std::pair<std::pair<int,int>,int> *,std::pair<std::pair<int,int>,int>>();
int __cdecl __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::__normal_iterator(int a1, int a2);
bool __cdecl __gnu_cxx::operator!=<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(int a1, int a2);
int __cdecl __gnu_cxx::operator-<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(int a1, int a2);
bool __cdecl std::__introsort_loop<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,int,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, int a2, int a3, int a4);
bool __cdecl std::__final_insertion_sort<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(int a1, char a2, int (__cdecl *a3)(_DWORD, _DWORD));
int __cdecl std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_Vector_impl::_Vector_impl(int a1);
int __cdecl std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_create_storage(int a1, unsigned int a2);
void __cdecl std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_deallocate(int a1, void *a2);
void *__cdecl std::__uninitialized_fill_n_a<std::pair<std::pair<int,int>,int> *,unsigned int,std::pair<std::pair<int,int>,int>,std::pair<std::pair<int,int>,int>>(int a1, int a2, int a3);
void std::_Destroy<std::pair<std::pair<int,int>,int> *>();
int __cdecl __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::base(int a1);
bool __cdecl std::partial_sort<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, int a2, char a3, int (__cdecl *a4)(_DWORD, _DWORD));
// int __userpurge std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>@<eax>(int a1, char a2, char a3, int a4);
// int __userpurge __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+@<eax>(int a1, int a2, int a3);
bool __cdecl std::__insertion_sort<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(int a1, char a2, int (__cdecl *a3)(_DWORD, _DWORD));
bool __cdecl std::__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(int a1, char a2, int (__cdecl *a3)(_DWORD, _DWORD));
void std::allocator<std::pair<std::pair<int,int>,int>>::allocator();
int __cdecl std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_allocate(int a1, unsigned int a2);
void __cdecl __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::deallocate(int a1, void *a2);
void *__cdecl std::uninitialized_fill_n<std::pair<std::pair<int,int>,int> *,unsigned int,std::pair<std::pair<int,int>,int>>(int a1, int a2, int a3);
void std::_Destroy_aux<true>::__destroy<std::pair<std::pair<int,int>,int> *>();
bool __cdecl std::__heap_select<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, int a2, char a3, int (__cdecl *a4)(_DWORD, _DWORD));
bool __cdecl std::sort_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, char a2, int (__cdecl *a3)(_DWORD, _DWORD));
// int __userpurge __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator-@<eax>(int a1, int a2, int a3);
int __cdecl std::__move_median_first<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, char a2, char a3, int (__cdecl *a4)(_DWORD, _DWORD));
int __cdecl __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*(int a1);
// int __userpurge std::__unguarded_partition<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,std::pair<std::pair<int,int>,int>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>@<eax>(int a1, int a2, char a3, int a4, int (__cdecl *a5)(int, int));
bool __cdecl __gnu_cxx::operator==<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(int a1, int a2);
int __cdecl __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator++(int a1);
// int __userpurge std::copy_backward<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>@<eax>(int a1, int a2, int a3, char a4);
int __cdecl std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(int a1, int (__cdecl *a2)(_DWORD, _DWORD));
void __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::new_allocator();
int __cdecl __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::allocate(int a1, unsigned int a2);
void *__cdecl std::__uninitialized_fill_n<false>::__uninit_fill_n<std::pair<std::pair<int,int>,int> *,unsigned int,std::pair<std::pair<int,int>,int>>(int a1, int a2, int a3);
char __cdecl std::make_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, char a2, int (__cdecl *a3)(_DWORD, _DWORD));
bool __cdecl __gnu_cxx::operator<<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(int a1, int a2);
int __cdecl std::__pop_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, char a2, char a3, int (__cdecl *a4)(_DWORD, _DWORD));
int __cdecl __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator--(int a1);
int __cdecl std::iter_swap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(char a1, char a2);
// int __userpurge std::__miter_base<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>@<eax>(int a1, int a2);
// int __userpurge std::__copy_move_backward_a2<false,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>@<eax>(int a1, char a2, char a3, char a4);
signed int __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::max_size();
int __cdecl std::__addressof<std::pair<std::pair<int,int>,int>>(int a1);
void *__cdecl std::_Construct<std::pair<std::pair<int,int>,int>,std::pair<std::pair<int,int>,int>>(void *a1, int a2);
int __cdecl std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,int,std::pair<std::pair<int,int>,int>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, int a2, int a3, int a4, int a5, int a6, int (__cdecl *a7)(_DWORD, _DWORD));
int __cdecl std::__iter_swap<true>::iter_swap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(char a1, char a2);
// int __userpurge std::_Iter_base<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,false>::_S_base@<eax>(int a1, int a2);
int __cdecl std::__niter_base<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(char a1);
int __cdecl std::__copy_move_backward_a<false,std::pair<std::pair<int,int>,int> *,std::pair<std::pair<int,int>,int> *>(int a1, int a2, int a3);
int __cdecl std::__push_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,int,std::pair<std::pair<int,int>,int>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, int a2, int a3, int a4, int a5, int a6, int (__cdecl *a7)(_DWORD, _DWORD));
int __cdecl std::swap<std::pair<std::pair<int,int>,int>>(int a1, int a2);
int __cdecl std::_Iter_base<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,true>::_S_base(char a1);
int __cdecl std::__copy_move_backward<false,false,std::random_access_iterator_tag>::__copy_move_b<std::pair<std::pair<int,int>,int> *,std::pair<std::pair<int,int>,int> *>(int a1, int a2, int a3);
void _libc_csu_fini(); // idb
void __cdecl _libc_csu_init();
void _i686_get_pc_thunk_bx();
int __fastcall _do_global_ctors_aux(int a1, int a2);
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

int (*off_804C188)() = &GLOBAL__sub_I__Z4compRKSt4pairIS_IiiEiES3_; // weak
int _DTOR_LIST__[] = { 4294967295 }; // weak
_UNKNOWN _DTOR_END__; // weak
_UNKNOWN _dso_handle; // weak
char completed_3328; // weak
int dtor_idx_3330; // weak
_UNKNOWN std::__ioinit; // weak
// extern _UNKNOWN _gmon_start__; weak


//----- (080486BC) --------------------------------------------------------
int init_proc()
{
  int v0; // edx@3
  int v1; // ecx@3
  int v3; // [sp+0h] [bp-8h]@0

  if ( &_gmon_start__ )
    __gmon_start__();
  frame_dummy();
  _do_global_ctors_aux(v1, v0);
  return v3;
}
// 8048720: using guessed type int __gmon_start__(void);

//----- (080487F0) --------------------------------------------------------
#error "80487F3: positive sp value has been found (funcsize=2)"

//----- (08048820) --------------------------------------------------------
signed int deregister_tm_clones()
{
  return 3;
}
// 8048820: could not find valid save-restore pair for ebp

//----- (08048850) --------------------------------------------------------
int register_tm_clones()
{
  return 0;
}
// 8048850: could not find valid save-restore pair for ebp

//----- (08048890) --------------------------------------------------------
void _do_global_dtors_aux()
{
  int v0; // eax@2
  int i; // ebx@2

  if ( !completed_3328 )
  {
    v0 = dtor_idx_3330;
    for ( i = ((&_DTOR_END__ - (_UNKNOWN *)_DTOR_LIST__) >> 2) - 1; dtor_idx_3330 < (unsigned int)i; v0 = dtor_idx_3330 )
    {
      dtor_idx_3330 = v0 + 1;
      ((void (*)(void))_DTOR_LIST__[v0 + 1])();
    }
    deregister_tm_clones();
    completed_3328 = 1;
  }
}
// 804C190: using guessed type int _DTOR_LIST__[];
// 804C40C: using guessed type char completed_3328;
// 804C410: using guessed type int dtor_idx_3330;

//----- (080488E0) --------------------------------------------------------
int frame_dummy()
{
  return register_tm_clones();
}
// 80488E0: could not find valid save-restore pair for ebp

//----- (08048910) --------------------------------------------------------
bool __cdecl comp(int a1, int a2)
{
  bool result; // al@2

  if ( 100 * *(_DWORD *)a1 + *(_DWORD *)a2 * *(_DWORD *)(a1 + 4) == 100 * *(_DWORD *)a2
                                                                  + *(_DWORD *)a1 * *(_DWORD *)(a2 + 4) )
    result = *(_DWORD *)(a1 + 8) < *(_DWORD *)(a2 + 8);
  else
    result = 100 * *(_DWORD *)a1 + *(_DWORD *)a2 * *(_DWORD *)(a1 + 4) < 100 * *(_DWORD *)a2
                                                                       + *(_DWORD *)a1 * *(_DWORD *)(a2 + 4);
  return result;
}

//----- (080489DD) --------------------------------------------------------
#error "8048A1C: call analysis failed (funcsize=162)"

//----- (08048C6B) --------------------------------------------------------
int __cdecl __static_initialization_and_destruction_0(int a1, int a2)
{
  int result; // eax@3

  if ( a1 == 1 && a2 == 0xFFFF )
  {
    std::ios_base::Init::Init((std::ios_base::Init *)&std::__ioinit);
    result = __cxa_atexit((const char *)std::ios_base::Init::~Init, &std::__ioinit, &_dso_handle);
  }
  return result;
}
// 8048710: using guessed type int __cxa_atexit(const char *, ...);

//----- (08048CAA) --------------------------------------------------------
int GLOBAL__sub_I__Z4compRKSt4pairIS_IiiEiES3_()
{
  return __static_initialization_and_destruction_0(1, 0xFFFF);
}

//----- (08048CC6) --------------------------------------------------------
int __cdecl std::__lg(int a1)
{
  _EAX = a1;
  __asm { bsr     eax, eax }
  return 32 - (_EAX ^ 0x1F) - 1;
}

//----- (08048CDE) --------------------------------------------------------
void *__cdecl operator new(unsigned int a1, void *a2)
{
  return a2;
}

//----- (08048CE6) --------------------------------------------------------
int __cdecl std::pair<std::pair<int,int>,int>::pair(int a1)
{
  int result; // eax@1

  std::pair<int,int>::pair(a1);
  result = a1;
  *(_DWORD *)(a1 + 8) = 0;
  return result;
}

//----- (08048D04) --------------------------------------------------------
void std::allocator<std::pair<std::pair<int,int>,int>>::allocator()
{
  __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::new_allocator();
}

//----- (08048D18) --------------------------------------------------------
void std::allocator<std::pair<std::pair<int,int>,int>>::~allocator()
{
  __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::~new_allocator();
}

//----- (08048D2C) --------------------------------------------------------
int __cdecl std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::vector(int a1, unsigned int a2, int a3)
{
  std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_Vector_base(
    a1,
    a2);
  return std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_fill_initialize(
           a1,
           a2,
           a3);
}

//----- (08048D84) --------------------------------------------------------
void __cdecl std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::~vector(int a1)
{
  int v1; // ST04_4@1
  int v2; // ST00_4@1

  std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_get_Tp_allocator(a1);
  v1 = *(_DWORD *)(a1 + 4);
  v2 = *(_DWORD *)a1;
  std::_Destroy<std::pair<std::pair<int,int>,int> *,std::pair<std::pair<int,int>,int>>();
  std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::~_Vector_base(a1);
}

//----- (08048DDC) --------------------------------------------------------
int __cdecl std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::operator[](int a1, int a2)
{
  return *(_DWORD *)a1 + 12 * a2;
}

//----- (08048DF4) --------------------------------------------------------
int __userpurge std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::begin@<eax>(int a1, int a2)
{
  __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::__normal_iterator(
    a1,
    a2);
  return a1;
}

//----- (08048E14) --------------------------------------------------------
int __userpurge std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::end@<eax>(int a1, int a2)
{
  __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::__normal_iterator(
    a1,
    a2 + 4);
  return a1;
}

//----- (08048E36) --------------------------------------------------------
bool __cdecl std::sort<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(int a1, int a2, int a3)
{
  bool result; // al@1
  int v4; // eax@2
  int v5; // eax@2

  result = __gnu_cxx::operator!=<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(
             (int)&a1,
             (int)&a2);
  if ( result )
  {
    v4 = __gnu_cxx::operator-<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(
           (int)&a2,
           (int)&a1);
    v5 = std::__lg(v4);
    std::__introsort_loop<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,int,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
      a1,
      a2,
      2 * v5,
      a3);
    result = std::__final_insertion_sort<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
               a1,
               a2,
               (int (__cdecl *)(_DWORD, _DWORD))a3);
  }
  return result;
}

//----- (08048EA8) --------------------------------------------------------
int __cdecl std::pair<int,int>::pair(int a1)
{
  int result; // eax@1

  *(_DWORD *)a1 = 0;
  result = a1;
  *(_DWORD *)(a1 + 4) = 0;
  return result;
}

//----- (08048EC0) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::new_allocator()
{
  ;
}

//----- (08048EC6) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::~new_allocator()
{
  ;
}

//----- (08048ECC) --------------------------------------------------------
void std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_Vector_impl::~_Vector_impl()
{
  std::allocator<std::pair<std::pair<int,int>,int>>::~allocator();
}

//----- (08048EE0) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_Vector_base(int a1, unsigned int a2)
{
  std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_Vector_impl::_Vector_impl(a1);
  return std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_create_storage(
           a1,
           a2);
}

//----- (08048F2A) --------------------------------------------------------
void __cdecl std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::~_Vector_base(int a1)
{
  int v1; // ST08_4@1

  v1 = -1431655765 * ((*(_DWORD *)(a1 + 8) - *(_DWORD *)a1) >> 2);
  std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_deallocate(
    a1,
    *(void **)a1);
  std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_Vector_impl::~_Vector_impl();
}

//----- (08048FAC) --------------------------------------------------------
int __cdecl std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_fill_initialize(int a1, int a2, int a3)
{
  int result; // eax@1

  std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_get_Tp_allocator(a1);
  std::__uninitialized_fill_n_a<std::pair<std::pair<int,int>,int> *,unsigned int,std::pair<std::pair<int,int>,int>,std::pair<std::pair<int,int>,int>>(
    *(_DWORD *)a1,
    a2,
    a3);
  result = a1;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a1 + 8);
  return result;
}

//----- (08048FEA) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_get_Tp_allocator(int a1)
{
  return a1;
}

//----- (08048FF2) --------------------------------------------------------
void std::_Destroy<std::pair<std::pair<int,int>,int> *,std::pair<std::pair<int,int>,int>>()
{
  std::_Destroy<std::pair<std::pair<int,int>,int> *>();
}

//----- (0804900C) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::__normal_iterator(int a1, int a2)
{
  int result; // eax@1

  result = a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  return result;
}

//----- (0804901B) --------------------------------------------------------
bool __cdecl __gnu_cxx::operator!=<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(int a1, int a2)
{
  int v2; // ebx@1

  v2 = *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::base(a1);
  return v2 != *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::base(a2);
}

//----- (08049047) --------------------------------------------------------
int __cdecl __gnu_cxx::operator-<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(int a1, int a2)
{
  int v2; // ebx@1

  v2 = *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::base(a1);
  return -1431655765
       * ((v2
         - *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::base(a2)) >> 2);
}

//----- (08049099) --------------------------------------------------------
bool __cdecl std::__introsort_loop<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,int,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, int a2, int a3, int a4)
{
  bool result; // al@3
  int v5; // [sp+1Ch] [bp-Ch]@4

  while ( 1 )
  {
    result = __gnu_cxx::operator-<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(
               (int)&a2,
               (int)&a1) > 16;
    if ( !result )
      break;
    if ( !a3 )
      return std::partial_sort<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
               a1,
               a2,
               a2,
               (int (__cdecl *)(_DWORD, _DWORD))a4);
    --a3;
    std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
      (int)&v5,
      a1,
      a2,
      a4);
    std::__introsort_loop<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,int,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
      v5,
      a2,
      a3,
      a4);
    a2 = v5;
  }
  return result;
}

//----- (08049141) --------------------------------------------------------
bool __cdecl std::__final_insertion_sort<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(int a1, char a2, int (__cdecl *a3)(_DWORD, _DWORD))
{
  bool result; // al@2
  int v4; // [sp+10h] [bp-18h]@2
  int v5; // [sp+14h] [bp-14h]@2
  int v6; // [sp+18h] [bp-10h]@2
  int v7; // [sp+1Ch] [bp-Ch]@2

  if ( __gnu_cxx::operator-<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(
         (int)&a2,
         (int)&a1) > 16 )
  {
    v4 = 16;
    __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
      (int)&v5,
      (int)&a1,
      (int)&v4);
    std::__insertion_sort<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
      a1,
      v5,
      a3);
    v6 = 16;
    __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
      (int)&v7,
      (int)&a1,
      (int)&v6);
    result = std::__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
               v7,
               a2,
               a3);
  }
  else
  {
    result = std::__insertion_sort<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
               a1,
               a2,
               a3);
  }
  return result;
}

//----- (0804920E) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_Vector_impl::_Vector_impl(int a1)
{
  int result; // eax@1

  std::allocator<std::pair<std::pair<int,int>,int>>::allocator();
  *(_DWORD *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  result = a1;
  *(_DWORD *)(a1 + 8) = 0;
  return result;
}

//----- (08049246) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_create_storage(int a1, unsigned int a2)
{
  int result; // eax@1

  *(_DWORD *)a1 = std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_allocate(
                    a1,
                    a2);
  *(_DWORD *)(a1 + 4) = *(_DWORD *)a1;
  result = a1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)a1 + 12 * a2;
  return result;
}

//----- (0804928A) --------------------------------------------------------
void __cdecl std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_deallocate(int a1, void *a2)
{
  if ( a2 )
    __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::deallocate(a1, a2);
}

//----- (080492B1) --------------------------------------------------------
void *__cdecl std::__uninitialized_fill_n_a<std::pair<std::pair<int,int>,int> *,unsigned int,std::pair<std::pair<int,int>,int>,std::pair<std::pair<int,int>,int>>(int a1, int a2, int a3)
{
  return std::uninitialized_fill_n<std::pair<std::pair<int,int>,int> *,unsigned int,std::pair<std::pair<int,int>,int>>(
           a1,
           a2,
           a3);
}

//----- (080492D2) --------------------------------------------------------
void std::_Destroy<std::pair<std::pair<int,int>,int> *>()
{
  std::_Destroy_aux<true>::__destroy<std::pair<std::pair<int,int>,int> *>();
}

//----- (080492EC) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::base(int a1)
{
  return a1;
}

//----- (080492F4) --------------------------------------------------------
bool __cdecl std::partial_sort<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, int a2, char a3, int (__cdecl *a4)(_DWORD, _DWORD))
{
  std::__heap_select<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
    a1,
    a2,
    a3,
    a4);
  return std::sort_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
           a1,
           a2,
           a4);
}

//----- (08049335) --------------------------------------------------------
int __userpurge std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>@<eax>(int a1, char a2, char a3, int a4)
{
  int v4; // ebx@1
  int v6; // [sp+28h] [bp-20h]@1
  int v7; // [sp+2Ch] [bp-1Ch]@1
  int v8; // [sp+30h] [bp-18h]@1
  int v9; // [sp+34h] [bp-14h]@1
  int v10; // [sp+38h] [bp-10h]@1
  int v11; // [sp+3Ch] [bp-Ch]@1

  v7 = __gnu_cxx::operator-<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(
         (int)&a3,
         (int)&a2)
     / 2;
  __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
    (int)&v6,
    (int)&a2,
    (int)&v7);
  v8 = 1;
  __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator-(
    (int)&v9,
    (int)&a3,
    (int)&v8);
  std::__move_median_first<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
    a2,
    v6,
    v9,
    (int (__cdecl *)(_DWORD, _DWORD))a4);
  v4 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a2);
  v10 = 1;
  __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
    (int)&v11,
    (int)&a2,
    (int)&v10);
  std::__unguarded_partition<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,std::pair<std::pair<int,int>,int>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
    a1,
    v11,
    a3,
    v4,
    (int (__cdecl *)(int, int))a4);
  return a1;
}

//----- (08049426) --------------------------------------------------------
int __userpurge __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+@<eax>(int a1, int a2, int a3)
{
  int v4; // [sp+1Ch] [bp-Ch]@1

  v4 = *(_DWORD *)a2 + 12 * *(_DWORD *)a3;
  __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::__normal_iterator(
    a1,
    (int)&v4);
  return a1;
}

//----- (0804945F) --------------------------------------------------------
bool __cdecl std::__insertion_sort<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(int a1, char a2, int (__cdecl *a3)(_DWORD, _DWORD))
{
  bool result; // al@1
  int v4; // ebx@3
  int v5; // eax@3
  int v6; // eax@4
  int v7; // ST10_4@4
  int v8; // ST14_4@4
  int v9; // ST18_4@4
  int v10; // eax@4
  int v11; // [sp+1Ch] [bp-1Ch]@2
  int v12; // [sp+20h] [bp-18h]@2
  char v13; // [sp+24h] [bp-14h]@4
  int v14; // [sp+28h] [bp-10h]@4
  int v15; // [sp+2Ch] [bp-Ch]@4

  result = __gnu_cxx::operator==<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(
             (int)&a1,
             (int)&a2);
  if ( !result )
  {
    v12 = 1;
    __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
      (int)&v11,
      (int)&a1,
      (int)&v12);
    while ( 1 )
    {
      result = __gnu_cxx::operator!=<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(
                 (int)&v11,
                 (int)&a2);
      if ( !result )
        break;
      v4 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a1);
      v5 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&v11);
      if ( (unsigned __int8)a3(v5, v4) )
      {
        v6 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&v11);
        v7 = *(_DWORD *)v6;
        v8 = *(_DWORD *)(v6 + 4);
        v9 = *(_DWORD *)(v6 + 8);
        v14 = 1;
        __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
          (int)&v15,
          (int)&v11,
          (int)&v14);
        std::copy_backward<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(
          (int)&v13,
          a1,
          v11,
          v15);
        v10 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a1);
        *(_DWORD *)v10 = v7;
        *(_DWORD *)(v10 + 4) = v8;
        *(_DWORD *)(v10 + 8) = v9;
      }
      else
      {
        std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
          v11,
          a3);
      }
      __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator++((int)&v11);
    }
  }
  return result;
}

//----- (0804959D) --------------------------------------------------------
bool __cdecl std::__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(int a1, char a2, int (__cdecl *a3)(_DWORD, _DWORD))
{
  bool result; // al@3
  int i; // [sp+1Ch] [bp-Ch]@1

  for ( i = a1;
        ;
        __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator++((int)&i) )
  {
    result = __gnu_cxx::operator!=<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(
               (int)&i,
               (int)&a2);
    if ( !result )
      break;
    std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
      i,
      a3);
  }
  return result;
}

//----- (080495EA) --------------------------------------------------------
void std::allocator<std::pair<std::pair<int,int>,int>>::allocator()
{
  __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::new_allocator();
}

//----- (08049604) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>::_M_allocate(int a1, unsigned int a2)
{
  int result; // eax@2

  if ( a2 )
    result = __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::allocate(a1, a2);
  else
    result = 0;
  return result;
}

//----- (08049634) --------------------------------------------------------
void __cdecl __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::deallocate(int a1, void *a2)
{
  operator delete(a2);
}

//----- (08049647) --------------------------------------------------------
void *__cdecl std::uninitialized_fill_n<std::pair<std::pair<int,int>,int> *,unsigned int,std::pair<std::pair<int,int>,int>>(int a1, int a2, int a3)
{
  return std::__uninitialized_fill_n<false>::__uninit_fill_n<std::pair<std::pair<int,int>,int> *,unsigned int,std::pair<std::pair<int,int>,int>>(
           a1,
           a2,
           a3);
}

//----- (08049668) --------------------------------------------------------
void std::_Destroy_aux<true>::__destroy<std::pair<std::pair<int,int>,int> *>()
{
  ;
}

//----- (0804966D) --------------------------------------------------------
bool __cdecl std::__heap_select<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, int a2, char a3, int (__cdecl *a4)(_DWORD, _DWORD))
{
  int v4; // ebx@2
  int v5; // eax@2
  bool result; // al@5
  int i; // [sp+1Ch] [bp-Ch]@1

  std::make_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
    a1,
    a2,
    a4);
  for ( i = a2;
        ;
        __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator++((int)&i) )
  {
    result = __gnu_cxx::operator<<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(
               (int)&i,
               (int)&a3);
    if ( !result )
      break;
    v4 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a1);
    v5 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&i);
    if ( (unsigned __int8)a4(v5, v4) )
      std::__pop_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
        a1,
        a2,
        i,
        a4);
  }
  return result;
}

//----- (0804970E) --------------------------------------------------------
bool __cdecl std::sort_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, char a2, int (__cdecl *a3)(_DWORD, _DWORD))
{
  bool result; // al@3

  while ( 1 )
  {
    result = __gnu_cxx::operator-<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(
               (int)&a2,
               (int)&a1) > 1;
    if ( !result )
      break;
    __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator--((int)&a2);
    std::__pop_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
      a1,
      a2,
      a2,
      a3);
  }
  return result;
}

//----- (08049760) --------------------------------------------------------
int __userpurge __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator-@<eax>(int a1, int a2, int a3)
{
  int v4; // [sp+1Ch] [bp-Ch]@1

  v4 = *(_DWORD *)a2 + -12 * *(_DWORD *)a3;
  __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::__normal_iterator(
    a1,
    (int)&v4);
  return a1;
}

//----- (0804979B) --------------------------------------------------------
int __cdecl std::__move_median_first<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, char a2, char a3, int (__cdecl *a4)(_DWORD, _DWORD))
{
  int v4; // ebx@1
  int v5; // eax@1
  int v6; // ebx@2
  int v7; // eax@2
  int result; // eax@3
  int v9; // ebx@4
  int v10; // eax@4
  int v11; // ebx@6
  int v12; // eax@6
  int v13; // ebx@7
  int v14; // eax@7

  v4 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a2);
  v5 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a1);
  if ( (unsigned __int8)a4(v5, v4) )
  {
    v6 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a3);
    v7 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a2);
    if ( (unsigned __int8)a4(v7, v6) )
    {
      result = std::iter_swap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(
                 a1,
                 a2);
    }
    else
    {
      v9 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a3);
      v10 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a1);
      result = a4(v10, v9);
      if ( (_BYTE)result )
        result = std::iter_swap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(
                   a1,
                   a3);
    }
  }
  else
  {
    v11 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a3);
    v12 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a1);
    result = a4(v12, v11);
    if ( !(_BYTE)result )
    {
      v13 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a3);
      v14 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a2);
      if ( (unsigned __int8)a4(v14, v13) )
        result = std::iter_swap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(
                   a1,
                   a3);
      else
        result = std::iter_swap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(
                   a1,
                   a2);
    }
  }
  return result;
}

//----- (080498C8) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*(int a1)
{
  return *(_DWORD *)a1;
}

//----- (080498D2) --------------------------------------------------------
int __userpurge std::__unguarded_partition<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,std::pair<std::pair<int,int>,int>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>@<eax>(int a1, int a2, char a3, int a4, int (__cdecl *a5)(int, int))
{
  int v5; // eax@3
  int v6; // eax@6

  while ( 1 )
  {
    while ( 1 )
    {
      v5 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a2);
      if ( !(unsigned __int8)a5(v5, a4) )
        break;
      __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator++((int)&a2);
    }
    __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator--((int)&a3);
    while ( 1 )
    {
      v6 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a3);
      if ( !(unsigned __int8)a5(a4, v6) )
        break;
      __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator--((int)&a3);
    }
    if ( !__gnu_cxx::operator<<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(
            (int)&a2,
            (int)&a3) )
      break;
    std::iter_swap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(
      a2,
      a3);
    __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator++((int)&a2);
  }
  *(_DWORD *)a1 = a2;
  return a1;
}

//----- (08049986) --------------------------------------------------------
bool __cdecl __gnu_cxx::operator==<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(int a1, int a2)
{
  int v2; // ebx@1

  v2 = *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::base(a1);
  return v2 == *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::base(a2);
}

//----- (080499B2) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator++(int a1)
{
  *(_DWORD *)a1 += 12;
  return a1;
}

//----- (080499C7) --------------------------------------------------------
int __userpurge std::copy_backward<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>@<eax>(int a1, int a2, int a3, char a4)
{
  int v5; // [sp+18h] [bp-10h]@1
  int v6; // [sp+1Ch] [bp-Ch]@1

  std::__miter_base<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(
    (int)&v5,
    a3);
  std::__miter_base<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(
    (int)&v6,
    a2);
  std::__copy_move_backward_a2<false,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(
    a1,
    v6,
    v5,
    a4);
  return a1;
}

//----- (08049A21) --------------------------------------------------------
int __cdecl std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(int a1, int (__cdecl *a2)(_DWORD, _DWORD))
{
  int v2; // eax@1
  int v3; // ebx@2
  int v4; // eax@2
  int v5; // eax@3
  int result; // eax@4
  int v7; // [sp+10h] [bp-18h]@1
  int v8; // [sp+14h] [bp-14h]@1
  int v9; // [sp+18h] [bp-10h]@1
  int v10; // [sp+1Ch] [bp-Ch]@1

  v2 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a1);
  v8 = *(_DWORD *)v2;
  v9 = *(_DWORD *)(v2 + 4);
  v10 = *(_DWORD *)(v2 + 8);
  v7 = a1;
  __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator--((int)&v7);
  while ( 1 )
  {
    v5 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&v7);
    if ( !(unsigned __int8)a2(&v8, v5) )
      break;
    v3 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a1);
    v4 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&v7);
    *(_DWORD *)v3 = *(_DWORD *)v4;
    *(_DWORD *)(v3 + 4) = *(_DWORD *)(v4 + 4);
    *(_DWORD *)(v3 + 8) = *(_DWORD *)(v4 + 8);
    a1 = v7;
    __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator--((int)&v7);
  }
  result = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a1);
  *(_DWORD *)result = v8;
  *(_DWORD *)(result + 4) = v9;
  *(_DWORD *)(result + 8) = v10;
  return result;
}

//----- (08049ADA) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::new_allocator()
{
  ;
}

//----- (08049AE0) --------------------------------------------------------
int __cdecl __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::allocate(int a1, unsigned int a2)
{
  if ( __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::max_size() < a2 )
    std::__throw_bad_alloc();
  return operator new(12 * a2);
}

//----- (08049B16) --------------------------------------------------------
void *__cdecl std::__uninitialized_fill_n<false>::__uninit_fill_n<std::pair<std::pair<int,int>,int> *,unsigned int,std::pair<std::pair<int,int>,int>>(int a1, int a2, int a3)
{
  void *result; // eax@1
  int v4; // eax@2
  int v5; // [sp+1Ch] [bp-Ch]@1

  result = (void *)a1;
  v5 = a1;
  while ( a2 )
  {
    v4 = std::__addressof<std::pair<std::pair<int,int>,int>>(v5);
    result = std::_Construct<std::pair<std::pair<int,int>,int>,std::pair<std::pair<int,int>,int>>((void *)v4, a3);
    --a2;
    v5 += 12;
  }
  return result;
}

//----- (08049B4D) --------------------------------------------------------
char __cdecl std::make_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, char a2, int (__cdecl *a3)(_DWORD, _DWORD))
{
  char result; // al@1
  int v4; // eax@3
  int i; // [sp+34h] [bp-14h]@2
  char v6; // [sp+38h] [bp-10h]@3
  int v7; // [sp+3Ch] [bp-Ch]@2

  result = __gnu_cxx::operator-<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(
             (int)&a2,
             (int)&a1) <= 1;
  if ( !result )
  {
    v7 = __gnu_cxx::operator-<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(
           (int)&a2,
           (int)&a1);
    for ( i = (v7 - 2) / 2; ; --i )
    {
      __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
        (int)&v6,
        (int)&a1,
        (int)&i);
      v4 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&v6);
      std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,int,std::pair<std::pair<int,int>,int>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
        a1,
        i,
        v7,
        *(_DWORD *)v4,
        *(_DWORD *)(v4 + 4),
        *(_DWORD *)(v4 + 8),
        a3);
      result = i;
      if ( !i )
        break;
    }
  }
  return result;
}

//----- (08049C22) --------------------------------------------------------
bool __cdecl __gnu_cxx::operator<<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(int a1, int a2)
{
  unsigned int v2; // ebx@1

  v2 = *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::base(a1);
  return v2 < *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::base(a2);
}

//----- (08049C4E) --------------------------------------------------------
int __cdecl std::__pop_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, char a2, char a3, int (__cdecl *a4)(_DWORD, _DWORD))
{
  int v4; // eax@1
  int v5; // ST24_4@1
  int v6; // ST28_4@1
  int v7; // ST2C_4@1
  int v8; // ebx@1
  int v9; // eax@1
  int v10; // eax@1

  v4 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a3);
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  v7 = *(_DWORD *)(v4 + 8);
  v8 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a3);
  v9 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a1);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
  v10 = __gnu_cxx::operator-<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>(
          (int)&a2,
          (int)&a1);
  return std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,int,std::pair<std::pair<int,int>,int>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
           a1,
           0,
           v10,
           v5,
           v6,
           v7,
           a4);
}

//----- (08049CEE) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator--(int a1)
{
  *(_DWORD *)a1 -= 12;
  return a1;
}

//----- (08049D03) --------------------------------------------------------
int __cdecl std::iter_swap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(char a1, char a2)
{
  return std::__iter_swap<true>::iter_swap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(
           a1,
           a2);
}

//----- (08049D1D) --------------------------------------------------------
int __userpurge std::__miter_base<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>@<eax>(int a1, int a2)
{
  std::_Iter_base<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,false>::_S_base(
    a1,
    a2);
  return a1;
}

//----- (08049D3F) --------------------------------------------------------
int __userpurge std::__copy_move_backward_a2<false,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>@<eax>(int a1, char a2, char a3, char a4)
{
  int v4; // esi@1
  int v5; // ebx@1
  int v6; // eax@1
  int v8; // [sp+1Ch] [bp-Ch]@1

  v4 = std::__niter_base<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(a4);
  v5 = std::__niter_base<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(a3);
  v6 = std::__niter_base<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(a2);
  v8 = std::__copy_move_backward_a<false,std::pair<std::pair<int,int>,int> *,std::pair<std::pair<int,int>,int> *>(
         v6,
         v5,
         v4);
  __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::__normal_iterator(
    a1,
    (int)&v8);
  return a1;
}

//----- (08049D9E) --------------------------------------------------------
signed int __gnu_cxx::new_allocator<std::pair<std::pair<int,int>,int>>::max_size()
{
  return 357913941;
}

//----- (08049DA8) --------------------------------------------------------
int __cdecl std::__addressof<std::pair<std::pair<int,int>,int>>(int a1)
{
  return a1;
}

//----- (08049DB0) --------------------------------------------------------
void *__cdecl std::_Construct<std::pair<std::pair<int,int>,int>,std::pair<std::pair<int,int>,int>>(void *a1, int a2)
{
  void *result; // eax@1

  result = operator new(0xCu, a1);
  if ( result )
  {
    *(_DWORD *)result = *(_DWORD *)a2;
    *((_DWORD *)result + 1) = *(_DWORD *)(a2 + 4);
    *((_DWORD *)result + 2) = *(_DWORD *)(a2 + 8);
  }
  return result;
}

//----- (08049DE2) --------------------------------------------------------
int __cdecl std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,int,std::pair<std::pair<int,int>,int>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, int a2, int a3, int a4, int a5, int a6, int (__cdecl *a7)(_DWORD, _DWORD))
{
  int v7; // ebx@2
  int v8; // eax@2
  int v9; // ebx@4
  int v10; // eax@4
  int v11; // ebx@8
  int v12; // eax@8
  int i; // [sp+28h] [bp-40h]@1
  char v15; // [sp+2Ch] [bp-3Ch]@2
  int v16; // [sp+30h] [bp-38h]@2
  char v17; // [sp+34h] [bp-34h]@2
  char v18; // [sp+38h] [bp-30h]@4
  char v19; // [sp+3Ch] [bp-2Ch]@4
  char v20; // [sp+40h] [bp-28h]@8
  char v21; // [sp+44h] [bp-24h]@8
  int v22; // [sp+48h] [bp-20h]@8
  int v23; // [sp+4Ch] [bp-1Ch]@1

  v23 = a2;
  for ( i = a2; (a3 - 1) / 2 > i; a2 = i )
  {
    i = 2 * (i + 1);
    v16 = i - 1;
    __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
      (int)&v15,
      (int)&a1,
      (int)&v16);
    v7 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&v15);
    __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
      (int)&v17,
      (int)&a1,
      (int)&i);
    v8 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&v17);
    if ( (unsigned __int8)a7(v8, v7) )
      --i;
    __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
      (int)&v18,
      (int)&a1,
      (int)&a2);
    v9 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&v18);
    __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
      (int)&v19,
      (int)&a1,
      (int)&i);
    v10 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&v19);
    *(_DWORD *)v9 = *(_DWORD *)v10;
    *(_DWORD *)(v9 + 4) = *(_DWORD *)(v10 + 4);
    *(_DWORD *)(v9 + 8) = *(_DWORD *)(v10 + 8);
  }
  if ( !(a3 & 1) && (a3 - 2) / 2 == i )
  {
    i = 2 * (i + 1);
    __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
      (int)&v20,
      (int)&a1,
      (int)&a2);
    v11 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&v20);
    v22 = i - 1;
    __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
      (int)&v21,
      (int)&a1,
      (int)&v22);
    v12 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&v21);
    *(_DWORD *)v11 = *(_DWORD *)v12;
    *(_DWORD *)(v11 + 4) = *(_DWORD *)(v12 + 4);
    *(_DWORD *)(v11 + 8) = *(_DWORD *)(v12 + 8);
    a2 = i - 1;
  }
  return std::__push_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,int,std::pair<std::pair<int,int>,int>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(
           a1,
           a2,
           v23,
           a4,
           a5,
           a6,
           a7);
}

//----- (08049FD9) --------------------------------------------------------
int __cdecl std::__iter_swap<true>::iter_swap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(char a1, char a2)
{
  int v2; // ebx@1
  int v3; // eax@1

  v2 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a2);
  v3 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&a1);
  return std::swap<std::pair<std::pair<int,int>,int>>(v3, v2);
}

//----- (0804A00A) --------------------------------------------------------
int __userpurge std::_Iter_base<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,false>::_S_base@<eax>(int a1, int a2)
{
  *(_DWORD *)a1 = a2;
  return a1;
}

//----- (0804A01C) --------------------------------------------------------
int __cdecl std::__niter_base<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>>(char a1)
{
  return std::_Iter_base<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,true>::_S_base(a1);
}

//----- (0804A02F) --------------------------------------------------------
int __cdecl std::__copy_move_backward_a<false,std::pair<std::pair<int,int>,int> *,std::pair<std::pair<int,int>,int> *>(int a1, int a2, int a3)
{
  return std::__copy_move_backward<false,false,std::random_access_iterator_tag>::__copy_move_b<std::pair<std::pair<int,int>,int> *,std::pair<std::pair<int,int>,int> *>(
           a1,
           a2,
           a3);
}

//----- (0804A054) --------------------------------------------------------
int __cdecl std::__push_heap<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,int,std::pair<std::pair<int,int>,int>,bool (*)(std::pair<std::pair<int,int>,int> const&,std::pair<std::pair<int,int>,int> const&)>(char a1, int a2, int a3, int a4, int a5, int a6, int (__cdecl *a7)(_DWORD, _DWORD))
{
  int v7; // ebx@2
  int v8; // eax@2
  int v9; // eax@4
  bool v10; // al@5
  int result; // eax@8
  int i; // [sp+1Ch] [bp-2Ch]@1
  char v13; // [sp+20h] [bp-28h]@2
  char v14; // [sp+24h] [bp-24h]@2
  char v15; // [sp+28h] [bp-20h]@4
  char v16; // [sp+2Ch] [bp-1Ch]@8

  for ( i = (a2 - 1) / 2; ; i = (i - 1) / 2 )
  {
    v10 = 0;
    if ( a2 > a3 )
    {
      __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
        (int)&v15,
        (int)&a1,
        (int)&i);
      v9 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&v15);
      if ( (unsigned __int8)a7(v9, &a4) )
        v10 = 1;
    }
    if ( !v10 )
      break;
    __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
      (int)&v13,
      (int)&a1,
      (int)&a2);
    v7 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&v13);
    __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
      (int)&v14,
      (int)&a1,
      (int)&i);
    v8 = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&v14);
    *(_DWORD *)v7 = *(_DWORD *)v8;
    *(_DWORD *)(v7 + 4) = *(_DWORD *)(v8 + 4);
    *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
    a2 = i;
  }
  __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator+(
    (int)&v16,
    (int)&a1,
    (int)&a2);
  result = __gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::operator*((int)&v16);
  *(_DWORD *)result = a4;
  *(_DWORD *)(result + 4) = a5;
  *(_DWORD *)(result + 8) = a6;
  return result;
}

//----- (0804A188) --------------------------------------------------------
int __cdecl std::swap<std::pair<std::pair<int,int>,int>>(int a1, int a2)
{
  int v2; // ST04_4@1
  int v3; // ST08_4@1
  int v4; // ST0C_4@1
  int result; // eax@1

  v2 = *(_DWORD *)a1;
  v3 = *(_DWORD *)(a1 + 4);
  v4 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  result = a2;
  *(_DWORD *)a2 = v2;
  *(_DWORD *)(a2 + 4) = v3;
  *(_DWORD *)(a2 + 8) = v4;
  return result;
}

//----- (0804A1CE) --------------------------------------------------------
int __cdecl std::_Iter_base<__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>,true>::_S_base(char a1)
{
  return *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<std::pair<int,int>,int> *,std::vector<std::pair<std::pair<int,int>,int>,std::allocator<std::pair<std::pair<int,int>,int>>>>::base((int)&a1);
}

//----- (0804A1E3) --------------------------------------------------------
int __cdecl std::__copy_move_backward<false,false,std::random_access_iterator_tag>::__copy_move_b<std::pair<std::pair<int,int>,int> *,std::pair<std::pair<int,int>,int> *>(int a1, int a2, int a3)
{
  int i; // [sp+Ch] [bp-4h]@1

  for ( i = -1431655765 * ((a2 - a1) >> 2); i > 0; --i )
  {
    a3 -= 12;
    a2 -= 12;
    *(_DWORD *)a3 = *(_DWORD *)a2;
    *(_DWORD *)(a3 + 4) = *(_DWORD *)(a2 + 4);
    *(_DWORD *)(a3 + 8) = *(_DWORD *)(a2 + 8);
  }
  return a3;
}

//----- (0804A250) --------------------------------------------------------
void _libc_csu_fini()
{
  ;
}

//----- (0804A260) --------------------------------------------------------
void __cdecl _libc_csu_init()
{
  init_proc();
}

//----- (0804A2BA) --------------------------------------------------------
void _i686_get_pc_thunk_bx()
{
  ;
}

//----- (0804A2C0) --------------------------------------------------------
int __fastcall _do_global_ctors_aux(int a1, int a2)
{
  int (**v2)(); // ebx@1
  void (__cdecl *v3)(); // eax@1
  int v5; // [sp-4h] [bp-8h]@1

  v5 = a2;
  v2 = &off_804C188;
  v3 = (void (__cdecl *)())off_804C188;
  if ( off_804C188 != (int (*)())-1 )
  {
    do
    {
      --v2;
      v3();
      v3 = (void (__cdecl *)())*v2;
    }
    while ( *v2 != (int (*)())-1 );
  }
  return v5;
}
// 804C188: using guessed type int (*off_804C188)();

//----- (0804A2E8) --------------------------------------------------------
void term_proc()
{
  _do_global_dtors_aux();
}

#error "There were 2 decompilation failure(s) on 88 function(s)"
