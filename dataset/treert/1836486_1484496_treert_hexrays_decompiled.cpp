/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2014 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

int init_proc();
// int __cxa_atexit(const char *, ...); weak
// int __gmon_start__(void); weak
// void __cdecl operator delete(void *); idb
// int putchar(int c);
// _DWORD std::ios_base::Init::Init(std::ios_base::Init *this); idb
// int __cdecl std::_Rb_tree_decrement(_DWORD); weak
// _DWORD __cdecl std::ios_base::Init::~Init(std::ios_base::Init *__hidden this); idb
// int scanf(const char *format, ...);
// FILE *freopen(const char *filename, const char *modes, FILE *stream);
// int printf(const char *format, ...);
// _DWORD __cdecl operator new(unsigned int); idb
// int __cdecl std::_Rb_tree_insert_and_rebalance(_DWORD, _DWORD, _DWORD, _DWORD); weak
// int puts(const char *s);
// int __cdecl std::_Rb_tree_increment(_DWORD); weak
// _DWORD std::__throw_bad_alloc(void); idb
signed int deregister_tm_clones();
int register_tm_clones();
void _do_global_dtors_aux();
int frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
int __cdecl __static_initialization_and_destruction_0(int a1, int a2);
int GLOBAL__sub_I_a();
void *__cdecl operator new(unsigned int a1, void *a2);
int __cdecl std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::map(int a1);
int __cdecl std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::clear(int a1);
// int __userpurge std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::find@<eax>(int a1, int a2, int a3);
// int __userpurge std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::end@<eax>(int a1, int a2);
bool __cdecl std::_Rb_tree_iterator<std::pair<int const,int>>::operator!=(int a1, int a2);
int __cdecl std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::operator[](int a1, int a2);
void std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_Rb_tree_impl<std::less<int>,false>::~_Rb_tree_impl();
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_Rb_tree(int a1);
void __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::~_Rb_tree(int a1);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::clear(int a1);
// int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::find@<eax>(int a1, int a2, int a3);
// int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::end@<eax>(int a1, int a2);
// int __userpurge std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::lower_bound@<eax>(int a1, int a2, int a3);
int __stdcall std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::key_comp(int a1);
int __cdecl std::_Rb_tree_iterator<std::pair<int const,int>>::operator*(int a1);
bool __cdecl std::less<int>::operator()(int a1, int a2, int a3);
bool __cdecl std::_Rb_tree_iterator<std::pair<int const,int>>::operator==(int a1, int a2);
int __cdecl std::pair<int const,int>::pair(int a1, int a2, int a3);
// int __userpurge std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::insert@<eax>(int a1, int a2, char a3, int a4);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_Rb_tree_impl<std::less<int>,false>::_Rb_tree_impl(int a1);
void std::allocator<std::_Rb_tree_node<std::pair<int const,int>>>::~allocator();
void __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_erase(int a1, void *a2);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_begin(int a1);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_end(int a1);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_leftmost(int a1);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_root(int a1);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_rightmost(int a1);
// int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_lower_bound@<eax>(int a1, int a2, int a3, int a4, int a5);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_key(int a1);
int __cdecl std::_Rb_tree_iterator<std::pair<int const,int>>::_Rb_tree_iterator(int a1, int a2);
// int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::lower_bound@<eax>(int a1, int a2, int a3);
int __stdcall std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::key_comp(int a1);
int __cdecl std::_Rb_tree_const_iterator<std::pair<int const,int>>::_Rb_tree_const_iterator(int a1, int a2);
// int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_insert_unique_@<eax>(int a1, int a2, char a3, int a4);
void std::allocator<std::_Rb_tree_node<std::pair<int const,int>>>::allocator();
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_Rb_tree_impl<std::less<int>,false>::_M_initialize(int a1);
void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const,int>>>::~new_allocator();
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_right(int a1);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_left(int a1);
void __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_destroy_node(int a1, void *a2);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_key(int a1);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_value(int a1);
int __cdecl std::_Select1st<std::pair<int const,int>>::operator()(int a1, int a2);
// int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_get_insert_hint_unique_pos@<eax>(int a1, int a2, char a3, int a4);
// int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_insert_@<eax>(int a1, int a2, int a3, int a4, int a5);
void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const,int>>>::new_allocator();
// int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::get_allocator@<eax>(int a1, int a2);
void std::allocator<std::pair<int const,int>>::~allocator();
int __cdecl std::__addressof<std::pair<int const,int>>(int a1);
void __gnu_cxx::new_allocator<std::pair<int const,int>>::destroy();
void __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_put_node(int a1, void *a2);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_value(int a1);
// int __userpurge std::_Rb_tree_const_iterator<std::pair<int const,int>>::_M_const_cast@<eax>(int a1, int *a2);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::size(int a1);
int __cdecl std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(int a1, int a2, int a3);
// int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_get_insert_unique_pos@<eax>(int a1, int a2, int a3);
int __cdecl std::_Rb_tree_iterator<std::pair<int const,int>>::operator--(int a1);
int __cdecl std::_Rb_tree_iterator<std::pair<int const,int>>::operator++(int a1);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_create_node(int a1, int a2);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_get_Node_allocator(int a1);
void std::allocator<std::pair<int const,int>>::allocator<std::_Rb_tree_node<std::pair<int const,int>>>();
void __gnu_cxx::new_allocator<std::pair<int const,int>>::~new_allocator();
void __cdecl __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const,int>>>::deallocate(int a1, void *a2);
// int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::begin@<eax>(int a1, int a2);
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_get_node(int a1);
void *__cdecl __gnu_cxx::new_allocator<std::pair<int const,int>>::construct(int a1, void *a2, int a3);
void __gnu_cxx::new_allocator<std::pair<int const,int>>::new_allocator();
int __cdecl __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const,int>>>::allocate(int a1, unsigned int a2);
signed int __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const,int>>>::max_size();
void __cdecl std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::~map(int a1);
void _libc_csu_fini(); // idb
void __cdecl _libc_csu_init();
void _i686_get_pc_thunk_bx();
int __fastcall _do_global_ctors_aux(int a1, int a2);
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

int (*off_804BB04)() = &GLOBAL__sub_I_a; // weak
int _DTOR_LIST__[] = { 4294967295 }; // weak
_UNKNOWN _DTOR_END__; // weak
_UNKNOWN _dso_handle; // weak
FILE *stdin; // idb
FILE *stdout; // idb
char completed_3328; // weak
int dtor_idx_3330; // weak
int a[]; // weak
int n; // weak
_UNKNOWN st; // weak
_UNKNOWN std::__ioinit; // weak
// extern _UNKNOWN _gmon_start__; weak


//----- (0804873C) --------------------------------------------------------
int init_proc()
{
  int v0; // edx@3
  int v1; // ecx@3
  int v3; // [sp+0h] [bp-8h]@0

  if ( &_gmon_start__ )
    __gmon_start__();
  frame_dummy();
  _do_global_ctors_aux(v1, v0);
  return v3;
}
// 8048790: using guessed type int __gmon_start__(void);

//----- (080488A0) --------------------------------------------------------
#error "80488A3: positive sp value has been found (funcsize=2)"

//----- (080488D0) --------------------------------------------------------
signed int deregister_tm_clones()
{
  return 3;
}
// 80488D0: could not find valid save-restore pair for ebp

//----- (08048900) --------------------------------------------------------
int register_tm_clones()
{
  return 0;
}
// 8048900: could not find valid save-restore pair for ebp

//----- (08048940) --------------------------------------------------------
void _do_global_dtors_aux()
{
  int v0; // eax@2
  int i; // ebx@2

  if ( !completed_3328 )
  {
    v0 = dtor_idx_3330;
    for ( i = ((&_DTOR_END__ - (_UNKNOWN *)_DTOR_LIST__) >> 2) - 1; dtor_idx_3330 < (unsigned int)i; v0 = dtor_idx_3330 )
    {
      dtor_idx_3330 = v0 + 1;
      ((void (*)(void))_DTOR_LIST__[v0 + 1])();
    }
    deregister_tm_clones();
    completed_3328 = 1;
  }
}
// 804BB0C: using guessed type int _DTOR_LIST__[];
// 804BC84: using guessed type char completed_3328;
// 804BC88: using guessed type int dtor_idx_3330;

//----- (08048990) --------------------------------------------------------
int frame_dummy()
{
  return register_tm_clones();
}
// 8048990: could not find valid save-restore pair for ebp

//----- (080489C0) --------------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  int v3; // eax@12
  int v4; // eax@30
  int v6; // [sp+1Ch] [bp-2Ch]@6
  int v7; // [sp+20h] [bp-28h]@1
  char v8; // [sp+24h] [bp-24h]@11
  char v9; // [sp+28h] [bp-20h]@11
  int l; // [sp+2Ch] [bp-1Ch]@23
  int k; // [sp+30h] [bp-18h]@16
  int j; // [sp+34h] [bp-14h]@6
  int i; // [sp+38h] [bp-10h]@2
  int v14; // [sp+3Ch] [bp-Ch]@1

  freopen("C-small-attempt0.in", "r", stdin);
  freopen("C.out", "w", stdout);
  scanf("%d", &v7);
  v14 = 0;
  while ( 1 )
  {
    v4 = v7--;
    if ( v4 == 0 )
      break;
    ++v14;
    scanf("%d", &n);
    for ( i = 0; i < n; ++i )
      scanf("%d", 4 * i + 134528160);
    std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::clear((int)&st);
    for ( i = 0; 1 << n > i; ++i )
    {
      v6 = 0;
      for ( j = 0; j < n; ++j )
      {
        if ( (i >> j) & 1 )
          v6 += a[j];
      }
      std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::end((int)&v8, (int)&st);
      std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::find((int)&v9, (int)&st, (int)&v6);
      if ( std::_Rb_tree_iterator<std::pair<int const,int>>::operator!=((int)&v9, (int)&v8) )
        break;
      v3 = std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::operator[]((int)&st, (int)&v6);
      *(_DWORD *)v3 = i;
    }
    printf("Case #%d:\n", v14);
    if ( 1 << n == i )
    {
      puts("Impossible");
    }
    else
    {
      for ( k = 0; k < n; ++k )
      {
        if ( (i >> k) & 1 )
        {
          i ^= 1 << k;
          printf("%d", a[k]);
          if ( i )
            putchar(32);
          else
            putchar(10);
        }
      }
      i = *(_DWORD *)std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::operator[](
                       (int)&st,
                       (int)&v6);
      for ( l = 0; l < n; ++l )
      {
        if ( (i >> l) & 1 )
        {
          i ^= 1 << l;
          printf("%d", a[l]);
          if ( i )
            putchar(32);
          else
            putchar(10);
        }
      }
    }
  }
  return 0;
}
// 804BCA0: using guessed type int a[];
// 804BCF8: using guessed type int n;

//----- (08048CB5) --------------------------------------------------------
int __cdecl __static_initialization_and_destruction_0(int a1, int a2)
{
  int result; // eax@3

  if ( a1 == 1 && a2 == 0xFFFF )
  {
    std::ios_base::Init::Init((std::ios_base::Init *)&std::__ioinit);
    __cxa_atexit((const char *)std::ios_base::Init::~Init, &std::__ioinit, &_dso_handle);
    std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::map((int)&st);
    result = __cxa_atexit(
               (const char *)std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::~map,
               &st,
               &_dso_handle);
  }
  return result;
}
// 8048780: using guessed type int __cxa_atexit(const char *, ...);

//----- (08048D1C) --------------------------------------------------------
int GLOBAL__sub_I_a()
{
  return __static_initialization_and_destruction_0(1, 0xFFFF);
}

//----- (08048D38) --------------------------------------------------------
void *__cdecl operator new(unsigned int a1, void *a2)
{
  return a2;
}

//----- (08048D40) --------------------------------------------------------
int __cdecl std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::map(int a1)
{
  return std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_Rb_tree(a1);
}

//----- (08048D54) --------------------------------------------------------
int __cdecl std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::clear(int a1)
{
  return std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::clear(a1);
}

//----- (08048D68) --------------------------------------------------------
int __userpurge std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::find@<eax>(int a1, int a2, int a3)
{
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::find(
    a1,
    a2,
    a3);
  return a1;
}

//----- (08048D92) --------------------------------------------------------
int __userpurge std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::end@<eax>(int a1, int a2)
{
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::end(
    a1,
    a2);
  return a1;
}

//----- (08048DB4) --------------------------------------------------------
bool __cdecl std::_Rb_tree_iterator<std::pair<int const,int>>::operator!=(int a1, int a2)
{
  return *(_DWORD *)a1 != *(_DWORD *)a2;
}

//----- (08048DC8) --------------------------------------------------------
int __cdecl std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::operator[](int a1, int a2)
{
  int v2; // edi@2
  bool v3; // al@3
  int v5; // [sp+18h] [bp-40h]@6
  char v6; // [sp+1Fh] [bp-39h]@2
  int v7; // [sp+28h] [bp-30h]@1
  char v8; // [sp+2Ch] [bp-2Ch]@1
  char v9; // [sp+33h] [bp-25h]@2
  char v10; // [sp+34h] [bp-24h]@6
  int v11; // [sp+3Ch] [bp-1Ch]@6

  std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::lower_bound((int)&v7, a1, a2);
  std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::end((int)&v8, a1);
  v3 = 1;
  if ( !std::_Rb_tree_iterator<std::pair<int const,int>>::operator==((int)&v7, (int)&v8) )
  {
    v2 = std::_Rb_tree_iterator<std::pair<int const,int>>::operator*((int)&v7);
    std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::key_comp((int)&v6);
    if ( !std::less<int>::operator()((int)&v9, a2, v2) )
      v3 = 0;
  }
  if ( v3 )
  {
    v11 = 0;
    std::pair<int const,int>::pair((int)&v10, a2, (int)&v11);
    std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::insert((int)&v5, a1, v7, (int)&v10);
    v7 = v5;
  }
  return std::_Rb_tree_iterator<std::pair<int const,int>>::operator*((int)&v7) + 4;
}

//----- (08048EE6) --------------------------------------------------------
void std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_Rb_tree_impl<std::less<int>,false>::~_Rb_tree_impl()
{
  std::allocator<std::_Rb_tree_node<std::pair<int const,int>>>::~allocator();
}

//----- (08048EFA) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_Rb_tree(int a1)
{
  return std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_Rb_tree_impl<std::less<int>,false>::_Rb_tree_impl(a1);
}

//----- (08048F0E) --------------------------------------------------------
void __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::~_Rb_tree(int a1)
{
  int v1; // eax@1

  v1 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_begin(a1);
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_erase(
    a1,
    (void *)v1);
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_Rb_tree_impl<std::less<int>,false>::~_Rb_tree_impl();
}

//----- (08048F5A) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::clear(int a1)
{
  int v1; // eax@1
  int v2; // ebx@1
  int v3; // ebx@1
  int result; // eax@1

  v1 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_begin(a1);
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_erase(
    a1,
    (void *)v1);
  v2 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_leftmost(a1);
  *(_DWORD *)v2 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_end(a1);
  *(_DWORD *)std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_root(a1) = 0;
  v3 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_rightmost(a1);
  *(_DWORD *)v3 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_end(a1);
  result = a1;
  *(_DWORD *)(a1 + 20) = 0;
  return result;
}

//----- (08048FD0) --------------------------------------------------------
int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::find@<eax>(int a1, int a2, int a3)
{
  int v3; // ebx@1
  int v4; // eax@1
  int v5; // eax@2
  int v7; // [sp+28h] [bp-10h]@1
  char v8; // [sp+2Ch] [bp-Ch]@1

  v3 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_end(a2);
  v4 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_begin(a2);
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_lower_bound(
    (int)&v7,
    a2,
    v4,
    v3,
    a3);
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::end(
    (int)&v8,
    a2);
  if ( std::_Rb_tree_iterator<std::pair<int const,int>>::operator==((int)&v7, (int)&v8)
    || (v5 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_key(v7),
        std::less<int>::operator()(a2, a3, v5)) )
    std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::end(
      a1,
      a2);
  else
    *(_DWORD *)a1 = v7;
  return a1;
}

//----- (080490A2) --------------------------------------------------------
int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::end@<eax>(int a1, int a2)
{
  std::_Rb_tree_iterator<std::pair<int const,int>>::_Rb_tree_iterator(a1, a2 + 4);
  return a1;
}

//----- (080490C4) --------------------------------------------------------
int __userpurge std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::lower_bound@<eax>(int a1, int a2, int a3)
{
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::lower_bound(
    a1,
    a2,
    a3);
  return a1;
}

//----- (080490EE) --------------------------------------------------------
int __stdcall std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::key_comp(int a1)
{
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::key_comp(a1);
  return a1;
}

//----- (08049110) --------------------------------------------------------
int __cdecl std::_Rb_tree_iterator<std::pair<int const,int>>::operator*(int a1)
{
  return *(_DWORD *)a1 + 16;
}

//----- (0804911E) --------------------------------------------------------
bool __cdecl std::less<int>::operator()(int a1, int a2, int a3)
{
  return *(_DWORD *)a2 < *(_DWORD *)a3;
}

//----- (08049132) --------------------------------------------------------
bool __cdecl std::_Rb_tree_iterator<std::pair<int const,int>>::operator==(int a1, int a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2;
}

//----- (08049146) --------------------------------------------------------
int __cdecl std::pair<int const,int>::pair(int a1, int a2, int a3)
{
  int result; // eax@1

  *(_DWORD *)a1 = *(_DWORD *)a2;
  result = a1;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)a3;
  return result;
}

//----- (08049160) --------------------------------------------------------
int __userpurge std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::insert@<eax>(int a1, int a2, char a3, int a4)
{
  int v5; // [sp+1Ch] [bp-Ch]@1

  std::_Rb_tree_const_iterator<std::pair<int const,int>>::_Rb_tree_const_iterator((int)&v5, (int)&a3);
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_insert_unique_(
    a1,
    a2,
    v5,
    a4);
  return a1;
}

//----- (080491AC) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_Rb_tree_impl<std::less<int>,false>::_Rb_tree_impl(int a1)
{
  std::allocator<std::_Rb_tree_node<std::pair<int const,int>>>::allocator();
  *(_DWORD *)(a1 + 4) = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 12) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 20) = 0;
  return std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_Rb_tree_impl<std::less<int>,false>::_M_initialize(a1);
}

//----- (080491FC) --------------------------------------------------------
void std::allocator<std::_Rb_tree_node<std::pair<int const,int>>>::~allocator()
{
  __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const,int>>>::~new_allocator();
}

//----- (08049210) --------------------------------------------------------
void __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_erase(int a1, void *a2)
{
  int v2; // eax@2
  int v3; // ST1C_4@2

  while ( a2 )
  {
    v2 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_right((int)a2);
    std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_erase(
      a1,
      (void *)v2);
    v3 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_left((int)a2);
    std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_destroy_node(
      a1,
      a2);
    a2 = (void *)v3;
  }
}

//----- (08049260) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_begin(int a1)
{
  return *(_DWORD *)(a1 + 8);
}

//----- (0804926C) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_end(int a1)
{
  return a1 + 4;
}

//----- (08049278) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_leftmost(int a1)
{
  return a1 + 12;
}

//----- (08049284) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_root(int a1)
{
  return a1 + 8;
}

//----- (08049290) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_rightmost(int a1)
{
  return a1 + 16;
}

//----- (0804929C) --------------------------------------------------------
int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_lower_bound@<eax>(int a1, int a2, int a3, int a4, int a5)
{
  int v5; // eax@2

  while ( a3 )
  {
    v5 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_key(a3);
    if ( !std::less<int>::operator()(a2, v5, a5) )
    {
      a4 = a3;
      a3 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_left(a3);
    }
    else
    {
      a3 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_right(a3);
    }
  }
  std::_Rb_tree_iterator<std::pair<int const,int>>::_Rb_tree_iterator(a1, a4);
  return a1;
}

//----- (0804930F) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_key(int a1)
{
  int v1; // eax@1
  char v3; // [sp+1Fh] [bp-9h]@1

  v1 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_value(a1);
  return std::_Select1st<std::pair<int const,int>>::operator()((int)&v3, v1);
}

//----- (08049332) --------------------------------------------------------
int __cdecl std::_Rb_tree_iterator<std::pair<int const,int>>::_Rb_tree_iterator(int a1, int a2)
{
  int result; // eax@1

  result = a1;
  *(_DWORD *)a1 = a2;
  return result;
}

//----- (08049340) --------------------------------------------------------
int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::lower_bound@<eax>(int a1, int a2, int a3)
{
  int v3; // ebx@1
  int v4; // eax@1

  v3 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_end(a2);
  v4 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_begin(a2);
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_lower_bound(
    a1,
    a2,
    v4,
    v3,
    a3);
  return a1;
}

//----- (0804938E) --------------------------------------------------------
int __stdcall std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::key_comp(int a1)
{
  return a1;
}

//----- (0804939A) --------------------------------------------------------
int __cdecl std::_Rb_tree_const_iterator<std::pair<int const,int>>::_Rb_tree_const_iterator(int a1, int a2)
{
  int result; // eax@1

  result = a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  return result;
}

//----- (080493AA) --------------------------------------------------------
int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_insert_unique_@<eax>(int a1, int a2, char a3, int a4)
{
  int v4; // eax@1
  int v6; // [sp+24h] [bp-14h]@1
  int v7; // [sp+28h] [bp-10h]@1
  char v8; // [sp+2Fh] [bp-9h]@1

  v4 = std::_Select1st<std::pair<int const,int>>::operator()((int)&v8, a4);
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_get_insert_hint_unique_pos(
    (int)&v6,
    a2,
    a3,
    v4);
  if ( v7 )
    std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_insert_(
      a1,
      a2,
      v6,
      v7,
      a4);
  else
    std::_Rb_tree_iterator<std::pair<int const,int>>::_Rb_tree_iterator(a1, v6);
  return a1;
}

//----- (0804943E) --------------------------------------------------------
void std::allocator<std::_Rb_tree_node<std::pair<int const,int>>>::allocator()
{
  __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const,int>>>::new_allocator();
}

//----- (08049452) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_Rb_tree_impl<std::less<int>,false>::_M_initialize(int a1)
{
  int result; // eax@1

  *(_DWORD *)(a1 + 4) = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 12) = a1 + 4;
  result = a1;
  *(_DWORD *)(a1 + 16) = a1 + 4;
  return result;
}

//----- (08049484) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const,int>>>::~new_allocator()
{
  ;
}

//----- (08049489) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_right(int a1)
{
  return *(_DWORD *)(a1 + 12);
}

//----- (08049494) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_left(int a1)
{
  return *(_DWORD *)(a1 + 8);
}

//----- (080494A0) --------------------------------------------------------
void __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_destroy_node(int a1, void *a2)
{
  char v2; // [sp+1Fh] [bp-9h]@1

  std::__addressof<std::pair<int const,int>>((int)((char *)a2 + 16));
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::get_allocator(
    (int)&v2,
    a1);
  __gnu_cxx::new_allocator<std::pair<int const,int>>::destroy();
  std::allocator<std::pair<int const,int>>::~allocator();
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_put_node(
    a1,
    a2);
}

//----- (080494FD) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_key(int a1)
{
  int v1; // eax@1
  char v3; // [sp+1Fh] [bp-9h]@1

  v1 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_value(a1);
  return std::_Select1st<std::pair<int const,int>>::operator()((int)&v3, v1);
}

//----- (0804951F) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_value(int a1)
{
  return a1 + 16;
}

//----- (0804952A) --------------------------------------------------------
int __cdecl std::_Select1st<std::pair<int const,int>>::operator()(int a1, int a2)
{
  return a2;
}

//----- (08049532) --------------------------------------------------------
int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_get_insert_hint_unique_pos@<eax>(int a1, int a2, char a3, int a4)
{
  int v4; // ebx@1
  int v5; // eax@3
  int v6; // eax@3
  bool v7; // al@4
  int v8; // eax@7
  int v9; // eax@9
  int v10; // ebx@10
  int v11; // ebx@11
  int v12; // eax@11
  int v13; // eax@12
  int v14; // eax@12
  int v15; // eax@17
  int v16; // ebx@18
  int v17; // eax@19
  int v18; // eax@20
  int v19; // eax@20
  int v21; // [sp+10h] [bp-28h]@18
  int v22; // [sp+14h] [bp-24h]@10
  int v23; // [sp+18h] [bp-20h]@1
  int v24; // [sp+1Ch] [bp-1Ch]@7
  int v25; // [sp+20h] [bp-18h]@14
  int v26; // [sp+24h] [bp-14h]@19
  int v27; // [sp+28h] [bp-10h]@22
  int v28; // [sp+2Ch] [bp-Ch]@25

  std::_Rb_tree_const_iterator<std::pair<int const,int>>::_M_const_cast((int)&v23, (int *)&a3);
  v4 = v23;
  if ( v4 == std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_end(a2) )
  {
    v7 = 0;
    if ( std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::size(a2) )
    {
      v5 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_rightmost(a2);
      v6 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_key(*(_DWORD *)v5);
      if ( std::less<int>::operator()(a2, v6, a4) )
        v7 = 1;
    }
    if ( v7 )
    {
      v8 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_rightmost(a2);
      v24 = 0;
      std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(a1, (int)&v24, v8);
    }
    else
    {
      std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_get_insert_unique_pos(
        a1,
        a2,
        a4);
    }
  }
  else
  {
    v9 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_key(v23);
    if ( std::less<int>::operator()(a2, a4, v9) )
    {
      v22 = v23;
      v10 = v23;
      if ( v10 == *(_DWORD *)std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_leftmost(a2) )
      {
        v11 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_leftmost(a2);
        v12 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_leftmost(a2);
        std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(a1, v12, v11);
      }
      else
      {
        v13 = std::_Rb_tree_iterator<std::pair<int const,int>>::operator--((int)&v22);
        v14 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_key(*(_DWORD *)v13);
        if ( std::less<int>::operator()(a2, v14, a4) )
        {
          if ( std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_right(v22) == 0 )
          {
            v25 = 0;
            std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(a1, (int)&v25, (int)&v22);
          }
          else
          {
            std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(a1, (int)&v23, (int)&v23);
          }
        }
        else
        {
          std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_get_insert_unique_pos(
            a1,
            a2,
            a4);
        }
      }
    }
    else
    {
      v15 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_key(v23);
      if ( std::less<int>::operator()(a2, v15, a4) )
      {
        v21 = v23;
        v16 = v23;
        if ( v16 == *(_DWORD *)std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_rightmost(a2) )
        {
          v17 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_rightmost(a2);
          v26 = 0;
          std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(a1, (int)&v26, v17);
        }
        else
        {
          v18 = std::_Rb_tree_iterator<std::pair<int const,int>>::operator++((int)&v21);
          v19 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_key(*(_DWORD *)v18);
          if ( std::less<int>::operator()(a2, a4, v19) )
          {
            if ( std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_right(v23) == 0 )
            {
              v27 = 0;
              std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(a1, (int)&v27, (int)&v23);
            }
            else
            {
              std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(a1, (int)&v21, (int)&v21);
            }
          }
          else
          {
            std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_get_insert_unique_pos(
              a1,
              a2,
              a4);
          }
        }
      }
      else
      {
        v28 = 0;
        std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(a1, (int)&v23, (int)&v28);
      }
    }
  }
  return a1;
}

//----- (0804986A) --------------------------------------------------------
int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_insert_@<eax>(int a1, int a2, int a3, int a4, int a5)
{
  int v5; // esi@3
  int v6; // eax@3
  bool v7; // al@4
  char v9; // [sp+17h] [bp-11h]@3
  int v10; // [sp+18h] [bp-10h]@6
  unsigned __int8 v11; // [sp+1Fh] [bp-9h]@6

  v7 = 1;
  if ( !a3
    && std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_end(a2) != a4 )
  {
    v5 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_key(a4);
    v6 = std::_Select1st<std::pair<int const,int>>::operator()((int)&v9, a5);
    if ( !std::less<int>::operator()(a2, v6, v5) )
      v7 = 0;
  }
  v11 = v7;
  v10 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_create_node(
          a2,
          a5);
  std::_Rb_tree_insert_and_rebalance(v11, v10, a4, a2 + 4);
  ++*(_DWORD *)(a2 + 20);
  std::_Rb_tree_iterator<std::pair<int const,int>>::_Rb_tree_iterator(a1, v10);
  return a1;
}
// 8048840: using guessed type int __cdecl std::_Rb_tree_insert_and_rebalance(_DWORD, _DWORD, _DWORD, _DWORD);

//----- (08049938) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const,int>>>::new_allocator()
{
  ;
}

//----- (0804993E) --------------------------------------------------------
int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::get_allocator@<eax>(int a1, int a2)
{
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_get_Node_allocator(a2);
  std::allocator<std::pair<int const,int>>::allocator<std::_Rb_tree_node<std::pair<int const,int>>>();
  return a1;
}

//----- (08049966) --------------------------------------------------------
void std::allocator<std::pair<int const,int>>::~allocator()
{
  __gnu_cxx::new_allocator<std::pair<int const,int>>::~new_allocator();
}

//----- (08049979) --------------------------------------------------------
int __cdecl std::__addressof<std::pair<int const,int>>(int a1)
{
  return a1;
}

//----- (08049982) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<int const,int>>::destroy()
{
  ;
}

//----- (08049988) --------------------------------------------------------
void __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_put_node(int a1, void *a2)
{
  __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const,int>>>::deallocate(a1, a2);
}

//----- (080499AA) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_value(int a1)
{
  return a1 + 16;
}

//----- (080499B6) --------------------------------------------------------
int __userpurge std::_Rb_tree_const_iterator<std::pair<int const,int>>::_M_const_cast@<eax>(int a1, int *a2)
{
  std::_Rb_tree_iterator<std::pair<int const,int>>::_Rb_tree_iterator(a1, *a2);
  return a1;
}

//----- (080499D8) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::size(int a1)
{
  return *(_DWORD *)(a1 + 20);
}

//----- (080499E4) --------------------------------------------------------
int __cdecl std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(int a1, int a2, int a3)
{
  int result; // eax@1

  *(_DWORD *)a1 = *(_DWORD *)a2;
  result = a1;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)a3;
  return result;
}

//----- (080499FE) --------------------------------------------------------
int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_get_insert_unique_pos@<eax>(int a1, int a2, int a3)
{
  int v3; // eax@2
  int v4; // eax@3
  int v5; // eax@11
  int v7; // [sp+18h] [bp-30h]@7
  char v8; // [sp+1Ch] [bp-2Ch]@8
  int v9; // [sp+20h] [bp-28h]@9
  int v10; // [sp+24h] [bp-24h]@9
  int v11; // [sp+28h] [bp-20h]@12
  int v12; // [sp+2Ch] [bp-1Ch]@12
  int v13; // [sp+30h] [bp-18h]@13
  bool v14; // [sp+37h] [bp-11h]@1
  int v15; // [sp+38h] [bp-10h]@1
  int v16; // [sp+3Ch] [bp-Ch]@1

  v16 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_begin(a2);
  v15 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_end(a2);
  v14 = 1;
  while ( v16 )
  {
    v15 = v16;
    v3 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_key(v16);
    v14 = std::less<int>::operator()(a2, a3, v3);
    if ( v14 )
      v4 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_left(v16);
    else
      v4 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_right(v16);
    v16 = v4;
  }
  std::_Rb_tree_iterator<std::pair<int const,int>>::_Rb_tree_iterator((int)&v7, v15);
  if ( v14 )
  {
    std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::begin(
      (int)&v8,
      a2);
    if ( std::_Rb_tree_iterator<std::pair<int const,int>>::operator==((int)&v7, (int)&v8) )
    {
      v9 = v15;
      v10 = v16;
      std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(a1, (int)&v10, (int)&v9);
      return a1;
    }
    std::_Rb_tree_iterator<std::pair<int const,int>>::operator--((int)&v7);
  }
  v5 = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_S_key(v7);
  if ( std::less<int>::operator()(a2, v5, a3) )
  {
    v11 = v15;
    v12 = v16;
    std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(a1, (int)&v12, (int)&v11);
  }
  else
  {
    v13 = 0;
    std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(a1, (int)&v7, (int)&v13);
  }
  return a1;
}

//----- (08049B60) --------------------------------------------------------
int __cdecl std::_Rb_tree_iterator<std::pair<int const,int>>::operator--(int a1)
{
  *(_DWORD *)a1 = std::_Rb_tree_decrement(*(_DWORD *)a1);
  return a1;
}
// 80487D0: using guessed type int __cdecl std::_Rb_tree_decrement(_DWORD);

//----- (08049B7E) --------------------------------------------------------
int __cdecl std::_Rb_tree_iterator<std::pair<int const,int>>::operator++(int a1)
{
  *(_DWORD *)a1 = std::_Rb_tree_increment(*(_DWORD *)a1);
  return a1;
}
// 8048860: using guessed type int __cdecl std::_Rb_tree_increment(_DWORD);

//----- (08049B9C) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_create_node(int a1, int a2)
{
  int v2; // ebx@1
  char v4[5]; // [sp+1Bh] [bp-Dh]@1

  *(_DWORD *)&v4[1] = std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_get_node(a1);
  v2 = std::__addressof<std::pair<int const,int>>(*(_DWORD *)&v4[1] + 16);
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::get_allocator(
    (int)v4,
    a1);
  __gnu_cxx::new_allocator<std::pair<int const,int>>::construct((int)v4, (void *)v2, a2);
  std::allocator<std::pair<int const,int>>::~allocator();
  return *(_DWORD *)&v4[1];
}

//----- (08049C00) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_get_Node_allocator(int a1)
{
  return a1;
}

//----- (08049C08) --------------------------------------------------------
void std::allocator<std::pair<int const,int>>::allocator<std::_Rb_tree_node<std::pair<int const,int>>>()
{
  __gnu_cxx::new_allocator<std::pair<int const,int>>::new_allocator();
}

//----- (08049C1C) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<int const,int>>::~new_allocator()
{
  ;
}

//----- (08049C22) --------------------------------------------------------
void __cdecl __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const,int>>>::deallocate(int a1, void *a2)
{
  operator delete(a2);
}

//----- (08049C36) --------------------------------------------------------
int __userpurge std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::begin@<eax>(int a1, int a2)
{
  std::_Rb_tree_iterator<std::pair<int const,int>>::_Rb_tree_iterator(a1, *(_DWORD *)(a2 + 12));
  return a1;
}

//----- (08049C58) --------------------------------------------------------
int __cdecl std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::_M_get_node(int a1)
{
  return __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const,int>>>::allocate(a1, 1u);
}

//----- (08049C7C) --------------------------------------------------------
void *__cdecl __gnu_cxx::new_allocator<std::pair<int const,int>>::construct(int a1, void *a2, int a3)
{
  void *result; // eax@1
  void *v4; // ecx@1
  int v5; // edx@2

  result = operator new(8u, a2);
  v4 = result;
  if ( result )
  {
    v5 = *(_DWORD *)(a3 + 4);
    result = *(void **)a3;
    *(_DWORD *)v4 = *(_DWORD *)a3;
    *((_DWORD *)v4 + 1) = v5;
  }
  return result;
}

//----- (08049CAA) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<int const,int>>::new_allocator()
{
  ;
}

//----- (08049CB0) --------------------------------------------------------
int __cdecl __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const,int>>>::allocate(int a1, unsigned int a2)
{
  if ( __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const,int>>>::max_size() < a2 )
    std::__throw_bad_alloc();
  return operator new(24 * a2);
}

//----- (08049CE6) --------------------------------------------------------
signed int __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const,int>>>::max_size()
{
  return 178956970;
}

//----- (08049CF0) --------------------------------------------------------
void __cdecl std::map<int,int,std::less<int>,std::allocator<std::pair<int const,int>>>::~map(int a1)
{
  std::_Rb_tree<int,std::pair<int const,int>,std::_Select1st<std::pair<int const,int>>,std::less<int>,std::allocator<std::pair<int const,int>>>::~_Rb_tree(a1);
}

//----- (08049D10) --------------------------------------------------------
void _libc_csu_fini()
{
  ;
}

//----- (08049D20) --------------------------------------------------------
void __cdecl _libc_csu_init()
{
  init_proc();
}

//----- (08049D7A) --------------------------------------------------------
void _i686_get_pc_thunk_bx()
{
  ;
}

//----- (08049D80) --------------------------------------------------------
int __fastcall _do_global_ctors_aux(int a1, int a2)
{
  int (**v2)(); // ebx@1
  void (__cdecl *v3)(); // eax@1
  int v5; // [sp-4h] [bp-8h]@1

  v5 = a2;
  v2 = &off_804BB04;
  v3 = (void (__cdecl *)())off_804BB04;
  if ( off_804BB04 != (int (*)())-1 )
  {
    do
    {
      --v2;
      v3();
      v3 = (void (__cdecl *)())*v2;
    }
    while ( *v2 != (int (*)())-1 );
  }
  return v5;
}
// 804BB04: using guessed type int (*off_804BB04)();

//----- (08049DA8) --------------------------------------------------------
void term_proc()
{
  _do_global_dtors_aux();
}

#error "There were 1 decompilation failure(s) on 85 function(s)"
