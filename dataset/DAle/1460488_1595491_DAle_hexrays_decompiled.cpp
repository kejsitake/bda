/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2014 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

int init_proc();
// int __cdecl std::ostream::operator<<(_DWORD, _DWORD); weak
// int __gmon_start__(void); weak
// int __cdecl std::operator<<<std::char_traits<char>>(_DWORD, _DWORD); weak
// int __cdecl std::basic_ifstream<char,std::char_traits<char>>::~basic_ifstream(_DWORD); weak
// int __cdecl std::basic_ofstream<char,std::char_traits<char>>::~basic_ofstream(_DWORD); weak
// int __cdecl std::istream::operator>>(_DWORD, _DWORD); weak
// int __cdecl std::basic_ifstream<char,std::char_traits<char>>::basic_ifstream(_DWORD, _DWORD, _DWORD); weak
// int std::ostream::operator<<(_DWORD, const char *, ...); weak
// int __cdecl std::basic_ofstream<char,std::char_traits<char>>::basic_ofstream(_DWORD, _DWORD, _DWORD); weak
signed int deregister_tm_clones();
int register_tm_clones();
void _do_global_dtors_aux();
int frame_dummy();
int __cdecl main(int argc, const char **argv, const char **envp);
int __cdecl std::operator|(__int64 a1);
int __cdecl std::min<int>(int a1, int a2);
int __cdecl std::max<int>(int a1, int a2);
void _libc_csu_fini(); // idb
void __cdecl _libc_csu_init();
void _i686_get_pc_thunk_bx();
int __fastcall _do_global_ctors_aux(int a1, int a2);
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

// extern _UNKNOWN std::endl<char,std::char_traits<char>>; weak
int _CTOR_LIST__ = 4294967295; // weak
int _DTOR_LIST__[] = { 4294967295 }; // weak
_UNKNOWN _DTOR_END__; // weak
char edata; // weak
_UNKNOWN unk_8049143; // weak
int dtor_idx_3330; // weak
// extern _UNKNOWN _gmon_start__; weak


//----- (08048694) --------------------------------------------------------
int init_proc()
{
  int v0; // edx@3
  int v1; // ecx@3
  int v3; // [sp+0h] [bp-8h]@0

  if ( &_gmon_start__ )
    __gmon_start__();
  frame_dummy();
  _do_global_ctors_aux(v1, v0);
  return v3;
}
// 80486F0: using guessed type int __gmon_start__(void);

//----- (080487B0) --------------------------------------------------------
#error "80487B3: positive sp value has been found (funcsize=2)"

//----- (080487E0) --------------------------------------------------------
signed int deregister_tm_clones()
{
  signed int result; // eax@1

  result = &unk_8049143 - (_UNKNOWN *)&edata;
  if ( (unsigned int)(&unk_8049143 - (_UNKNOWN *)&edata) > 6 )
    result = 0;
  return result;
}
// 80487E0: could not find valid save-restore pair for ebp
// 8049140: using guessed type char edata;

//----- (08048810) --------------------------------------------------------
int register_tm_clones()
{
  return 0;
}
// 8048810: could not find valid save-restore pair for ebp

//----- (08048850) --------------------------------------------------------
void _do_global_dtors_aux()
{
  int v0; // eax@2
  int i; // ebx@2

  if ( !edata )
  {
    v0 = dtor_idx_3330;
    for ( i = ((&_DTOR_END__ - (_UNKNOWN *)_DTOR_LIST__) >> 2) - 1; dtor_idx_3330 < (unsigned int)i; v0 = dtor_idx_3330 )
    {
      dtor_idx_3330 = v0 + 1;
      ((void (*)(void))_DTOR_LIST__[v0 + 1])();
    }
    deregister_tm_clones();
    edata = 1;
  }
}
// 8049008: using guessed type int _DTOR_LIST__[];
// 8049140: using guessed type char edata;
// 8049144: using guessed type int dtor_idx_3330;

//----- (080488A0) --------------------------------------------------------
int frame_dummy()
{
  return register_tm_clones();
}
// 80488A0: could not find valid save-restore pair for ebp

//----- (080488D0) --------------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  int v3; // eax@1
  int v4; // eax@2
  int v5; // eax@2
  int v6; // eax@11
  int v7; // eax@13
  int v8; // ebx@23
  int v9; // eax@23
  int v10; // eax@23
  int v11; // eax@23
  int v12; // eax@23
  int v14; // [sp+14h] [bp-270h]@1
  int v15; // [sp+128h] [bp-15Ch]@1
  signed int l; // [sp+240h] [bp-44h]@4
  int v17; // [sp+244h] [bp-40h]@3
  int v18; // [sp+248h] [bp-3Ch]@2
  int v19; // [sp+24Ch] [bp-38h]@2
  int v20; // [sp+250h] [bp-34h]@2
  int v21; // [sp+254h] [bp-30h]@1
  int v22; // [sp+258h] [bp-2Ch]@11
  signed int v23; // [sp+25Ch] [bp-28h]@11
  int v24; // [sp+260h] [bp-24h]@13
  signed int v25; // [sp+264h] [bp-20h]@13
  int m; // [sp+268h] [bp-1Ch]@5
  signed int k; // [sp+26Ch] [bp-18h]@3
  char v28; // [sp+272h] [bp-12h]@3
  char v29; // [sp+273h] [bp-11h]@3
  int j; // [sp+274h] [bp-10h]@2
  int v31; // [sp+278h] [bp-Ch]@2
  int i; // [sp+27Ch] [bp-8h]@1

  std::basic_ifstream<char,std::char_traits<char>>::basic_ifstream(&v15, "b.in", 8);
  v3 = std::operator|(137438953488LL);
  std::basic_ofstream<char,std::char_traits<char>>::basic_ofstream(&v14, "b.out", v3);
  std::istream::operator>>(&v15, &v21);
  for ( i = 0; i < v21; ++i )
  {
    v4 = std::istream::operator>>(&v15, &v20);
    v5 = std::istream::operator>>(v4, &v19);
    std::istream::operator>>(v5, &v18);
    v31 = 0;
    for ( j = 0; j < v20; ++j )
    {
      std::istream::operator>>(&v15, &v17);
      v29 = 0;
      v28 = 0;
      for ( k = 0; k <= 10; ++k )
      {
        for ( l = k; ; ++l )
        {
          v24 = k + 2;
          v25 = 10;
          v7 = std::min<int>((int)&v25, (int)&v24);
          if ( *(_DWORD *)v7 < l )
            break;
          for ( m = *(_DWORD *)std::max<int>((int)&l, (int)&v18); ; ++m )
          {
            v22 = k + 2;
            v23 = 10;
            v6 = std::min<int>((int)&v23, (int)&v22);
            if ( *(_DWORD *)v6 < m )
              break;
            if ( m + k + l == v17 )
            {
              if ( m - k <= 1 )
                v29 = 1;
              else
                v28 = 1;
            }
          }
        }
      }
      if ( v29 )
      {
        ++v31;
      }
      else if ( v28 && v19 > 0 )
      {
        ++v31;
        --v19;
      }
    }
    v8 = i + 1;
    v9 = std::operator<<<std::char_traits<char>>(&v14, "Case #");
    v10 = std::ostream::operator<<(v9, v8);
    v11 = std::operator<<<std::char_traits<char>>(v10, ": ");
    v12 = std::ostream::operator<<(v11, v31);
    std::ostream::operator<<(v12, (const char *)&std::endl<char,std::char_traits<char>>);
  }
  std::basic_ofstream<char,std::char_traits<char>>::~basic_ofstream(&v14);
  std::basic_ifstream<char,std::char_traits<char>>::~basic_ifstream(&v15);
  return 0;
}
// 80486E0: using guessed type int __cdecl std::ostream::operator<<(_DWORD, _DWORD);
// 8048710: using guessed type int __cdecl std::operator<<<std::char_traits<char>>(_DWORD, _DWORD);
// 8048720: using guessed type int __cdecl std::basic_ifstream<char,std::char_traits<char>>::~basic_ifstream(_DWORD);
// 8048730: using guessed type int __cdecl std::basic_ofstream<char,std::char_traits<char>>::~basic_ofstream(_DWORD);
// 8048740: using guessed type int __cdecl std::istream::operator>>(_DWORD, _DWORD);
// 8048750: using guessed type int __cdecl std::basic_ifstream<char,std::char_traits<char>>::basic_ifstream(_DWORD, _DWORD, _DWORD);
// 8048760: using guessed type int std::ostream::operator<<(_DWORD, const char *, ...);
// 8048770: using guessed type int __cdecl std::basic_ofstream<char,std::char_traits<char>>::basic_ofstream(_DWORD, _DWORD, _DWORD);

//----- (08048C5A) --------------------------------------------------------
int __cdecl std::operator|(__int64 a1)
{
  return a1 | HIDWORD(a1);
}

//----- (08048C67) --------------------------------------------------------
int __cdecl std::min<int>(int a1, int a2)
{
  int result; // eax@2

  if ( *(_DWORD *)a2 >= *(_DWORD *)a1 )
    result = a1;
  else
    result = a2;
  return result;
}

//----- (08048C82) --------------------------------------------------------
int __cdecl std::max<int>(int a1, int a2)
{
  int result; // eax@2

  if ( *(_DWORD *)a1 >= *(_DWORD *)a2 )
    result = a1;
  else
    result = a2;
  return result;
}

//----- (08048CA0) --------------------------------------------------------
void _libc_csu_fini()
{
  ;
}

//----- (08048CB0) --------------------------------------------------------
void __cdecl _libc_csu_init()
{
  init_proc();
}

//----- (08048D0A) --------------------------------------------------------
void _i686_get_pc_thunk_bx()
{
  ;
}

//----- (08048D10) --------------------------------------------------------
int __fastcall _do_global_ctors_aux(int a1, int a2)
{
  int *v2; // ebx@1
  void (*v3)(void); // eax@1
  int v5; // [sp-4h] [bp-8h]@1

  v5 = a2;
  v2 = &_CTOR_LIST__;
  v3 = (void (*)(void))_CTOR_LIST__;
  if ( _CTOR_LIST__ != -1 )
  {
    do
    {
      --v2;
      v3();
      v3 = (void (*)(void))*v2;
    }
    while ( *v2 != -1 );
  }
  return v5;
}
// 8049000: using guessed type int _CTOR_LIST__;

//----- (08048D38) --------------------------------------------------------
void term_proc()
{
  _do_global_dtors_aux();
}

#error "There were 1 decompilation failure(s) on 15 function(s)"
