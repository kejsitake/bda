/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2014 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

int init_proc();
// int __cxa_atexit(const char *, ...); weak
// int __gmon_start__(void); weak
// _DWORD std::ios_base::Init::Init(std::ios_base::Init *this); idb
// _DWORD __cdecl std::ios_base::Init::~Init(std::ios_base::Init *__hidden this); idb
// int __cdecl std::operator<<<std::char_traits<char>>(_DWORD, _DWORD); weak
// _DWORD __cdecl operator new[](unsigned int); idb
// void __cdecl operator delete[](void *); idb
// int __cdecl std::ostream::operator<<(_DWORD, _DWORD, _DWORD, _DWORD); weak
// int std::ostream::operator<<(_DWORD, const char *, ...); weak
// int __cdecl std::istream::operator>>(_DWORD, _DWORD); weak
signed int deregister_tm_clones();
int register_tm_clones();
void _do_global_dtors_aux();
int frame_dummy();
void __cdecl mergesort(__int64 *a1, __int64 *a2);
int __cdecl main(int argc, const char **argv, const char **envp);
int __cdecl __static_initialization_and_destruction_0(int a1, int a2);
int GLOBAL__sub_I_q();
__int64 __cdecl std::abs(__int64 a1);
void _libc_csu_fini(); // idb
void __cdecl _libc_csu_init();
void _i686_get_pc_thunk_bx();
int __fastcall _do_global_ctors_aux(int a1, int a2);
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

// extern _UNKNOWN std::endl<char,std::char_traits<char>>; weak
_UNKNOWN unk_80492BC; // weak
_UNKNOWN unk_80492BF; // weak
int (*off_804A444)() = &GLOBAL__sub_I_q; // weak
int _DTOR_LIST__[] = { 4294967295 }; // weak
_UNKNOWN _DTOR_END__; // weak
_UNKNOWN _dso_handle; // weak
_UNKNOWN std::cin; // weak
_UNKNOWN std::cerr; // weak
_UNKNOWN std::cout; // weak
char completed_3328; // weak
int dtor_idx_3330; // weak
__int64 q; // weak
__int64 dir; // weak
_UNKNOWN std::__ioinit; // weak
// extern _UNKNOWN _gmon_start__; weak


//----- (080486B0) --------------------------------------------------------
int init_proc()
{
  int v0; // edx@3
  int v1; // ecx@3
  int v3; // [sp+0h] [bp-8h]@0

  if ( &_gmon_start__ )
    __gmon_start__();
  frame_dummy();
  _do_global_ctors_aux(v1, v0);
  return v3;
}
// 8048700: using guessed type int __gmon_start__(void);

//----- (080487D0) --------------------------------------------------------
#error "80487D3: positive sp value has been found (funcsize=2)"

//----- (08048800) --------------------------------------------------------
signed int deregister_tm_clones()
{
  return 3;
}
// 8048800: could not find valid save-restore pair for ebp

//----- (08048830) --------------------------------------------------------
int register_tm_clones()
{
  return 0;
}
// 8048830: could not find valid save-restore pair for ebp

//----- (08048870) --------------------------------------------------------
void _do_global_dtors_aux()
{
  int v0; // eax@2
  int i; // ebx@2

  if ( !completed_3328 )
  {
    v0 = dtor_idx_3330;
    for ( i = ((&_DTOR_END__ - (_UNKNOWN *)_DTOR_LIST__) >> 2) - 1; dtor_idx_3330 < (unsigned int)i; v0 = dtor_idx_3330 )
    {
      dtor_idx_3330 = v0 + 1;
      ((void (*)(void))_DTOR_LIST__[v0 + 1])();
    }
    deregister_tm_clones();
    completed_3328 = 1;
  }
}
// 804A44C: using guessed type int _DTOR_LIST__[];
// 804A76C: using guessed type char completed_3328;
// 804A770: using guessed type int dtor_idx_3330;

//----- (080488C0) --------------------------------------------------------
int frame_dummy()
{
  return register_tm_clones();
}
// 80488C0: could not find valid save-restore pair for ebp

//----- (080488F0) --------------------------------------------------------
void __cdecl mergesort(__int64 *a1, __int64 *a2)
{
  int v2; // edx@2
  unsigned int v3; // eax@3
  __int64 v4; // rcx@8
  __int64 v5; // rax@8
  char *v6; // ecx@10
  int v7; // edx@10
  char *v8; // ecx@11
  int v9; // edx@11
  __int64 v10; // rcx@13
  __int64 v11; // rax@13
  char *v12; // ecx@15
  int v13; // edx@15
  char *v14; // ecx@16
  int v15; // edx@16
  __int64 *v16; // ecx@20
  char *v17; // eax@20
  int v18; // edx@20
  __int64 *v19; // [sp+14h] [bp-34h]@5
  __int64 *v20; // [sp+18h] [bp-30h]@5
  void *v21; // [sp+1Ch] [bp-2Ch]@5
  signed __int64 v22; // [sp+20h] [bp-28h]@1
  signed __int64 j; // [sp+28h] [bp-20h]@19
  signed __int64 i; // [sp+30h] [bp-18h]@5
  __int64 *v25; // [sp+3Ch] [bp-Ch]@2

  v22 = a2 - a1;
  if ( v22 > 1 )
  {
    v2 = (a2 - a1) / 2;
    v25 = &a1[v2];
    mergesort(a1, &a1[v2]);
    mergesort(v25, a2);
    if ( (unsigned int)v22 > 0xFE00000 )
      v3 = -1;
    else
      v3 = 8 * v22;
    v21 = (void *)operator new[](v3);
    v20 = a1;
    v19 = v25;
    for ( i = 0LL; i < v22; ++i )
    {
      if ( dir )
      {
        if ( v25 != a2
          && ((LODWORD(v11) = *(_DWORD *)v25,
               HIDWORD(v10) = *((_DWORD *)a1 + 1),
               HIDWORD(v11) = *((_DWORD *)v25 + 1),
               LODWORD(v10) = *(_DWORD *)a1,
               v10 <= v11)
           || a1 == v19) )
        {
          v14 = (char *)v21 + 8 * i;
          v15 = *((_DWORD *)v25 + 1);
          *(_DWORD *)v14 = *(_DWORD *)v25;
          *((_DWORD *)v14 + 1) = v15;
          ++v25;
          q += v19 - a1;
        }
        else
        {
          v12 = (char *)v21 + 8 * i;
          v13 = *((_DWORD *)a1 + 1);
          *(_DWORD *)v12 = *(_DWORD *)a1;
          *((_DWORD *)v12 + 1) = v13;
          ++a1;
        }
      }
      else if ( v25 != a2
             && ((LODWORD(v5) = *(_DWORD *)v25,
                  HIDWORD(v4) = *((_DWORD *)a1 + 1),
                  HIDWORD(v5) = *((_DWORD *)v25 + 1),
                  LODWORD(v4) = *(_DWORD *)a1,
                  v4 >= v5)
              || a1 == v19) )
      {
        v8 = (char *)v21 + 8 * i;
        v9 = *((_DWORD *)v25 + 1);
        *(_DWORD *)v8 = *(_DWORD *)v25;
        *((_DWORD *)v8 + 1) = v9;
        ++v25;
        q += v19 - a1;
      }
      else
      {
        v6 = (char *)v21 + 8 * i;
        v7 = *((_DWORD *)a1 + 1);
        *(_DWORD *)v6 = *(_DWORD *)a1;
        *((_DWORD *)v6 + 1) = v7;
        ++a1;
      }
    }
    for ( j = 0LL; j < v22; ++j )
    {
      v16 = &v20[j];
      v17 = (char *)v21 + 8 * j;
      v18 = *((_DWORD *)v17 + 1);
      *(_DWORD *)v16 = *(_DWORD *)v17;
      *((_DWORD *)v16 + 1) = v18;
    }
    if ( v21 )
      operator delete[](v21);
  }
}
// 804A778: using guessed type __int64 q;
// 804A780: using guessed type __int64 dir;

//----- (08048B9C) --------------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  unsigned int v3; // eax@3
  unsigned int v4; // eax@6
  int v5; // eax@10
  int v6; // edx@10
  unsigned __int64 v7; // rax@13
  unsigned __int64 v8; // rax@13
  __int64 v9; // rt0@13
  __int64 v10; // rax@16
  __int64 *v11; // ecx@16
  int v12; // eax@19
  int v13; // eax@21
  int v14; // eax@22
  __int64 v15; // kr00_8@28
  int v16; // eax@28
  int v17; // eax@28
  int v18; // eax@28
  int v19; // ST0C_4@28
  int v20; // eax@28
  int v22; // [sp+Ch] [bp-80h]@13
  __int64 v23; // [sp+18h] [bp-74h]@2
  __int64 v24; // [sp+20h] [bp-6Ch]@1
  __int64 v25; // [sp+28h] [bp-64h]@19
  __int64 *v26; // [sp+30h] [bp-5Ch]@8
  int v27; // [sp+34h] [bp-58h]@5
  __int64 l; // [sp+38h] [bp-54h]@19
  __int64 v29; // [sp+40h] [bp-4Ch]@14
  __int64 v30; // [sp+48h] [bp-44h]@14
  __int64 k; // [sp+50h] [bp-3Ch]@13
  __int64 v32; // [sp+58h] [bp-34h]@13
  __int64 j; // [sp+60h] [bp-2Ch]@8
  __int64 v34; // [sp+68h] [bp-24h]@8
  __int64 v35; // [sp+70h] [bp-1Ch]@8
  __int64 i; // [sp+78h] [bp-14h]@1

  std::istream::operator>>(&std::cin, &v24);
  for ( i = 0LL; i < v24; ++i )
  {
    std::istream::operator>>(&std::cin, &v23);
    if ( (unsigned int)v23 > 0xFE00000 )
      v3 = -1;
    else
      v3 = 8 * v23;
    v27 = operator new[](v3);
    if ( (unsigned int)(v23 - 1) > 0xFE00000 )
      v4 = -1;
    else
      v4 = 8 * (v23 - 1);
    v26 = (__int64 *)operator new[](v4);
    v35 = 0LL;
    v34 = 0LL;
    for ( j = 0LL; j < v23; ++j )
    {
      std::istream::operator>>(&std::cin, 8 * j + v27);
      if ( *(_QWORD *)(8 * j + v27) > v34 )
      {
        v35 = j;
        v5 = 8 * j + v27;
        v6 = *(_DWORD *)(v5 + 4);
        LODWORD(v34) = *(_DWORD *)v5;
        HIDWORD(v34) = v6;
      }
    }
    v7 = (unsigned int)v23 * (unsigned __int64)(unsigned int)v23;
    v22 = v7 * HIDWORD(v23) + v23 * (2 * v23 * HIDWORD(v23) + HIDWORD(v7));
    v8 = (unsigned int)v23 * (unsigned __int64)(unsigned int)v7;
    HIDWORD(v9) = HIDWORD(v8) + v22;
    LODWORD(v9) = v8;
    v32 = 8 * (__PAIR__(HIDWORD(v8) + v22, (unsigned int)v8) + 124 * v9);
    for ( k = 0LL; k < v23; ++k )
    {
      v30 = 0LL;
      v29 = 0LL;
      while ( v30 < v23 )
      {
        if ( v35 != v30 )
        {
          v10 = v29++;
          v11 = &v26[v10];
          LODWORD(v10) = 8 * v30 + v27;
          HIDWORD(v10) = *(_DWORD *)(v10 + 4);
          *(_DWORD *)v11 = *(_DWORD *)v10;
          *((_DWORD *)v11 + 1) = HIDWORD(v10);
        }
        ++v30;
      }
      v25 = std::abs(v35 - k);
      dir = 0LL;
      q = 0LL;
      mergesort(v26, &v26[k]);
      v25 += q;
      dir = 1LL;
      q = 0LL;
      mergesort(&v26[k], &v26[v23 + 0x1FFFFFFF]);
      v25 += q;
      v12 = std::ostream::operator<<(&std::cerr, v25, HIDWORD(v25), v22);
      std::operator<<<std::char_traits<char>>(v12, &unk_80492BC);
      for ( l = 0LL; v23 - 1 > l; ++l )
      {
        if ( k == l )
        {
          v13 = std::ostream::operator<<(&std::cerr, v34, HIDWORD(v34), v22);
          std::operator<<<std::char_traits<char>>(v13, &unk_80492BF);
        }
        v14 = std::ostream::operator<<(&std::cerr, LODWORD(v26[l]), HIDWORD(v26[l]), v22);
        std::operator<<<std::char_traits<char>>(v14, &unk_80492BF);
      }
      std::ostream::operator<<(&std::cerr, (const char *)&std::endl<char,std::char_traits<char>>);
      if ( v25 < v32 )
        v32 = v25;
    }
    v15 = i + 1;
    v16 = std::operator<<<std::char_traits<char>>(&std::cout, "Case #");
    v17 = std::ostream::operator<<(v16, v15, HIDWORD(v15), v22);
    v18 = std::operator<<<std::char_traits<char>>(v17, &unk_80492BC);
    v20 = std::ostream::operator<<(v18, v32, HIDWORD(v32), v19);
    std::ostream::operator<<(v20, (const char *)&std::endl<char,std::char_traits<char>>);
  }
  return 0;
}
// 8048740: using guessed type int __cdecl std::operator<<<std::char_traits<char>>(_DWORD, _DWORD);
// 8048770: using guessed type int __cdecl std::ostream::operator<<(_DWORD, _DWORD, _DWORD, _DWORD);
// 8048780: using guessed type int std::ostream::operator<<(_DWORD, const char *, ...);
// 8048790: using guessed type int __cdecl std::istream::operator>>(_DWORD, _DWORD);
// 804A778: using guessed type __int64 q;
// 804A780: using guessed type __int64 dir;

//----- (0804915A) --------------------------------------------------------
int __cdecl __static_initialization_and_destruction_0(int a1, int a2)
{
  int result; // eax@3

  if ( a1 == 1 && a2 == 0xFFFF )
  {
    std::ios_base::Init::Init((std::ios_base::Init *)&std::__ioinit);
    result = __cxa_atexit((const char *)std::ios_base::Init::~Init, &std::__ioinit, &_dso_handle);
  }
  return result;
}
// 80486F0: using guessed type int __cxa_atexit(const char *, ...);

//----- (08049199) --------------------------------------------------------
int GLOBAL__sub_I_q()
{
  return __static_initialization_and_destruction_0(1, 0xFFFF);
}

//----- (080491B5) --------------------------------------------------------
__int64 __cdecl std::abs(__int64 a1)
{
  __int64 v1; // rcx@1
  __int64 v2; // rax@1

  HIDWORD(v1) = SHIDWORD(a1) >> 31;
  LODWORD(v1) = SHIDWORD(a1) >> 31;
  LODWORD(v2) = a1 ^ (SHIDWORD(a1) >> 31);
  HIDWORD(v2) = HIDWORD(a1) ^ (SHIDWORD(a1) >> 31);
  return v2 - v1;
}

//----- (08049200) --------------------------------------------------------
void _libc_csu_fini()
{
  ;
}

//----- (08049210) --------------------------------------------------------
void __cdecl _libc_csu_init()
{
  init_proc();
}

//----- (0804926A) --------------------------------------------------------
void _i686_get_pc_thunk_bx()
{
  ;
}

//----- (08049270) --------------------------------------------------------
int __fastcall _do_global_ctors_aux(int a1, int a2)
{
  int (**v2)(); // ebx@1
  void (__cdecl *v3)(); // eax@1
  int v5; // [sp-4h] [bp-8h]@1

  v5 = a2;
  v2 = &off_804A444;
  v3 = (void (__cdecl *)())off_804A444;
  if ( off_804A444 != (int (*)())-1 )
  {
    do
    {
      --v2;
      v3();
      v3 = (void (__cdecl *)())*v2;
    }
    while ( *v2 != (int (*)())-1 );
  }
  return v5;
}
// 804A444: using guessed type int (*off_804A444)();

//----- (08049298) --------------------------------------------------------
void term_proc()
{
  _do_global_dtors_aux();
}

#error "There were 1 decompilation failure(s) on 16 function(s)"
