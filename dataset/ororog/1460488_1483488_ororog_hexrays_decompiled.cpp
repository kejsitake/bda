/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2014 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

int init_proc();
// int __cxa_atexit(const char *, ...); weak
// int getchar(void);
// int __gmon_start__(void); weak
// void __cdecl operator delete(void *); idb
// _DWORD std::ios_base::Init::Init(std::ios_base::Init *this); idb
// int __cdecl std::_Rb_tree_decrement(_DWORD); weak
// _DWORD __cdecl std::ios_base::Init::~Init(std::ios_base::Init *__hidden this); idb
// int printf(const char *format, ...);
// _DWORD __cdecl operator new(unsigned int); idb
// int __cdecl std::_Rb_tree_insert_and_rebalance(_DWORD, _DWORD, _DWORD, _DWORD); weak
// _DWORD std::__throw_bad_alloc(void); idb
signed int deregister_tm_clones();
int register_tm_clones();
void _do_global_dtors_aux();
int frame_dummy();
int nextInt(void);
int __cdecl solve(__int64 a1, __int64 a2);
int __cdecl main(int argc, const char **argv, const char **envp);
int __cdecl __static_initialization_and_destruction_0(int a1, int a2);
int GLOBAL__sub_I__Z7nextIntv();
void *__cdecl operator new(unsigned int a1, void *a2);
void __cdecl std::set<std::pair<int,int>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::~set(int a1);
int __cdecl std::set<std::pair<int,int>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::set(int a1);
void std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_Rb_tree_impl<std::less<std::pair<int,int>>,false>::~_Rb_tree_impl();
void __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::~_Rb_tree(int a1);
// int __userpurge std::make_pair<long long,long long>@<eax>(int a1, int a2, int a3, int a4, int a5);
int __cdecl std::pair<int,int>::pair<long long,long long>(int a1, int a2);
// int __userpurge std::set<std::pair<int,int>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::insert@<eax>(int a1, int a2, int a3);
int __cdecl std::set<std::pair<int,int>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::size(int a1);
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_Rb_tree(int a1);
void std::allocator<std::_Rb_tree_node<std::pair<int,int>>>::~allocator();
void __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_erase(int a1, void *a2);
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_begin(int a1);
int __cdecl std::pair<long long,long long>::pair(int a1, int a2, int a3);
// int __userpurge std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_insert_unique@<eax>(int a1, int a2, int a3);
int __cdecl std::_Rb_tree_const_iterator<std::pair<int,int>>::_Rb_tree_const_iterator(int a1, int a2);
int __cdecl std::pair<std::_Rb_tree_const_iterator<std::pair<int,int>>,bool>::pair(int a1, int a2, int a3);
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::size(int a1);
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_Rb_tree_impl<std::less<std::pair<int,int>>,false>::_Rb_tree_impl(int a1);
void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int,int>>>::~new_allocator();
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_right(int a1);
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_left(int a1);
void __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_destroy_node(int a1, void *a2);
// int __userpurge std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_get_insert_unique_pos@<eax>(int a1, int a2, int a3);
int __cdecl std::_Identity<std::pair<int,int>>::operator()(int a1, int a2);
// int __userpurge std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_insert_@<eax>(int a1, int a2, int a3, int a4, int a5);
int __cdecl std::pair<std::_Rb_tree_iterator<std::pair<int,int>>,bool>::pair(int a1, int a2, int a3);
int __cdecl std::_Rb_tree_iterator<std::pair<int,int>>::_Rb_tree_iterator(int a1, int a2);
void std::allocator<std::_Rb_tree_node<std::pair<int,int>>>::allocator();
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_Rb_tree_impl<std::less<std::pair<int,int>>,false>::_M_initialize(int a1);
// int __userpurge std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::get_allocator@<eax>(int a1, int a2);
void std::allocator<std::pair<int,int>>::~allocator();
int __cdecl std::__addressof<std::pair<int,int>>(int a1);
void __gnu_cxx::new_allocator<std::pair<int,int>>::destroy();
void __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_put_node(int a1, void *a2);
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_end(int a1);
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_key(int a1);
bool __cdecl std::less<std::pair<int,int>>::operator()(int a1, int a2, int a3);
// int __userpurge std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::begin@<eax>(int a1, int a2);
bool __cdecl std::_Rb_tree_iterator<std::pair<int,int>>::operator==(int a1, int a2);
int __cdecl std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(int a1, int a2, int a3);
int __cdecl std::_Rb_tree_iterator<std::pair<int,int>>::operator--(int a1);
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_key(int a1);
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_create_node(int a1, int a2);
void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int,int>>>::new_allocator();
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_get_Node_allocator(int a1);
void std::allocator<std::pair<int,int>>::allocator<std::_Rb_tree_node<std::pair<int,int>>>();
void __gnu_cxx::new_allocator<std::pair<int,int>>::~new_allocator();
void __cdecl __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int,int>>>::deallocate(int a1, void *a2);
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_value(int a1);
bool __cdecl std::operator<<int,int>(int a1, int a2);
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_value(int a1);
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_get_node(int a1);
void *__cdecl __gnu_cxx::new_allocator<std::pair<int,int>>::construct(int a1, void *a2, int a3);
void __gnu_cxx::new_allocator<std::pair<int,int>>::new_allocator();
int __cdecl __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int,int>>>::allocate(int a1, unsigned int a2);
signed int __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int,int>>>::max_size();
void _libc_csu_fini(); // idb
void __cdecl _libc_csu_init();
void _i686_get_pc_thunk_bx();
int __fastcall _do_global_ctors_aux(int a1, int a2);
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

int (*off_804B2D4)() = &GLOBAL__sub_I__Z7nextIntv; // weak
int _DTOR_LIST__[] = { 4294967295 }; // weak
_UNKNOWN _DTOR_END__; // weak
_UNKNOWN _dso_handle; // weak
char edata; // weak
_UNKNOWN unk_804B423; // weak
int dtor_idx_3330; // weak
_UNKNOWN std::__ioinit; // weak
// extern _UNKNOWN _gmon_start__; weak


//----- (08048698) --------------------------------------------------------
int init_proc()
{
  int v0; // edx@3
  int v1; // ecx@3
  int v3; // [sp+0h] [bp-8h]@0

  if ( &_gmon_start__ )
    __gmon_start__();
  frame_dummy();
  _do_global_ctors_aux(v1, v0);
  return v3;
}
// 8048710: using guessed type int __gmon_start__(void);

//----- (080487E0) --------------------------------------------------------
#error "80487E3: positive sp value has been found (funcsize=2)"

//----- (08048810) --------------------------------------------------------
signed int deregister_tm_clones()
{
  signed int result; // eax@1

  result = &unk_804B423 - (_UNKNOWN *)&edata;
  if ( (unsigned int)(&unk_804B423 - (_UNKNOWN *)&edata) > 6 )
    result = 0;
  return result;
}
// 8048810: could not find valid save-restore pair for ebp
// 804B420: using guessed type char edata;

//----- (08048840) --------------------------------------------------------
int register_tm_clones()
{
  return 0;
}
// 8048840: could not find valid save-restore pair for ebp

//----- (08048880) --------------------------------------------------------
void _do_global_dtors_aux()
{
  int v0; // eax@2
  int i; // ebx@2

  if ( !edata )
  {
    v0 = dtor_idx_3330;
    for ( i = ((&_DTOR_END__ - (_UNKNOWN *)_DTOR_LIST__) >> 2) - 1; dtor_idx_3330 < (unsigned int)i; v0 = dtor_idx_3330 )
    {
      dtor_idx_3330 = v0 + 1;
      ((void (*)(void))_DTOR_LIST__[v0 + 1])();
    }
    deregister_tm_clones();
    edata = 1;
  }
}
// 804B2DC: using guessed type int _DTOR_LIST__[];
// 804B420: using guessed type char edata;
// 804B424: using guessed type int dtor_idx_3330;

//----- (080488D0) --------------------------------------------------------
int frame_dummy()
{
  return register_tm_clones();
}
// 80488D0: could not find valid save-restore pair for ebp

//----- (08048900) --------------------------------------------------------
int nextInt(void)
{
  int v1; // [sp+8h] [bp-10h]@1
  char v2; // [sp+Fh] [bp-9h]@2

  v1 = 0;
  do
    v2 = getchar();
  while ( (unsigned int)(v2 - 48) > 9 );
  do
  {
    v1 = 10 * v1 + v2 - 48;
    v2 = getchar();
  }
  while ( (unsigned int)(v2 - 48) <= 9 );
  return v1;
}

//----- (0804895F) --------------------------------------------------------
int __cdecl solve(__int64 a1, __int64 a2)
{
  int v2; // ebx@2
  char v4; // [sp+38h] [bp-90h]@1
  char v5; // [sp+50h] [bp-78h]@14
  char v6; // [sp+58h] [bp-70h]@14
  char v7; // [sp+60h] [bp-68h]@14
  __int64 v8; // [sp+70h] [bp-58h]@11
  int k; // [sp+7Ch] [bp-4Ch]@10
  __int64 v10; // [sp+80h] [bp-48h]@10
  __int64 v11; // [sp+88h] [bp-40h]@10
  __int64 j; // [sp+90h] [bp-38h]@9
  int i; // [sp+9Ch] [bp-2Ch]@6
  __int64 v14; // [sp+A0h] [bp-28h]@3
  __int64 v15; // [sp+A8h] [bp-20h]@3
  __int64 v16; // [sp+B0h] [bp-18h]@3
  int v17; // [sp+BCh] [bp-Ch]@1

  std::set<std::pair<int,int>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::set((int)&v4);
  v17 = 0;
  if ( a2 / a1 <= 9 )
  {
    v16 = 0LL;
    v15 = a1;
    v14 = 1LL;
    while ( v15 )
    {
      ++v16;
      v15 /= 10LL;
    }
    for ( i = 0; (signed int)v16 > i; ++i )
      v14 *= 10LL;
    for ( j = a1; j <= a2; ++j )
    {
      v11 = 10LL;
      v10 = v14 / 10;
      for ( k = 0; (signed int)v16 - 1 > k; ++k )
      {
        v8 = j * v11 % v14 + j / v10;
        if ( a1 <= v8 && j < v8 && v8 <= a2 )
        {
          ++v17;
          std::make_pair<long long,long long>((int)&v7, j, SHIDWORD(j), v8, SHIDWORD(v8));
          std::pair<int,int>::pair<long long,long long>((int)&v6, (int)&v7);
          std::set<std::pair<int,int>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::insert(
            (int)&v5,
            (int)&v4,
            (int)&v6);
        }
        v11 *= 10LL;
        v10 /= 10LL;
      }
    }
    v2 = std::set<std::pair<int,int>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::size((int)&v4);
  }
  else
  {
    v2 = 0;
  }
  std::set<std::pair<int,int>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::~set((int)&v4);
  return v2;
}

//----- (08048CD9) --------------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  int v3; // ST14_4@2
  int v4; // ST10_4@2
  int v5; // eax@2
  int v6; // edx@2
  int v8; // [sp+18h] [bp-Ch]@1
  int i; // [sp+1Ch] [bp-8h]@1

  v8 = nextInt();
  for ( i = 0; i < v8; ++i )
  {
    v3 = nextInt();
    v4 = nextInt();
    v5 = solve(v3, v4);
    printf("Case #%d: %d\n", i + 1, v5, v6, v4);
  }
  return 0;
}

//----- (08048D65) --------------------------------------------------------
int __cdecl __static_initialization_and_destruction_0(int a1, int a2)
{
  int result; // eax@3

  if ( a1 == 1 && a2 == 0xFFFF )
  {
    std::ios_base::Init::Init((std::ios_base::Init *)&std::__ioinit);
    result = __cxa_atexit((const char *)std::ios_base::Init::~Init, &std::__ioinit, &_dso_handle);
  }
  return result;
}
// 80486E0: using guessed type int __cxa_atexit(const char *, ...);

//----- (08048DA4) --------------------------------------------------------
int GLOBAL__sub_I__Z7nextIntv()
{
  return __static_initialization_and_destruction_0(1, 0xFFFF);
}

//----- (08048DC0) --------------------------------------------------------
void *__cdecl operator new(unsigned int a1, void *a2)
{
  return a2;
}

//----- (08048DC8) --------------------------------------------------------
void __cdecl std::set<std::pair<int,int>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::~set(int a1)
{
  std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::~_Rb_tree(a1);
}

//----- (08048DDC) --------------------------------------------------------
int __cdecl std::set<std::pair<int,int>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::set(int a1)
{
  return std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_Rb_tree(a1);
}

//----- (08048DF0) --------------------------------------------------------
void std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_Rb_tree_impl<std::less<std::pair<int,int>>,false>::~_Rb_tree_impl()
{
  std::allocator<std::_Rb_tree_node<std::pair<int,int>>>::~allocator();
}

//----- (08048E04) --------------------------------------------------------
void __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::~_Rb_tree(int a1)
{
  int v1; // eax@1

  v1 = std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_begin(a1);
  std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_erase(
    a1,
    (void *)v1);
  std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_Rb_tree_impl<std::less<std::pair<int,int>>,false>::~_Rb_tree_impl();
}

//----- (08048E4F) --------------------------------------------------------
int __userpurge std::make_pair<long long,long long>@<eax>(int a1, int a2, int a3, int a4, int a5)
{
  int v6; // [sp+10h] [bp-18h]@1
  int v7; // [sp+14h] [bp-14h]@1
  int v8; // [sp+18h] [bp-10h]@1
  int v9; // [sp+1Ch] [bp-Ch]@1

  v8 = a2;
  v9 = a3;
  v6 = a4;
  v7 = a5;
  std::pair<long long,long long>::pair(a1, (int)&v8, (int)&v6);
  return a1;
}

//----- (08048E8E) --------------------------------------------------------
int __cdecl std::pair<int,int>::pair<long long,long long>(int a1, int a2)
{
  int v2; // et1@1
  int v3; // et1@1
  int result; // eax@1

  v2 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_DWORD *)(a2 + 12);
  result = a1;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 8);
  return result;
}

//----- (08048EB4) --------------------------------------------------------
int __userpurge std::set<std::pair<int,int>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::insert@<eax>(int a1, int a2, int a3)
{
  char v4; // [sp+14h] [bp-14h]@1
  int v5; // [sp+18h] [bp-10h]@1
  char v6; // [sp+1Ch] [bp-Ch]@1

  std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_insert_unique(
    (int)&v4,
    a2,
    a3);
  std::_Rb_tree_const_iterator<std::pair<int,int>>::_Rb_tree_const_iterator((int)&v6, (int)&v4);
  std::pair<std::_Rb_tree_const_iterator<std::pair<int,int>>,bool>::pair(a1, (int)&v6, (int)&v5);
  return a1;
}

//----- (08048F16) --------------------------------------------------------
int __cdecl std::set<std::pair<int,int>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::size(int a1)
{
  return std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::size(a1);
}

//----- (08048F2A) --------------------------------------------------------
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_Rb_tree(int a1)
{
  return std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_Rb_tree_impl<std::less<std::pair<int,int>>,false>::_Rb_tree_impl(a1);
}

//----- (08048F3E) --------------------------------------------------------
void std::allocator<std::_Rb_tree_node<std::pair<int,int>>>::~allocator()
{
  __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int,int>>>::~new_allocator();
}

//----- (08048F52) --------------------------------------------------------
void __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_erase(int a1, void *a2)
{
  int v2; // eax@2
  int v3; // ST1C_4@2

  while ( a2 )
  {
    v2 = std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_right((int)a2);
    std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_erase(
      a1,
      (void *)v2);
    v3 = std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_left((int)a2);
    std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_destroy_node(
      a1,
      a2);
    a2 = (void *)v3;
  }
}

//----- (08048FA2) --------------------------------------------------------
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_begin(int a1)
{
  return *(_DWORD *)(a1 + 8);
}

//----- (08048FAE) --------------------------------------------------------
int __cdecl std::pair<long long,long long>::pair(int a1, int a2, int a3)
{
  int v3; // edx@1
  int v4; // edx@1
  int result; // eax@1

  v3 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = v3;
  v4 = *(_DWORD *)(a3 + 4);
  result = *(_DWORD *)a3;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)a3;
  *(_DWORD *)(a1 + 12) = v4;
  return result;
}

//----- (08048FD4) --------------------------------------------------------
int __userpurge std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_insert_unique@<eax>(int a1, int a2, int a3)
{
  int v3; // eax@1
  int v5; // [sp+28h] [bp-20h]@1
  int v6; // [sp+2Ch] [bp-1Ch]@1
  char v7; // [sp+32h] [bp-16h]@1
  char v8; // [sp+33h] [bp-15h]@2
  char v9; // [sp+34h] [bp-14h]@2
  char v10; // [sp+3Bh] [bp-Dh]@3
  char v11; // [sp+3Ch] [bp-Ch]@3

  v3 = std::_Identity<std::pair<int,int>>::operator()((int)&v7, a3);
  std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_get_insert_unique_pos(
    (int)&v5,
    a2,
    v3);
  if ( v6 )
  {
    v8 = 1;
    std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_insert_(
      (int)&v9,
      a2,
      v5,
      v6,
      a3);
    std::pair<std::_Rb_tree_iterator<std::pair<int,int>>,bool>::pair(a1, (int)&v9, (int)&v8);
  }
  else
  {
    v10 = 0;
    std::_Rb_tree_iterator<std::pair<int,int>>::_Rb_tree_iterator((int)&v11, v5);
    std::pair<std::_Rb_tree_iterator<std::pair<int,int>>,bool>::pair(a1, (int)&v11, (int)&v10);
  }
  return a1;
}

//----- (0804909C) --------------------------------------------------------
int __cdecl std::_Rb_tree_const_iterator<std::pair<int,int>>::_Rb_tree_const_iterator(int a1, int a2)
{
  int result; // eax@1

  result = a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  return result;
}

//----- (080490AC) --------------------------------------------------------
int __cdecl std::pair<std::_Rb_tree_const_iterator<std::pair<int,int>>,bool>::pair(int a1, int a2, int a3)
{
  int result; // eax@1

  *(_DWORD *)a1 = *(_DWORD *)a2;
  result = a1;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)a3;
  return result;
}

//----- (080490C6) --------------------------------------------------------
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::size(int a1)
{
  return *(_DWORD *)(a1 + 20);
}

//----- (080490D2) --------------------------------------------------------
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_Rb_tree_impl<std::less<std::pair<int,int>>,false>::_Rb_tree_impl(int a1)
{
  std::allocator<std::_Rb_tree_node<std::pair<int,int>>>::allocator();
  *(_DWORD *)(a1 + 4) = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 12) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 20) = 0;
  return std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_Rb_tree_impl<std::less<std::pair<int,int>>,false>::_M_initialize(a1);
}

//----- (08049122) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int,int>>>::~new_allocator()
{
  ;
}

//----- (08049127) --------------------------------------------------------
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_right(int a1)
{
  return *(_DWORD *)(a1 + 12);
}

//----- (08049132) --------------------------------------------------------
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_left(int a1)
{
  return *(_DWORD *)(a1 + 8);
}

//----- (0804913E) --------------------------------------------------------
void __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_destroy_node(int a1, void *a2)
{
  char v2; // [sp+1Fh] [bp-9h]@1

  std::__addressof<std::pair<int,int>>((int)((char *)a2 + 16));
  std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::get_allocator(
    (int)&v2,
    a1);
  __gnu_cxx::new_allocator<std::pair<int,int>>::destroy();
  std::allocator<std::pair<int,int>>::~allocator();
  std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_put_node(
    a1,
    a2);
}

//----- (0804919C) --------------------------------------------------------
int __userpurge std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_get_insert_unique_pos@<eax>(int a1, int a2, int a3)
{
  int v3; // eax@2
  int v4; // eax@3
  int v5; // eax@11
  int v7; // [sp+18h] [bp-30h]@7
  char v8; // [sp+1Ch] [bp-2Ch]@8
  int v9; // [sp+20h] [bp-28h]@9
  int v10; // [sp+24h] [bp-24h]@9
  int v11; // [sp+28h] [bp-20h]@12
  int v12; // [sp+2Ch] [bp-1Ch]@12
  int v13; // [sp+30h] [bp-18h]@13
  bool v14; // [sp+37h] [bp-11h]@1
  int v15; // [sp+38h] [bp-10h]@1
  int v16; // [sp+3Ch] [bp-Ch]@1

  v16 = std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_begin(a2);
  v15 = std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_end(a2);
  v14 = 1;
  while ( v16 )
  {
    v15 = v16;
    v3 = std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_key(v16);
    v14 = std::less<std::pair<int,int>>::operator()(a2, a3, v3);
    if ( v14 )
      v4 = std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_left(v16);
    else
      v4 = std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_right(v16);
    v16 = v4;
  }
  std::_Rb_tree_iterator<std::pair<int,int>>::_Rb_tree_iterator((int)&v7, v15);
  if ( v14 )
  {
    std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::begin(
      (int)&v8,
      a2);
    if ( std::_Rb_tree_iterator<std::pair<int,int>>::operator==((int)&v7, (int)&v8) )
    {
      v9 = v15;
      v10 = v16;
      std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(a1, (int)&v10, (int)&v9);
      return a1;
    }
    std::_Rb_tree_iterator<std::pair<int,int>>::operator--((int)&v7);
  }
  v5 = std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_key(v7);
  if ( std::less<std::pair<int,int>>::operator()(a2, v5, a3) )
  {
    v11 = v15;
    v12 = v16;
    std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(a1, (int)&v12, (int)&v11);
  }
  else
  {
    v13 = 0;
    std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(a1, (int)&v7, (int)&v13);
  }
  return a1;
}

//----- (0804930A) --------------------------------------------------------
int __cdecl std::_Identity<std::pair<int,int>>::operator()(int a1, int a2)
{
  return a2;
}

//----- (08049312) --------------------------------------------------------
int __userpurge std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_insert_@<eax>(int a1, int a2, int a3, int a4, int a5)
{
  int v5; // esi@3
  int v6; // eax@3
  bool v7; // al@4
  char v9; // [sp+17h] [bp-11h]@3
  int v10; // [sp+18h] [bp-10h]@6
  unsigned __int8 v11; // [sp+1Fh] [bp-9h]@6

  v7 = 1;
  if ( !a3
    && std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_end(a2) != a4 )
  {
    v5 = std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_key(a4);
    v6 = std::_Identity<std::pair<int,int>>::operator()((int)&v9, a5);
    if ( !std::less<std::pair<int,int>>::operator()(a2, v6, v5) )
      v7 = 0;
  }
  v11 = v7;
  v10 = std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_create_node(
          a2,
          a5);
  std::_Rb_tree_insert_and_rebalance(v11, v10, a4, a2 + 4);
  ++*(_DWORD *)(a2 + 20);
  std::_Rb_tree_iterator<std::pair<int,int>>::_Rb_tree_iterator(a1, v10);
  return a1;
}
// 80487A0: using guessed type int __cdecl std::_Rb_tree_insert_and_rebalance(_DWORD, _DWORD, _DWORD, _DWORD);

//----- (080493EE) --------------------------------------------------------
int __cdecl std::pair<std::_Rb_tree_iterator<std::pair<int,int>>,bool>::pair(int a1, int a2, int a3)
{
  int result; // eax@1

  *(_DWORD *)a1 = *(_DWORD *)a2;
  result = a1;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)a3;
  return result;
}

//----- (08049408) --------------------------------------------------------
int __cdecl std::_Rb_tree_iterator<std::pair<int,int>>::_Rb_tree_iterator(int a1, int a2)
{
  int result; // eax@1

  result = a1;
  *(_DWORD *)a1 = a2;
  return result;
}

//----- (08049416) --------------------------------------------------------
void std::allocator<std::_Rb_tree_node<std::pair<int,int>>>::allocator()
{
  __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int,int>>>::new_allocator();
}

//----- (0804942A) --------------------------------------------------------
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_Rb_tree_impl<std::less<std::pair<int,int>>,false>::_M_initialize(int a1)
{
  int result; // eax@1

  *(_DWORD *)(a1 + 4) = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 12) = a1 + 4;
  result = a1;
  *(_DWORD *)(a1 + 16) = a1 + 4;
  return result;
}

//----- (0804945C) --------------------------------------------------------
int __userpurge std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::get_allocator@<eax>(int a1, int a2)
{
  std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_get_Node_allocator(a2);
  std::allocator<std::pair<int,int>>::allocator<std::_Rb_tree_node<std::pair<int,int>>>();
  return a1;
}

//----- (08049484) --------------------------------------------------------
void std::allocator<std::pair<int,int>>::~allocator()
{
  __gnu_cxx::new_allocator<std::pair<int,int>>::~new_allocator();
}

//----- (08049497) --------------------------------------------------------
int __cdecl std::__addressof<std::pair<int,int>>(int a1)
{
  return a1;
}

//----- (080494A0) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<int,int>>::destroy()
{
  ;
}

//----- (080494A6) --------------------------------------------------------
void __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_put_node(int a1, void *a2)
{
  __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int,int>>>::deallocate(a1, a2);
}

//----- (080494C8) --------------------------------------------------------
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_end(int a1)
{
  return a1 + 4;
}

//----- (080494D3) --------------------------------------------------------
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_key(int a1)
{
  int v1; // eax@1
  char v3; // [sp+1Fh] [bp-9h]@1

  v1 = std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_value(a1);
  return std::_Identity<std::pair<int,int>>::operator()((int)&v3, v1);
}

//----- (080494F6) --------------------------------------------------------
bool __cdecl std::less<std::pair<int,int>>::operator()(int a1, int a2, int a3)
{
  return std::operator<<int,int>(a2, a3);
}

//----- (08049510) --------------------------------------------------------
int __userpurge std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::begin@<eax>(int a1, int a2)
{
  std::_Rb_tree_iterator<std::pair<int,int>>::_Rb_tree_iterator(a1, *(_DWORD *)(a2 + 12));
  return a1;
}

//----- (08049532) --------------------------------------------------------
bool __cdecl std::_Rb_tree_iterator<std::pair<int,int>>::operator==(int a1, int a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2;
}

//----- (08049546) --------------------------------------------------------
int __cdecl std::pair<std::_Rb_tree_node_base *,std::_Rb_tree_node_base *>::pair(int a1, int a2, int a3)
{
  int result; // eax@1

  *(_DWORD *)a1 = *(_DWORD *)a2;
  result = a1;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)a3;
  return result;
}

//----- (08049560) --------------------------------------------------------
int __cdecl std::_Rb_tree_iterator<std::pair<int,int>>::operator--(int a1)
{
  *(_DWORD *)a1 = std::_Rb_tree_decrement(*(_DWORD *)a1);
  return a1;
}
// 8048740: using guessed type int __cdecl std::_Rb_tree_decrement(_DWORD);

//----- (0804957D) --------------------------------------------------------
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_key(int a1)
{
  int v1; // eax@1
  char v3; // [sp+1Fh] [bp-9h]@1

  v1 = std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_value(a1);
  return std::_Identity<std::pair<int,int>>::operator()((int)&v3, v1);
}

//----- (080495A0) --------------------------------------------------------
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_create_node(int a1, int a2)
{
  int v2; // ebx@1
  char v4[5]; // [sp+1Bh] [bp-Dh]@1

  *(_DWORD *)&v4[1] = std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_get_node(a1);
  v2 = std::__addressof<std::pair<int,int>>(*(_DWORD *)&v4[1] + 16);
  std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::get_allocator(
    (int)v4,
    a1);
  __gnu_cxx::new_allocator<std::pair<int,int>>::construct((int)v4, (void *)v2, a2);
  std::allocator<std::pair<int,int>>::~allocator();
  return *(_DWORD *)&v4[1];
}

//----- (08049604) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int,int>>>::new_allocator()
{
  ;
}

//----- (0804960A) --------------------------------------------------------
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_get_Node_allocator(int a1)
{
  return a1;
}

//----- (08049612) --------------------------------------------------------
void std::allocator<std::pair<int,int>>::allocator<std::_Rb_tree_node<std::pair<int,int>>>()
{
  __gnu_cxx::new_allocator<std::pair<int,int>>::new_allocator();
}

//----- (08049626) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<int,int>>::~new_allocator()
{
  ;
}

//----- (0804962C) --------------------------------------------------------
void __cdecl __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int,int>>>::deallocate(int a1, void *a2)
{
  operator delete(a2);
}

//----- (0804963F) --------------------------------------------------------
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_value(int a1)
{
  return a1 + 16;
}

//----- (0804964A) --------------------------------------------------------
bool __cdecl std::operator<<int,int>(int a1, int a2)
{
  return *(_DWORD *)a1 < *(_DWORD *)a2 || *(_DWORD *)a2 >= *(_DWORD *)a1 && *(_DWORD *)(a1 + 4) < *(_DWORD *)(a2 + 4);
}

//----- (08049681) --------------------------------------------------------
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_S_value(int a1)
{
  return a1 + 16;
}

//----- (0804968C) --------------------------------------------------------
int __cdecl std::_Rb_tree<std::pair<int,int>,std::pair<int,int>,std::_Identity<std::pair<int,int>>,std::less<std::pair<int,int>>,std::allocator<std::pair<int,int>>>::_M_get_node(int a1)
{
  return __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int,int>>>::allocate(a1, 1u);
}

//----- (080496B0) --------------------------------------------------------
void *__cdecl __gnu_cxx::new_allocator<std::pair<int,int>>::construct(int a1, void *a2, int a3)
{
  void *result; // eax@1
  void *v4; // ecx@1
  int v5; // edx@2

  result = operator new(8u, a2);
  v4 = result;
  if ( result )
  {
    v5 = *(_DWORD *)(a3 + 4);
    result = *(void **)a3;
    *(_DWORD *)v4 = *(_DWORD *)a3;
    *((_DWORD *)v4 + 1) = v5;
  }
  return result;
}

//----- (080496DE) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<int,int>>::new_allocator()
{
  ;
}

//----- (080496E4) --------------------------------------------------------
int __cdecl __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int,int>>>::allocate(int a1, unsigned int a2)
{
  if ( __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int,int>>>::max_size() < a2 )
    std::__throw_bad_alloc();
  return operator new(24 * a2);
}

//----- (0804971A) --------------------------------------------------------
signed int __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int,int>>>::max_size()
{
  return 178956970;
}

//----- (08049730) --------------------------------------------------------
void _libc_csu_fini()
{
  ;
}

//----- (08049740) --------------------------------------------------------
void __cdecl _libc_csu_init()
{
  init_proc();
}

//----- (0804979A) --------------------------------------------------------
void _i686_get_pc_thunk_bx()
{
  ;
}

//----- (080497A0) --------------------------------------------------------
int __fastcall _do_global_ctors_aux(int a1, int a2)
{
  int (**v2)(); // ebx@1
  void (__cdecl *v3)(); // eax@1
  int v5; // [sp-4h] [bp-8h]@1

  v5 = a2;
  v2 = &off_804B2D4;
  v3 = (void (__cdecl *)())off_804B2D4;
  if ( off_804B2D4 != (int (*)())-1 )
  {
    do
    {
      --v2;
      v3();
      v3 = (void (__cdecl *)())*v2;
    }
    while ( *v2 != (int (*)())-1 );
  }
  return v5;
}
// 804B2D4: using guessed type int (*off_804B2D4)();

//----- (080497C8) --------------------------------------------------------
void term_proc()
{
  _do_global_dtors_aux();
}

#error "There were 1 decompilation failure(s) on 73 function(s)"
