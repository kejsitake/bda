/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2014 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

int init_proc();
// _DWORD __cdecl std::__throw_length_error(const char *); idb
// int __cxa_atexit(const char *, ...); weak
// int __gmon_start__(void); weak
// void __cdecl operator delete(void *); idb
// _DWORD std::ios_base::Init::Init(std::ios_base::Init *this); idb
// _DWORD __cdecl std::ios_base::Init::~Init(std::ios_base::Init *__hidden this); idb
// int printf(const char *format, ...);
// _DWORD __cdecl operator new(unsigned int); idb
// int __cdecl std::istream::operator>>(_DWORD, _DWORD); weak
// _DWORD std::__throw_bad_alloc(void); idb
signed int deregister_tm_clones();
int register_tm_clones();
void _do_global_dtors_aux();
int frame_dummy();
// void __usercall solve(char a1@<bl>, char a2@<sil>);
int __cdecl main(int argc, const char **argv, const char **envp);
int __cdecl __static_initialization_and_destruction_0(int a1, int a2);
int GLOBAL__sub_I_N();
void *__cdecl operator new(unsigned int a1, void *a2);
void __cdecl std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::~priority_queue(int a1);
int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::vector(int a1);
void __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::~vector(int a1);
// char __usercall std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::priority_queue@<al>(char a1@<bl>, char a2@<sil>, int a3, int a4, int a5);
// int __userpurge std::make_pair<int,int>@<eax>(int a1, char a2, char a3);
// int __userpurge std::make_pair<double,std::pair<int,int>>@<eax>(int a1, int a2, int a3, char a4);
// int __usercall std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::push@<eax>(char a1@<bl>, int a2, int a3);
bool __cdecl std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::empty(int a1);
int __cdecl std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::top(int a1);
// void __usercall std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::pop(char a1@<sil>, int a2);
int __cdecl std::max<double>(int a1, int a2);
void std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_Vector_impl::~_Vector_impl();
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_Vector_base(int a1);
void __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::~_Vector_base(int a1);
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_get_Tp_allocator(int a1);
void std::_Destroy<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>>>();
int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::vector(int a1, int a2);
// int __userpurge std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::begin@<eax>(int a1, int a2);
// int __userpurge std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::end@<eax>(int a1, int a2);
// char __usercall std::make_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::less<std::pair<double,std::pair<int,int>>>>@<al>(char a1@<bl>, char a2@<sil>, char a3, char a4);
int __cdecl std::pair<int,int>::pair(int a1, int a2, int a3);
int __cdecl std::pair<double,std::pair<int,int>>::pair(int a1, int a2, int a3);
int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::push_back(int a1, int a2);
// int __usercall std::push_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::less<std::pair<double,std::pair<int,int>>>>@<eax>(char a1@<bl>, char a2, char a3);
bool __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::empty(int a1);
int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::front(int a1);
// char __usercall std::pop_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::less<std::pair<double,std::pair<int,int>>>>@<al>(char a1@<sil>, char a2, char a3);
void __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::pop_back(int a1);
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_Vector_impl::_Vector_impl(int a1);
void std::allocator<std::pair<double,std::pair<int,int>>>::~allocator();
void __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_deallocate(int a1, void *a2);
void std::_Destroy<std::pair<double,std::pair<int,int>> *>();
int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::size(int a1);
int __cdecl __gnu_cxx::__alloc_traits<std::allocator<std::pair<double,std::pair<int,int>>>>::_S_select_on_copy(int a1);
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_get_Tp_allocator(int a1);
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_Vector_base(int a1, unsigned int a2);
// int __userpurge std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::begin@<eax>(int a1, int a2);
// int __userpurge std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::end@<eax>(int a1, int a2);
int __cdecl std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::pair<double,std::pair<int,int>>*,std::pair<double,std::pair<int,int>>>(char a1, char a2, int a3);
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::__normal_iterator(int a1, int a2);
int __cdecl __gnu_cxx::operator-<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>(int a1, int a2);
// int __userpurge __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator+@<eax>(int a1, int a2, int a3);
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*(int a1);
// int __usercall std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,int,std::pair<double,std::pair<int,int>>,std::less<std::pair<double,std::pair<int,int>>>>@<eax>(char a1@<sil>, char a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9);
void *__cdecl __gnu_cxx::__alloc_traits<std::allocator<std::pair<double,std::pair<int,int>>>>::construct<std::pair<double,std::pair<int,int>>>(int a1, void *a2, int a3);
int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_insert_aux(int a1, char a2, int a3);
// int __userpurge __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator-@<eax>(int a1, int a2, int a3);
int __cdecl std::__push_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,int,std::pair<double,std::pair<int,int>>,std::less<std::pair<double,std::pair<int,int>>>>(char a1, int a2, int a3, int a4, int a5, int a6, int a7, char a8);
bool __cdecl __gnu_cxx::operator==<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>(int a1, int a2);
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*(int a1);
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator--(int a1);
// int __usercall std::__pop_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::less<std::pair<double,std::pair<int,int>>>>@<eax>(char a1@<sil>, char a2, char a3, char a4);
void __gnu_cxx::__alloc_traits<std::allocator<std::pair<double,std::pair<int,int>>>>::destroy();
void std::allocator<std::pair<double,std::pair<int,int>>>::allocator();
void __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::~new_allocator();
void __cdecl __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::deallocate(int a1, void *a2);
void std::_Destroy_aux<true>::__destroy<std::pair<double,std::pair<int,int>> *>();
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_Vector_impl::_Vector_impl(int a1);
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_create_storage(int a1, unsigned int a2);
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::__normal_iterator(int a1, int a2);
int __cdecl std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::pair<double,std::pair<int,int>>*>(char a1, char a2, int a3);
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::base(int a1);
bool __cdecl std::less<std::pair<double,std::pair<int,int>>>::operator()(int a1, int a2, int a3);
void *__cdecl __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::construct(int a1, void *a2, int a3);
int __cdecl std::copy_backward<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(int a1, int a2, int a3);
int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_check_len(int, int, char *); // idb
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_allocate(int a1, unsigned int a2);
int __cdecl std::__uninitialized_move_if_noexcept_a<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *,std::allocator<std::pair<double,std::pair<int,int>>>>(int a1, int a2, int a3);
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::base(int a1);
void __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::destroy();
void __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::new_allocator();
void std::allocator<std::pair<double,std::pair<int,int>>>::allocator();
int __cdecl std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::pair<double,std::pair<int,int>>*>(char a1, char a2, int a3);
bool __cdecl std::operator<<double,std::pair<int,int>>(int a1, int a2);
int __cdecl std::__miter_base<std::pair<double,std::pair<int,int>> *>(int a1);
int __cdecl std::__copy_move_backward_a2<false,std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(int a1, int a2, int a3);
signed int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::max_size(int a1);
int __cdecl std::max<unsigned int>(int a1, int a2);
int __cdecl __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::allocate(int a1, unsigned int a2);
int __cdecl std::__uninitialized_copy_a<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>>>(int a1, int a2, int a3);
void __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::new_allocator();
bool __cdecl __gnu_cxx::operator!=<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>(int a1, int a2);
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator++(int a1);
int __cdecl std::__addressof<std::pair<double,std::pair<int,int>>>(int a1);
void *__cdecl std::_Construct<std::pair<double,std::pair<int,int>>,std::pair<double,std::pair<int,int>>>(void *a1, int a2);
bool __cdecl std::operator<<int,int>(int a1, int a2);
int __cdecl std::_Iter_base<std::pair<double,std::pair<int,int>> *,false>::_S_base(int a1);
int __cdecl std::__niter_base<std::pair<double,std::pair<int,int>> *>(int a1);
int __cdecl std::__copy_move_backward_a<false,std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(int a1, int a2, int a3);
signed int __gnu_cxx::__alloc_traits<std::allocator<std::pair<double,std::pair<int,int>>>>::max_size();
signed int __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::max_size();
int __cdecl std::uninitialized_copy<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(int a1, int a2, int a3);
int __cdecl std::__copy_move_backward<false,false,std::random_access_iterator_tag>::__copy_move_b<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(int a1, int a2, int a3);
int __cdecl std::__uninitialized_copy<false>::__uninit_copy<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(int a1, int a2, int a3);
void _libc_csu_fini(); // idb
void __cdecl _libc_csu_init();
void _i686_get_pc_thunk_bx();
int __fastcall _do_global_ctors_aux(int a1, int a2);
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

int (*off_804CA28)() = &GLOBAL__sub_I_N; // weak
int _DTOR_LIST__[] = { 4294967295 }; // weak
_UNKNOWN _DTOR_END__; // weak
_UNKNOWN _dso_handle; // weak
double EPS =  1.0e-8; // weak
int dword_804CB80[] = { 1 }; // weak
int dy[] = { 0 }; // weak
_UNKNOWN edata; // weak
_UNKNOWN unk_804CBA3; // weak
char completed_3328; // weak
int dtor_idx_3330; // weak
int N; // weak
int M; // weak
int H; // weak
int ce[]; // weak
int fl[]; // weak
double dist[]; // weak
_UNKNOWN std::__ioinit; // weak
// extern _UNKNOWN _gmon_start__; weak


//----- (0804867C) --------------------------------------------------------
int init_proc()
{
  int v0; // edx@3
  int v1; // ecx@3
  int v3; // [sp+0h] [bp-8h]@0

  if ( &_gmon_start__ )
    __gmon_start__();
  frame_dummy();
  _do_global_ctors_aux(v1, v0);
  return v3;
}
// 80486E0: using guessed type int __gmon_start__(void);

//----- (080487C0) --------------------------------------------------------
#error "80487C3: positive sp value has been found (funcsize=2)"

//----- (080487F0) --------------------------------------------------------
signed int deregister_tm_clones()
{
  signed int result; // eax@1

  result = &unk_804CBA3 - &edata;
  if ( (unsigned int)(&unk_804CBA3 - &edata) > 6 )
    result = 0;
  return result;
}
// 80487F0: could not find valid save-restore pair for ebp

//----- (08048820) --------------------------------------------------------
int register_tm_clones()
{
  return 0;
}
// 8048820: could not find valid save-restore pair for ebp

//----- (08048860) --------------------------------------------------------
void _do_global_dtors_aux()
{
  int v0; // eax@2
  int i; // ebx@2

  if ( !completed_3328 )
  {
    v0 = dtor_idx_3330;
    for ( i = ((&_DTOR_END__ - (_UNKNOWN *)_DTOR_LIST__) >> 2) - 1; dtor_idx_3330 < (unsigned int)i; v0 = dtor_idx_3330 )
    {
      dtor_idx_3330 = v0 + 1;
      ((void (*)(void))_DTOR_LIST__[v0 + 1])();
    }
    deregister_tm_clones();
    completed_3328 = 1;
  }
}
// 804CA30: using guessed type int _DTOR_LIST__[];
// 804CC30: using guessed type char completed_3328;
// 804CC34: using guessed type int dtor_idx_3330;

//----- (080488B0) --------------------------------------------------------
int frame_dummy()
{
  return register_tm_clones();
}
// 80488B0: could not find valid save-restore pair for ebp

//----- (080488E0) --------------------------------------------------------
void __usercall solve(char a1@<bl>, char a2@<sil>)
{
  int v2; // ecx@3
  int v3; // edx@3
  char v4; // [sp+20h] [bp-D8h]@1
  char v5; // [sp+30h] [bp-C8h]@1
  char v6; // [sp+3Fh] [bp-B9h]@1
  char v7; // [sp+40h] [bp-B8h]@1
  int v8; // [sp+50h] [bp-A8h]@1
  double v9; // [sp+58h] [bp-A0h]@3
  int v10; // [sp+60h] [bp-98h]@3
  int v11; // [sp+64h] [bp-94h]@3
  char v12; // [sp+68h] [bp-90h]@16
  int v13; // [sp+78h] [bp-80h]@16
  char v14; // [sp+80h] [bp-78h]@18
  int v15; // [sp+90h] [bp-68h]@18
  char v16; // [sp+98h] [bp-60h]@19
  int v17; // [sp+A8h] [bp-50h]@19
  int v18; // [sp+B0h] [bp-48h]@10
  int v19; // [sp+B4h] [bp-44h]@10
  int v20; // [sp+B8h] [bp-40h]@4
  int v21; // [sp+BCh] [bp-3Ch]@4
  double v22; // [sp+C0h] [bp-38h]@3
  int v23; // [sp+C8h] [bp-30h]@3
  int v24; // [sp+CCh] [bp-2Ch]@3
  int v25; // [sp+D0h] [bp-28h]@2
  int v26; // [sp+D4h] [bp-24h]@2
  double v27; // [sp+D8h] [bp-20h]@2
  double v28; // [sp+E0h] [bp-18h]@13
  int i; // [sp+ECh] [bp-Ch]@3

  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::vector((int)&v5);
  std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::priority_queue(
    a1,
    a2,
    (int)&v4,
    (int)&v6,
    (int)&v5);
  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::~vector((int)&v5);
  std::make_pair<int,int>((int)&v8, 0, 0);
  std::make_pair<double,std::pair<int,int>>((int)&v7, 0, 0, v8);
  std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::push(
    a1,
    (int)&v4,
    (int)&v7);
  while ( !std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::empty((int)&v4) )
  {
    v27 = -*(double *)std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::top((int)&v4);
    v26 = *(_DWORD *)(std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::top((int)&v4)
                    + 8);
    v25 = *(_DWORD *)(std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::top((int)&v4)
                    + 12);
    std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::pop(
      a2,
      (int)&v4);
    if ( EPS + v27 <= (long double)dist[v26 + 101 * v25] )
    {
      v2 = 101 * v25 + v26;
      v3 = HIDWORD(v27);
      LODWORD(dist[v2]) = LODWORD(v27);
      HIDWORD(dist[v2]) = v3;
      v24 = ce[v26 + 101 * v25];
      v23 = fl[v26 + 101 * v25];
      v9 = (long double)H - v27 * 10.0;
      v10 = 0;
      v11 = 0;
      v22 = *(double *)std::max<double>((int)&v10, (int)&v9);
      for ( i = 0; i <= 3; ++i )
      {
        v21 = dword_804CB80[i] + v26;
        v20 = dy[i] + v25;
        if ( v21 >= 0 && v21 < M && v20 >= 0 && v20 < N )
        {
          v19 = ce[v21 + 101 * v20];
          v18 = fl[v21 + 101 * v20];
          if ( v19 - 50 >= v23 && v19 - 50 >= v18 && v24 - 50 >= v18 )
          {
            v28 = v27;
            if ( v22 > (long double)(v19 - 50) )
              v28 = (v22 - (long double)(v19 - 50)) / 10.0 + v28;
            if ( EPS <= (long double)v28 )
            {
              if ( (long double)(v23 + 20) <= (long double)H - v28 * 10.0 )
              {
                std::make_pair<int,int>((int)&v17, v21, v20);
                std::make_pair<double,std::pair<int,int>>(
                  (int)&v16,
                  COERCE_UNSIGNED_INT64(-(v28 + 1.0)),
                  COERCE_UNSIGNED_INT64(-(v28 + 1.0)) >> 32,
                  v17);
                std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::push(
                  a1,
                  (int)&v4,
                  (int)&v16);
              }
              else
              {
                std::make_pair<int,int>((int)&v15, v21, v20);
                std::make_pair<double,std::pair<int,int>>(
                  (int)&v14,
                  COERCE_UNSIGNED_INT64(-(v28 + 10.0)),
                  COERCE_UNSIGNED_INT64(-(v28 + 10.0)) >> 32,
                  v15);
                std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::push(
                  a1,
                  (int)&v4,
                  (int)&v14);
              }
            }
            else
            {
              std::make_pair<int,int>((int)&v13, v21, v20);
              std::make_pair<double,std::pair<int,int>>((int)&v12, 0, 2147483648, v13);
              std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::push(
                a1,
                (int)&v4,
                (int)&v12);
            }
          }
        }
      }
    }
  }
  printf("%lf\n", LODWORD(dist[M - 1 + 101 * (N - 1)]), HIDWORD(dist[M - 1 + 101 * (N - 1)]));
  std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::~priority_queue((int)&v4);
}
// 804CB78: using guessed type double EPS;
// 804CB80: using guessed type int dword_804CB80[];
// 804CB90: using guessed type int dy[];
// 804CC40: using guessed type int N;
// 804CC44: using guessed type int M;
// 804CC48: using guessed type int H;
// 804CC60: using guessed type int ce[];
// 8056BE0: using guessed type int fl[];
// 8060B60: using guessed type double dist[];

//----- (08048E72) --------------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  char v3; // bl@0
  char v4; // si@0
  int v5; // eax@2
  int v6; // eax@2
  int v7; // ecx@16
  int v9; // [sp+10h] [bp-20h]@1
  int ii; // [sp+14h] [bp-1Ch]@15
  int n; // [sp+18h] [bp-18h]@14
  int m; // [sp+1Ch] [bp-14h]@9
  int l; // [sp+20h] [bp-10h]@8
  int k; // [sp+24h] [bp-Ch]@3
  int j; // [sp+28h] [bp-8h]@2
  int i; // [sp+2Ch] [bp-4h]@1

  std::istream::operator>>(&edata, &v9);
  for ( i = 0; i < v9; ++i )
  {
    v5 = std::istream::operator>>(&edata, &H);
    v6 = std::istream::operator>>(v5, &N);
    std::istream::operator>>(v6, &M);
    for ( j = 0; j < N; ++j )
    {
      for ( k = 0; k < M; ++k )
        std::istream::operator>>(&edata, 4 * (k + 101 * j) + 134532192);
    }
    for ( l = 0; l < N; ++l )
    {
      for ( m = 0; m < M; ++m )
        std::istream::operator>>(&edata, 4 * (m + 101 * l) + 134573024);
    }
    for ( n = 0; n < N; ++n )
    {
      for ( ii = 0; ii < M; ++ii )
      {
        v7 = 101 * n + ii;
        LODWORD(dist[v7]) = 0;
        HIDWORD(dist[v7]) = 1104150528;
      }
    }
    printf("Case #%d: ", i + 1);
    solve(v3, v4);
  }
  return 0;
}
// 8048760: using guessed type int __cdecl std::istream::operator>>(_DWORD, _DWORD);
// 804CC40: using guessed type int N;
// 804CC44: using guessed type int M;
// 804CC48: using guessed type int H;
// 8060B60: using guessed type double dist[];

//----- (08049049) --------------------------------------------------------
int __cdecl __static_initialization_and_destruction_0(int a1, int a2)
{
  int result; // eax@3

  if ( a1 == 1 && a2 == 0xFFFF )
  {
    std::ios_base::Init::Init((std::ios_base::Init *)&std::__ioinit);
    result = __cxa_atexit((const char *)std::ios_base::Init::~Init, &std::__ioinit, &_dso_handle);
  }
  return result;
}
// 80486D0: using guessed type int __cxa_atexit(const char *, ...);

//----- (08049088) --------------------------------------------------------
int GLOBAL__sub_I_N()
{
  return __static_initialization_and_destruction_0(1, 0xFFFF);
}

//----- (080490A4) --------------------------------------------------------
void *__cdecl operator new(unsigned int a1, void *a2)
{
  return a2;
}

//----- (080490AC) --------------------------------------------------------
void __cdecl std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::~priority_queue(int a1)
{
  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::~vector(a1);
}

//----- (080490C0) --------------------------------------------------------
int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::vector(int a1)
{
  return std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_Vector_base(a1);
}

//----- (080490D4) --------------------------------------------------------
void __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::~vector(int a1)
{
  int v1; // ST04_4@1
  int v2; // ST00_4@1

  std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_get_Tp_allocator(a1);
  v1 = *(_DWORD *)(a1 + 4);
  v2 = *(_DWORD *)a1;
  std::_Destroy<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>>>();
  std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::~_Vector_base(a1);
}

//----- (0804912C) --------------------------------------------------------
char __usercall std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::priority_queue@<al>(char a1@<bl>, char a2@<sil>, int a3, int a4, int a5)
{
  int v6; // [sp+18h] [bp-10h]@1
  int v7; // [sp+1Ch] [bp-Ch]@1

  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::vector(a3, a5);
  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::end(
    (int)&v6,
    a3);
  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::begin(
    (int)&v7,
    a3);
  return std::make_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::less<std::pair<double,std::pair<int,int>>>>(
           a1,
           a2,
           v7,
           v6);
}

//----- (080491A3) --------------------------------------------------------
int __userpurge std::make_pair<int,int>@<eax>(int a1, char a2, char a3)
{
  std::pair<int,int>::pair(a1, (int)&a2, (int)&a3);
  return a1;
}

//----- (080491C9) --------------------------------------------------------
int __userpurge std::make_pair<double,std::pair<int,int>>@<eax>(int a1, int a2, int a3, char a4)
{
  int v5; // [sp+18h] [bp-10h]@1
  int v6; // [sp+1Ch] [bp-Ch]@1

  v5 = a2;
  v6 = a3;
  std::pair<double,std::pair<int,int>>::pair(a1, (int)&v5, (int)&a4);
  return a1;
}

//----- (080491FC) --------------------------------------------------------
int __usercall std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::push@<eax>(char a1@<bl>, int a2, int a3)
{
  int v4; // [sp+18h] [bp-10h]@1
  int v5; // [sp+1Ch] [bp-Ch]@1

  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::push_back(
    a2,
    a3);
  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::end(
    (int)&v4,
    a2);
  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::begin(
    (int)&v5,
    a2);
  return std::push_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::less<std::pair<double,std::pair<int,int>>>>(
           a1,
           v5,
           v4);
}

//----- (0804925A) --------------------------------------------------------
bool __cdecl std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::empty(int a1)
{
  return std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::empty(a1);
}

//----- (0804926E) --------------------------------------------------------
int __cdecl std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::top(int a1)
{
  return std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::front(a1);
}

//----- (08049282) --------------------------------------------------------
void __usercall std::priority_queue<std::pair<double,std::pair<int,int>>,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>,std::less<std::pair<double,std::pair<int,int>>>>::pop(char a1@<sil>, int a2)
{
  int v2; // [sp+18h] [bp-10h]@1
  int v3; // [sp+1Ch] [bp-Ch]@1

  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::end(
    (int)&v2,
    a2);
  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::begin(
    (int)&v3,
    a2);
  std::pop_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::less<std::pair<double,std::pair<int,int>>>>(
    a1,
    v3,
    v2);
  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::pop_back(a2);
}

//----- (080492D9) --------------------------------------------------------
int __cdecl std::max<double>(int a1, int a2)
{
  int result; // eax@2

  if ( *(double *)a2 <= (long double)*(double *)a1 )
    result = a1;
  else
    result = a2;
  return result;
}

//----- (080492FA) --------------------------------------------------------
void std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_Vector_impl::~_Vector_impl()
{
  std::allocator<std::pair<double,std::pair<int,int>>>::~allocator();
}

//----- (0804930E) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_Vector_base(int a1)
{
  return std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_Vector_impl::_Vector_impl(a1);
}

//----- (08049322) --------------------------------------------------------
void __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::~_Vector_base(int a1)
{
  int v1; // ST08_4@1

  v1 = (*(_DWORD *)(a1 + 8) - *(_DWORD *)a1) >> 4;
  std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_deallocate(
    a1,
    *(void **)a1);
  std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_Vector_impl::~_Vector_impl();
}

//----- (08049382) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_get_Tp_allocator(int a1)
{
  return a1;
}

//----- (0804938A) --------------------------------------------------------
void std::_Destroy<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>>>()
{
  std::_Destroy<std::pair<double,std::pair<int,int>> *>();
}

//----- (080493A4) --------------------------------------------------------
int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::vector(int a1, int a2)
{
  int v2; // eax@1
  int v3; // eax@1
  int v4; // esi@1
  int result; // eax@1
  int v6; // [sp+18h] [bp-10h]@1
  int v7; // [sp+1Ch] [bp-Ch]@1

  v2 = std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_get_Tp_allocator(a2);
  __gnu_cxx::__alloc_traits<std::allocator<std::pair<double,std::pair<int,int>>>>::_S_select_on_copy(v2);
  v3 = std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::size(a2);
  std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_Vector_base(
    a1,
    v3);
  std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_get_Tp_allocator(a1);
  v4 = *(_DWORD *)a1;
  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::end(
    (int)&v6,
    a2);
  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::begin(
    (int)&v7,
    a2);
  result = std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::pair<double,std::pair<int,int>>*,std::pair<double,std::pair<int,int>>>(
             v7,
             v6,
             v4);
  *(_DWORD *)(a1 + 4) = result;
  return result;
}

//----- (0804945C) --------------------------------------------------------
int __userpurge std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::begin@<eax>(int a1, int a2)
{
  __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::__normal_iterator(
    a1,
    a2);
  return a1;
}

//----- (0804947C) --------------------------------------------------------
int __userpurge std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::end@<eax>(int a1, int a2)
{
  __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::__normal_iterator(
    a1,
    a2 + 4);
  return a1;
}

//----- (0804949E) --------------------------------------------------------
char __usercall std::make_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::less<std::pair<double,std::pair<int,int>>>>@<al>(char a1@<bl>, char a2@<sil>, char a3, char a4)
{
  char result; // al@1
  int v5; // eax@3
  int i; // [sp+34h] [bp-14h]@2
  char v7; // [sp+38h] [bp-10h]@3
  int v8; // [sp+3Ch] [bp-Ch]@2

  result = __gnu_cxx::operator-<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>(
             (int)&a4,
             (int)&a3) <= 1;
  if ( !result )
  {
    v8 = __gnu_cxx::operator-<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>(
           (int)&a4,
           (int)&a3);
    for ( i = (v8 - 2) / 2; ; --i )
    {
      __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator+(
        (int)&v7,
        (int)&a3,
        (int)&i);
      v5 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&v7);
      std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,int,std::pair<double,std::pair<int,int>>,std::less<std::pair<double,std::pair<int,int>>>>(
        a2,
        a3,
        i,
        v8,
        *(_DWORD *)v5,
        *(_DWORD *)(v5 + 4),
        *(_DWORD *)(v5 + 8),
        *(_DWORD *)(v5 + 12),
        a1);
      result = i;
      if ( !i )
        break;
    }
  }
  return result;
}

//----- (08049586) --------------------------------------------------------
int __cdecl std::pair<int,int>::pair(int a1, int a2, int a3)
{
  int result; // eax@1

  *(_DWORD *)a1 = *(_DWORD *)a2;
  result = a1;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)a3;
  return result;
}

//----- (080495A0) --------------------------------------------------------
int __cdecl std::pair<double,std::pair<int,int>>::pair(int a1, int a2, int a3)
{
  int v3; // edx@1
  int v4; // edx@1
  int result; // eax@1

  v3 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = v3;
  v4 = *(_DWORD *)(a3 + 4);
  result = *(_DWORD *)a3;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)a3;
  *(_DWORD *)(a1 + 12) = v4;
  return result;
}

//----- (080495C6) --------------------------------------------------------
int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::push_back(int a1, int a2)
{
  int result; // eax@2
  int v3; // [sp+1Ch] [bp-Ch]@3

  if ( *(_DWORD *)(a1 + 4) == *(_DWORD *)(a1 + 8) )
  {
    std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::end(
      (int)&v3,
      a1);
    result = std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_insert_aux(
               a1,
               v3,
               a2);
  }
  else
  {
    __gnu_cxx::__alloc_traits<std::allocator<std::pair<double,std::pair<int,int>>>>::construct<std::pair<double,std::pair<int,int>>>(
      a1,
      *(void **)(a1 + 4),
      a2);
    result = a1;
    *(_DWORD *)(a1 + 4) += 16;
  }
  return result;
}

//----- (08049639) --------------------------------------------------------
int __usercall std::push_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::less<std::pair<double,std::pair<int,int>>>>@<eax>(char a1@<bl>, char a2, char a3)
{
  int v3; // eax@1
  int v4; // ST28_4@1
  int v5; // ST2C_4@1
  int v6; // ST30_4@1
  int v7; // ST34_4@1
  int v8; // eax@1
  char v10; // [sp+38h] [bp-10h]@1
  int v11; // [sp+3Ch] [bp-Ch]@1

  v11 = 1;
  __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator-(
    (int)&v10,
    (int)&a3,
    (int)&v11);
  v3 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&v10);
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  v6 = *(_DWORD *)(v3 + 8);
  v7 = *(_DWORD *)(v3 + 12);
  v8 = __gnu_cxx::operator-<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>(
         (int)&a3,
         (int)&a2);
  return std::__push_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,int,std::pair<double,std::pair<int,int>>,std::less<std::pair<double,std::pair<int,int>>>>(
           a2,
           v8 - 1,
           0,
           v4,
           v5,
           v6,
           v7,
           a1);
}

//----- (080496E0) --------------------------------------------------------
bool __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::empty(int a1)
{
  char v2; // [sp+18h] [bp-10h]@1
  char v3; // [sp+1Ch] [bp-Ch]@1

  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::end(
    (int)&v2,
    a1);
  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::begin(
    (int)&v3,
    a1);
  return __gnu_cxx::operator==<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>(
           (int)&v3,
           (int)&v2);
}

//----- (08049730) --------------------------------------------------------
int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::front(int a1)
{
  char v2; // [sp+1Ch] [bp-Ch]@1

  std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::begin(
    (int)&v2,
    a1);
  return __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&v2);
}

//----- (08049758) --------------------------------------------------------
char __usercall std::pop_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::less<std::pair<double,std::pair<int,int>>>>@<al>(char a1@<sil>, char a2, char a3)
{
  char result; // al@1

  result = __gnu_cxx::operator-<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>(
             (int)&a3,
             (int)&a2) > 1;
  if ( result )
  {
    __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator--((int)&a3);
    result = std::__pop_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::less<std::pair<double,std::pair<int,int>>>>(
               a1,
               a2,
               a3,
               a3);
  }
  return result;
}

//----- (080497AA) --------------------------------------------------------
void __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::pop_back(int a1)
{
  int v1; // ST04_4@1

  *(_DWORD *)(a1 + 4) -= 16;
  v1 = *(_DWORD *)(a1 + 4);
  __gnu_cxx::__alloc_traits<std::allocator<std::pair<double,std::pair<int,int>>>>::destroy();
}

//----- (080497D6) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_Vector_impl::_Vector_impl(int a1)
{
  int result; // eax@1

  std::allocator<std::pair<double,std::pair<int,int>>>::allocator();
  *(_DWORD *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  result = a1;
  *(_DWORD *)(a1 + 8) = 0;
  return result;
}

//----- (08049806) --------------------------------------------------------
void std::allocator<std::pair<double,std::pair<int,int>>>::~allocator()
{
  __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::~new_allocator();
}

//----- (0804981A) --------------------------------------------------------
void __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_deallocate(int a1, void *a2)
{
  if ( a2 )
    __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::deallocate(a1, a2);
}

//----- (08049841) --------------------------------------------------------
void std::_Destroy<std::pair<double,std::pair<int,int>> *>()
{
  std::_Destroy_aux<true>::__destroy<std::pair<double,std::pair<int,int>> *>();
}

//----- (0804985C) --------------------------------------------------------
int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::size(int a1)
{
  return (*(_DWORD *)(a1 + 4) - *(_DWORD *)a1) >> 4;
}

//----- (08049875) --------------------------------------------------------
int __cdecl __gnu_cxx::__alloc_traits<std::allocator<std::pair<double,std::pair<int,int>>>>::_S_select_on_copy(int a1)
{
  return a1;
}

//----- (0804987E) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_get_Tp_allocator(int a1)
{
  return a1;
}

//----- (08049886) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_Vector_base(int a1, unsigned int a2)
{
  std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_Vector_impl::_Vector_impl(a1);
  return std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_create_storage(
           a1,
           a2);
}

//----- (080498D0) --------------------------------------------------------
int __userpurge std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::begin@<eax>(int a1, int a2)
{
  int v3; // [sp+1Ch] [bp-Ch]@1

  v3 = *(_DWORD *)a2;
  __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::__normal_iterator(
    a1,
    (int)&v3);
  return a1;
}

//----- (080498F8) --------------------------------------------------------
int __userpurge std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::end@<eax>(int a1, int a2)
{
  int v3; // [sp+1Ch] [bp-Ch]@1

  v3 = *(_DWORD *)(a2 + 4);
  __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::__normal_iterator(
    a1,
    (int)&v3);
  return a1;
}

//----- (08049920) --------------------------------------------------------
int __cdecl std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::pair<double,std::pair<int,int>>*,std::pair<double,std::pair<int,int>>>(char a1, char a2, int a3)
{
  return std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::pair<double,std::pair<int,int>>*>(
           a1,
           a2,
           a3);
}

//----- (08049942) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::__normal_iterator(int a1, int a2)
{
  int result; // eax@1

  result = a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  return result;
}

//----- (08049951) --------------------------------------------------------
int __cdecl __gnu_cxx::operator-<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>(int a1, int a2)
{
  int v2; // ebx@1

  v2 = *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::base(a1);
  return (v2
        - *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::base(a2)) >> 4;
}

//----- (08049982) --------------------------------------------------------
int __userpurge __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator+@<eax>(int a1, int a2, int a3)
{
  int v4; // [sp+1Ch] [bp-Ch]@1

  v4 = *(_DWORD *)a2 + 16 * *(_DWORD *)a3;
  __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::__normal_iterator(
    a1,
    (int)&v4);
  return a1;
}

//----- (080499B4) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*(int a1)
{
  return *(_DWORD *)a1;
}

//----- (080499BE) --------------------------------------------------------
int __usercall std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,int,std::pair<double,std::pair<int,int>>,std::less<std::pair<double,std::pair<int,int>>>>@<eax>(char a1@<sil>, char a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9)
{
  int v9; // ebx@2
  int v10; // eax@2
  int v11; // ebx@4
  int v12; // eax@4
  int v13; // ebx@8
  int v14; // eax@8
  int i; // [sp+28h] [bp-40h]@1
  char v17; // [sp+2Ch] [bp-3Ch]@2
  int v18; // [sp+30h] [bp-38h]@2
  char v19; // [sp+34h] [bp-34h]@2
  char v20; // [sp+38h] [bp-30h]@4
  char v21; // [sp+3Ch] [bp-2Ch]@4
  char v22; // [sp+40h] [bp-28h]@8
  char v23; // [sp+44h] [bp-24h]@8
  int v24; // [sp+48h] [bp-20h]@8
  int v25; // [sp+4Ch] [bp-1Ch]@1

  v25 = a3;
  for ( i = a3; (a4 - 1) / 2 > i; a3 = i )
  {
    i = 2 * (i + 1);
    v18 = i - 1;
    __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator+(
      (int)&v17,
      (int)&a2,
      (int)&v18);
    v9 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&v17);
    __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator+(
      (int)&v19,
      (int)&a2,
      (int)&i);
    v10 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&v19);
    if ( std::less<std::pair<double,std::pair<int,int>>>::operator()((int)&a9, v10, v9) )
      --i;
    __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator+(
      (int)&v20,
      (int)&a2,
      (int)&a3);
    v11 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&v20);
    __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator+(
      (int)&v21,
      (int)&a2,
      (int)&i);
    v12 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&v21);
    *(_DWORD *)v11 = *(_DWORD *)v12;
    *(_DWORD *)(v11 + 4) = *(_DWORD *)(v12 + 4);
    *(_DWORD *)(v11 + 8) = *(_DWORD *)(v12 + 8);
    *(_DWORD *)(v11 + 12) = *(_DWORD *)(v12 + 12);
  }
  if ( !(a4 & 1) && (a4 - 2) / 2 == i )
  {
    i = 2 * (i + 1);
    __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator+(
      (int)&v22,
      (int)&a2,
      (int)&a3);
    v13 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&v22);
    v24 = i - 1;
    __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator+(
      (int)&v23,
      (int)&a2,
      (int)&v24);
    v14 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&v23);
    *(_DWORD *)v13 = *(_DWORD *)v14;
    *(_DWORD *)(v13 + 4) = *(_DWORD *)(v14 + 4);
    *(_DWORD *)(v13 + 8) = *(_DWORD *)(v14 + 8);
    *(_DWORD *)(v13 + 12) = *(_DWORD *)(v14 + 12);
    a3 = i - 1;
  }
  return std::__push_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,int,std::pair<double,std::pair<int,int>>,std::less<std::pair<double,std::pair<int,int>>>>(
           a2,
           a3,
           v25,
           a5,
           a6,
           a7,
           a8,
           a1);
}

//----- (08049BCE) --------------------------------------------------------
void *__cdecl __gnu_cxx::__alloc_traits<std::allocator<std::pair<double,std::pair<int,int>>>>::construct<std::pair<double,std::pair<int,int>>>(int a1, void *a2, int a3)
{
  return __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::construct(a1, a2, a3);
}

//----- (08049BF0) --------------------------------------------------------
int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_insert_aux(int a1, char a2, int a3)
{
  int v3; // ST18_4@2
  int v4; // ST1C_4@2
  int v5; // ST20_4@2
  int v6; // ST24_4@2
  int v7; // esi@2
  int v8; // ebx@2
  int v9; // eax@2
  int result; // eax@2
  int v11; // eax@3
  int v12; // eax@3
  int v13; // esi@3
  int v14; // eax@3
  int v15; // ST04_4@3
  int v16; // ST00_4@3
  int v17; // ST08_4@3
  char v18; // [sp+2Ch] [bp-1Ch]@3
  void *v19; // [sp+30h] [bp-18h]@3
  int v20; // [sp+34h] [bp-14h]@3
  int v21; // [sp+38h] [bp-10h]@3
  int v22; // [sp+3Ch] [bp-Ch]@3

  if ( *(_DWORD *)(a1 + 4) == *(_DWORD *)(a1 + 8) )
  {
    v21 = std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_check_len(
            a1,
            1,
            "vector::_M_insert_aux");
    std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::begin(
      (int)&v18,
      a1);
    v20 = __gnu_cxx::operator-<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>(
            (int)&a2,
            (int)&v18);
    v11 = std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_allocate(
            a1,
            v21);
    v19 = (void *)v11;
    v22 = v11;
    __gnu_cxx::__alloc_traits<std::allocator<std::pair<double,std::pair<int,int>>>>::construct<std::pair<double,std::pair<int,int>>>(
      a1,
      (void *)(16 * v20 + v11),
      a3);
    v22 = 0;
    std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_get_Tp_allocator(a1);
    v12 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::base((int)&a2);
    v22 = std::__uninitialized_move_if_noexcept_a<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *,std::allocator<std::pair<double,std::pair<int,int>>>>(
            *(_DWORD *)a1,
            *(_DWORD *)v12,
            (int)v19)
        + 16;
    std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_get_Tp_allocator(a1);
    v13 = *(_DWORD *)(a1 + 4);
    v14 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::base((int)&a2);
    v22 = std::__uninitialized_move_if_noexcept_a<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *,std::allocator<std::pair<double,std::pair<int,int>>>>(
            *(_DWORD *)v14,
            v13,
            v22);
    std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_get_Tp_allocator(a1);
    v15 = *(_DWORD *)(a1 + 4);
    v16 = *(_DWORD *)a1;
    std::_Destroy<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>>>();
    v17 = (*(_DWORD *)(a1 + 8) - *(_DWORD *)a1) >> 4;
    std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_deallocate(
      a1,
      *(void **)a1);
    *(_DWORD *)a1 = v19;
    *(_DWORD *)(a1 + 4) = v22;
    result = a1;
    *(_DWORD *)(a1 + 8) = (char *)v19 + 16 * v21;
  }
  else
  {
    __gnu_cxx::__alloc_traits<std::allocator<std::pair<double,std::pair<int,int>>>>::construct<std::pair<double,std::pair<int,int>>>(
      a1,
      *(void **)(a1 + 4),
      *(_DWORD *)(a1 + 4) - 16);
    *(_DWORD *)(a1 + 4) += 16;
    v3 = *(_DWORD *)a3;
    v4 = *(_DWORD *)(a3 + 4);
    v5 = *(_DWORD *)(a3 + 8);
    v6 = *(_DWORD *)(a3 + 12);
    v7 = *(_DWORD *)(a1 + 4) - 16;
    v8 = *(_DWORD *)(a1 + 4) - 32;
    v9 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::base((int)&a2);
    std::copy_backward<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(
      *(_DWORD *)v9,
      v8,
      v7);
    result = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&a2);
    *(_DWORD *)result = v3;
    *(_DWORD *)(result + 4) = v4;
    *(_DWORD *)(result + 8) = v5;
    *(_DWORD *)(result + 12) = v6;
  }
  return result;
}

//----- (08049EBA) --------------------------------------------------------
int __userpurge __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator-@<eax>(int a1, int a2, int a3)
{
  int v4; // [sp+1Ch] [bp-Ch]@1

  v4 = *(_DWORD *)a2 + -16 * *(_DWORD *)a3;
  __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::__normal_iterator(
    a1,
    (int)&v4);
  return a1;
}

//----- (08049EED) --------------------------------------------------------
int __cdecl std::__push_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,int,std::pair<double,std::pair<int,int>>,std::less<std::pair<double,std::pair<int,int>>>>(char a1, int a2, int a3, int a4, int a5, int a6, int a7, char a8)
{
  int v8; // ebx@2
  int v9; // eax@2
  int v10; // eax@4
  bool v11; // al@5
  int result; // eax@8
  int i; // [sp+1Ch] [bp-2Ch]@1
  char v14; // [sp+20h] [bp-28h]@2
  char v15; // [sp+24h] [bp-24h]@2
  char v16; // [sp+28h] [bp-20h]@4
  char v17; // [sp+2Ch] [bp-1Ch]@8

  for ( i = (a2 - 1) / 2; ; i = (i - 1) / 2 )
  {
    v11 = 0;
    if ( a2 > a3 )
    {
      __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator+(
        (int)&v16,
        (int)&a1,
        (int)&i);
      v10 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&v16);
      if ( std::less<std::pair<double,std::pair<int,int>>>::operator()((int)&a8, v10, (int)&a4) )
        v11 = 1;
    }
    if ( !v11 )
      break;
    __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator+(
      (int)&v14,
      (int)&a1,
      (int)&a2);
    v8 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&v14);
    __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator+(
      (int)&v15,
      (int)&a1,
      (int)&i);
    v9 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&v15);
    *(_DWORD *)v8 = *(_DWORD *)v9;
    *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
    *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
    *(_DWORD *)(v8 + 12) = *(_DWORD *)(v9 + 12);
    a2 = i;
  }
  __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator+(
    (int)&v17,
    (int)&a1,
    (int)&a2);
  result = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&v17);
  *(_DWORD *)result = a4;
  *(_DWORD *)(result + 4) = a5;
  *(_DWORD *)(result + 8) = a6;
  *(_DWORD *)(result + 12) = a7;
  return result;
}

//----- (0804A034) --------------------------------------------------------
bool __cdecl __gnu_cxx::operator==<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>(int a1, int a2)
{
  int v2; // ebx@1

  v2 = *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::base(a1);
  return v2 == *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::base(a2);
}

//----- (0804A060) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*(int a1)
{
  return *(_DWORD *)a1;
}

//----- (0804A06A) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator--(int a1)
{
  *(_DWORD *)a1 -= 16;
  return a1;
}

//----- (0804A07F) --------------------------------------------------------
int __usercall std::__pop_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::less<std::pair<double,std::pair<int,int>>>>@<eax>(char a1@<sil>, char a2, char a3, char a4)
{
  int v4; // eax@1
  int v5; // ST20_4@1
  int v6; // ST24_4@1
  int v7; // ST28_4@1
  int v8; // ST2C_4@1
  int v9; // ebx@1
  int v10; // eax@1
  int v11; // eax@1

  v4 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&a4);
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  v7 = *(_DWORD *)(v4 + 8);
  v8 = *(_DWORD *)(v4 + 12);
  v9 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&a4);
  v10 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&a2);
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_DWORD *)(v9 + 4) = *(_DWORD *)(v10 + 4);
  *(_DWORD *)(v9 + 8) = *(_DWORD *)(v10 + 8);
  *(_DWORD *)(v9 + 12) = *(_DWORD *)(v10 + 12);
  v11 = __gnu_cxx::operator-<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>(
          (int)&a3,
          (int)&a2);
  return std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,int,std::pair<double,std::pair<int,int>>,std::less<std::pair<double,std::pair<int,int>>>>(
           a1,
           a2,
           0,
           v11,
           v5,
           v6,
           v7,
           v8,
           a1);
}

//----- (0804A133) --------------------------------------------------------
void __gnu_cxx::__alloc_traits<std::allocator<std::pair<double,std::pair<int,int>>>>::destroy()
{
  __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::destroy();
}

//----- (0804A14E) --------------------------------------------------------
void std::allocator<std::pair<double,std::pair<int,int>>>::allocator()
{
  __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::new_allocator();
}

//----- (0804A162) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::~new_allocator()
{
  ;
}

//----- (0804A168) --------------------------------------------------------
void __cdecl __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::deallocate(int a1, void *a2)
{
  operator delete(a2);
}

//----- (0804A17B) --------------------------------------------------------
void std::_Destroy_aux<true>::__destroy<std::pair<double,std::pair<int,int>> *>()
{
  ;
}

//----- (0804A180) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_Vector_impl::_Vector_impl(int a1)
{
  int result; // eax@1

  std::allocator<std::pair<double,std::pair<int,int>>>::allocator();
  *(_DWORD *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  result = a1;
  *(_DWORD *)(a1 + 8) = 0;
  return result;
}

//----- (0804A1B8) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_create_storage(int a1, unsigned int a2)
{
  int result; // eax@1

  *(_DWORD *)a1 = std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_allocate(
                    a1,
                    a2);
  *(_DWORD *)(a1 + 4) = *(_DWORD *)a1;
  result = a1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)a1 + 16 * a2;
  return result;
}

//----- (0804A1F6) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::__normal_iterator(int a1, int a2)
{
  int result; // eax@1

  result = a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  return result;
}

//----- (0804A205) --------------------------------------------------------
int __cdecl std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::pair<double,std::pair<int,int>>*>(char a1, char a2, int a3)
{
  return std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::pair<double,std::pair<int,int>>*>(
           a1,
           a2,
           a3);
}

//----- (0804A226) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> *,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::base(int a1)
{
  return a1;
}

//----- (0804A22E) --------------------------------------------------------
bool __cdecl std::less<std::pair<double,std::pair<int,int>>>::operator()(int a1, int a2, int a3)
{
  return std::operator<<double,std::pair<int,int>>(a2, a3);
}

//----- (0804A248) --------------------------------------------------------
void *__cdecl __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::construct(int a1, void *a2, int a3)
{
  void *result; // eax@1

  result = operator new(0x10u, a2);
  if ( result )
  {
    *(_DWORD *)result = *(_DWORD *)a3;
    *((_DWORD *)result + 1) = *(_DWORD *)(a3 + 4);
    *((_DWORD *)result + 2) = *(_DWORD *)(a3 + 8);
    *((_DWORD *)result + 3) = *(_DWORD *)(a3 + 12);
  }
  return result;
}

//----- (0804A280) --------------------------------------------------------
int __cdecl std::copy_backward<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(int a1, int a2, int a3)
{
  int v3; // ebx@1
  int v4; // eax@1

  v3 = std::__miter_base<std::pair<double,std::pair<int,int>> *>(a2);
  v4 = std::__miter_base<std::pair<double,std::pair<int,int>> *>(a1);
  return std::__copy_move_backward_a2<false,std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(
           v4,
           v3,
           a3);
}

//----- (0804A2B8) --------------------------------------------------------
int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_check_len(int a1, int a2, char *a3)
{
  signed int v3; // ebx@1
  int v4; // eax@1
  int v5; // ebx@3
  int v6; // eax@3
  signed int v7; // eax@4
  int result; // eax@5
  int v9; // [sp+18h] [bp-10h]@3
  int v10; // [sp+1Ch] [bp-Ch]@3

  v3 = std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::max_size(a1);
  v4 = std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::size(a1);
  if ( v3 - v4 < (unsigned int)a2 )
    std::__throw_length_error(a3);
  v5 = std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::size(a1);
  v9 = std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::size(a1);
  v10 = v5 + *(_DWORD *)std::max<unsigned int>((int)&v9, (int)&a2);
  v6 = std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::size(a1);
  if ( v6 <= (unsigned int)v10
    && (v7 = std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::max_size(a1),
        v7 >= (unsigned int)v10) )
    result = v10;
  else
    result = std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::max_size(a1);
  return result;
}

//----- (0804A35C) --------------------------------------------------------
int __cdecl std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_allocate(int a1, unsigned int a2)
{
  int result; // eax@2

  if ( a2 )
    result = __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::allocate(a1, a2);
  else
    result = 0;
  return result;
}

//----- (0804A38B) --------------------------------------------------------
int __cdecl std::__uninitialized_move_if_noexcept_a<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *,std::allocator<std::pair<double,std::pair<int,int>>>>(int a1, int a2, int a3)
{
  return std::__uninitialized_copy_a<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>>>(
           a1,
           a2,
           a3);
}

//----- (0804A3B4) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::base(int a1)
{
  return a1;
}

//----- (0804A3BC) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::destroy()
{
  ;
}

//----- (0804A3C2) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::new_allocator()
{
  ;
}

//----- (0804A3C8) --------------------------------------------------------
void std::allocator<std::pair<double,std::pair<int,int>>>::allocator()
{
  __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::new_allocator();
}

//----- (0804A3E2) --------------------------------------------------------
int __cdecl std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>,std::pair<double,std::pair<int,int>>*>(char a1, char a2, int a3)
{
  int v3; // ebx@2
  int v4; // eax@2
  int v6; // [sp+1Ch] [bp-Ch]@1

  v6 = a3;
  while ( __gnu_cxx::operator!=<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>(
            (int)&a1,
            (int)&a2) )
  {
    v3 = __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator*((int)&a1);
    v4 = std::__addressof<std::pair<double,std::pair<int,int>>>(v6);
    std::_Construct<std::pair<double,std::pair<int,int>>,std::pair<double,std::pair<int,int>>>((void *)v4, v3);
    __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator++((int)&a1);
    v6 += 16;
  }
  return v6;
}

//----- (0804A443) --------------------------------------------------------
bool __cdecl std::operator<<double,std::pair<int,int>>(int a1, int a2)
{
  return *(double *)a2 > (long double)*(double *)a1
      || *(double *)a1 <= (long double)*(double *)a2 && std::operator<<int,int>(a1 + 8, a2 + 8);
}

//----- (0804A49B) --------------------------------------------------------
int __cdecl std::__miter_base<std::pair<double,std::pair<int,int>> *>(int a1)
{
  return std::_Iter_base<std::pair<double,std::pair<int,int>> *,false>::_S_base(a1);
}

//----- (0804A4AE) --------------------------------------------------------
int __cdecl std::__copy_move_backward_a2<false,std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(int a1, int a2, int a3)
{
  int v3; // esi@1
  int v4; // ebx@1
  int v5; // eax@1

  v3 = std::__niter_base<std::pair<double,std::pair<int,int>> *>(a3);
  v4 = std::__niter_base<std::pair<double,std::pair<int,int>> *>(a2);
  v5 = std::__niter_base<std::pair<double,std::pair<int,int>> *>(a1);
  return std::__copy_move_backward_a<false,std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(
           v5,
           v4,
           v3);
}

//----- (0804A4F2) --------------------------------------------------------
signed int __cdecl std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::max_size(int a1)
{
  std::_Vector_base<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>::_M_get_Tp_allocator(a1);
  return __gnu_cxx::__alloc_traits<std::allocator<std::pair<double,std::pair<int,int>>>>::max_size();
}

//----- (0804A50D) --------------------------------------------------------
int __cdecl std::max<unsigned int>(int a1, int a2)
{
  int result; // eax@2

  if ( *(_DWORD *)a1 >= *(_DWORD *)a2 )
    result = a1;
  else
    result = a2;
  return result;
}

//----- (0804A528) --------------------------------------------------------
int __cdecl __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::allocate(int a1, unsigned int a2)
{
  if ( __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::max_size() < a2 )
    std::__throw_bad_alloc();
  return operator new(16 * a2);
}

//----- (0804A558) --------------------------------------------------------
int __cdecl std::__uninitialized_copy_a<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>>>(int a1, int a2, int a3)
{
  return std::uninitialized_copy<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(
           a1,
           a2,
           a3);
}

//----- (0804A57A) --------------------------------------------------------
void __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::new_allocator()
{
  ;
}

//----- (0804A57F) --------------------------------------------------------
bool __cdecl __gnu_cxx::operator!=<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>(int a1, int a2)
{
  int v2; // ebx@1

  v2 = *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::base(a1);
  return v2 != *(_DWORD *)__gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::base(a2);
}

//----- (0804A5AC) --------------------------------------------------------
int __cdecl __gnu_cxx::__normal_iterator<std::pair<double,std::pair<int,int>> const*,std::vector<std::pair<double,std::pair<int,int>>,std::allocator<std::pair<double,std::pair<int,int>>>>>::operator++(int a1)
{
  *(_DWORD *)a1 += 16;
  return a1;
}

//----- (0804A5C1) --------------------------------------------------------
int __cdecl std::__addressof<std::pair<double,std::pair<int,int>>>(int a1)
{
  return a1;
}

//----- (0804A5C9) --------------------------------------------------------
void *__cdecl std::_Construct<std::pair<double,std::pair<int,int>>,std::pair<double,std::pair<int,int>>>(void *a1, int a2)
{
  void *result; // eax@1

  result = operator new(0x10u, a1);
  if ( result )
  {
    *(_DWORD *)result = *(_DWORD *)a2;
    *((_DWORD *)result + 1) = *(_DWORD *)(a2 + 4);
    *((_DWORD *)result + 2) = *(_DWORD *)(a2 + 8);
    *((_DWORD *)result + 3) = *(_DWORD *)(a2 + 12);
  }
  return result;
}

//----- (0804A601) --------------------------------------------------------
bool __cdecl std::operator<<int,int>(int a1, int a2)
{
  return *(_DWORD *)a1 < *(_DWORD *)a2 || *(_DWORD *)a2 >= *(_DWORD *)a1 && *(_DWORD *)(a1 + 4) < *(_DWORD *)(a2 + 4);
}

//----- (0804A638) --------------------------------------------------------
int __cdecl std::_Iter_base<std::pair<double,std::pair<int,int>> *,false>::_S_base(int a1)
{
  return a1;
}

//----- (0804A640) --------------------------------------------------------
int __cdecl std::__niter_base<std::pair<double,std::pair<int,int>> *>(int a1)
{
  return std::_Iter_base<std::pair<double,std::pair<int,int>> *,false>::_S_base(a1);
}

//----- (0804A653) --------------------------------------------------------
int __cdecl std::__copy_move_backward_a<false,std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(int a1, int a2, int a3)
{
  return std::__copy_move_backward<false,false,std::random_access_iterator_tag>::__copy_move_b<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(
           a1,
           a2,
           a3);
}

//----- (0804A678) --------------------------------------------------------
signed int __gnu_cxx::__alloc_traits<std::allocator<std::pair<double,std::pair<int,int>>>>::max_size()
{
  return __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::max_size();
}

//----- (0804A68C) --------------------------------------------------------
signed int __gnu_cxx::new_allocator<std::pair<double,std::pair<int,int>>>::max_size()
{
  return 0xFFFFFFF;
}

//----- (0804A696) --------------------------------------------------------
int __cdecl std::uninitialized_copy<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(int a1, int a2, int a3)
{
  return std::__uninitialized_copy<false>::__uninit_copy<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(
           a1,
           a2,
           a3);
}

//----- (0804A6B7) --------------------------------------------------------
int __cdecl std::__copy_move_backward<false,false,std::random_access_iterator_tag>::__copy_move_b<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(int a1, int a2, int a3)
{
  int i; // [sp+Ch] [bp-4h]@1

  for ( i = (a2 - a1) >> 4; i > 0; --i )
  {
    a3 -= 16;
    a2 -= 16;
    *(_DWORD *)a3 = *(_DWORD *)a2;
    *(_DWORD *)(a3 + 4) = *(_DWORD *)(a2 + 4);
    *(_DWORD *)(a3 + 8) = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a3 + 12) = *(_DWORD *)(a2 + 12);
  }
  return a3;
}

//----- (0804A701) --------------------------------------------------------
int __cdecl std::__uninitialized_copy<false>::__uninit_copy<std::pair<double,std::pair<int,int>> *,std::pair<double,std::pair<int,int>> *>(int a1, int a2, int a3)
{
  int v3; // eax@2
  int v5; // [sp+1Ch] [bp-Ch]@1

  v5 = a3;
  while ( a1 != a2 )
  {
    v3 = std::__addressof<std::pair<double,std::pair<int,int>>>(v5);
    std::_Construct<std::pair<double,std::pair<int,int>>,std::pair<double,std::pair<int,int>>>((void *)v3, a1);
    a1 += 16;
    v5 += 16;
  }
  return v5;
}

//----- (0804A740) --------------------------------------------------------
void _libc_csu_fini()
{
  ;
}

//----- (0804A750) --------------------------------------------------------
void __cdecl _libc_csu_init()
{
  init_proc();
}

//----- (0804A7AA) --------------------------------------------------------
void _i686_get_pc_thunk_bx()
{
  ;
}

//----- (0804A7B0) --------------------------------------------------------
int __fastcall _do_global_ctors_aux(int a1, int a2)
{
  int (**v2)(); // ebx@1
  void (__cdecl *v3)(); // eax@1
  int v5; // [sp-4h] [bp-8h]@1

  v5 = a2;
  v2 = &off_804CA28;
  v3 = (void (__cdecl *)())off_804CA28;
  if ( off_804CA28 != (int (*)())-1 )
  {
    do
    {
      --v2;
      v3();
      v3 = (void (__cdecl *)())*v2;
    }
    while ( *v2 != (int (*)())-1 );
  }
  return v5;
}
// 804CA28: using guessed type int (*off_804CA28)();

//----- (0804A7D8) --------------------------------------------------------
void term_proc()
{
  _do_global_dtors_aux();
}

#error "There were 1 decompilation failure(s) on 110 function(s)"
