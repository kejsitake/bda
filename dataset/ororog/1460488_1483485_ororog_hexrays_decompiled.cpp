/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007-2014 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

int init_proc();
// _DWORD std::string::string(std::string *this); idb
// int __cxa_atexit(const char *, ...); weak
// int getchar(void);
// int __cdecl std::string::operator+=(_DWORD, _DWORD); weak
// int __cdecl std::getline<char,std::char_traits<char>,std::allocator<char>>(_DWORD, _DWORD); weak
// int __gmon_start__(void); weak
// int __cdecl std::string::operator[](_DWORD, _DWORD); weak
// _DWORD std::string::size(std::string *this); idb
// _DWORD std::ios_base::Init::Init(std::ios_base::Init *this); idb
// _DWORD __cdecl std::ios_base::Init::~Init(std::ios_base::Init *__hidden this); idb
// _DWORD __cdecl std::string::~string(std::string *this); idb
// int printf(const char *format, ...);
// int __cdecl std::operator<<<char,std::char_traits<char>,std::allocator<char>>(_DWORD, _DWORD); weak
// int __cdecl std::istream::operator>>(_DWORD, _DWORD); weak
// int std::ostream::operator<<(_DWORD, const char *, ...); weak
signed int deregister_tm_clones();
int register_tm_clones();
void _do_global_dtors_aux();
int frame_dummy();
int nextInt(void);
int __cdecl main(int argc, const char **argv, const char **envp);
int __cdecl __static_initialization_and_destruction_0(int a1, int a2);
int GLOBAL__sub_I__Z7nextIntv();
void _libc_csu_fini(); // idb
void __cdecl _libc_csu_init();
void _i686_get_pc_thunk_bx();
int __fastcall _do_global_ctors_aux(int a1, int a2);
void term_proc();

//-------------------------------------------------------------------------
// Data declarations

// extern _UNKNOWN std::endl<char,std::char_traits<char>>; weak
int (*off_8049004)() = &GLOBAL__sub_I__Z7nextIntv; // weak
int _DTOR_LIST__[] = { 4294967295 }; // weak
_UNKNOWN _DTOR_END__; // weak
_UNKNOWN _dso_handle; // weak
_UNKNOWN std::cin; // weak
_UNKNOWN std::cout; // weak
char completed_3328; // weak
int dtor_idx_3330; // weak
char mapping[]; // weak
char byte_8049295; // weak
char byte_8049296; // weak
char byte_8049297; // weak
char byte_8049298; // weak
char byte_8049299; // weak
char byte_804929A; // weak
char byte_804929B; // weak
char byte_804929C; // weak
char byte_804929D; // weak
char byte_804929E; // weak
char byte_804929F; // weak
char byte_80492A0; // weak
char byte_80492A1; // weak
char byte_80492A2; // weak
char byte_80492A3; // weak
char byte_80492A4; // weak
char byte_80492A5; // weak
char byte_80492A6; // weak
char byte_80492A7; // weak
char byte_80492A8; // weak
char byte_80492A9; // weak
char byte_80492AA; // weak
char byte_80492AB; // weak
char byte_80492AC; // weak
char byte_80492AD; // weak
_UNKNOWN std::__ioinit; // weak
// extern _UNKNOWN _gmon_start__; weak


//----- (080487DC) --------------------------------------------------------
int init_proc()
{
  int v0; // edx@3
  int v1; // ecx@3
  int v3; // [sp+0h] [bp-8h]@0

  if ( &_gmon_start__ )
    __gmon_start__();
  frame_dummy();
  _do_global_ctors_aux(v1, v0);
  return v3;
}
// 8048870: using guessed type int __gmon_start__(void);

//----- (08048950) --------------------------------------------------------
#error "8048953: positive sp value has been found (funcsize=2)"

//----- (08048980) --------------------------------------------------------
signed int deregister_tm_clones()
{
  return 3;
}
// 8048980: could not find valid save-restore pair for ebp

//----- (080489B0) --------------------------------------------------------
int register_tm_clones()
{
  return 0;
}
// 80489B0: could not find valid save-restore pair for ebp

//----- (080489F0) --------------------------------------------------------
void _do_global_dtors_aux()
{
  int v0; // eax@2
  int i; // ebx@2

  if ( !completed_3328 )
  {
    v0 = dtor_idx_3330;
    for ( i = ((&_DTOR_END__ - (_UNKNOWN *)_DTOR_LIST__) >> 2) - 1; dtor_idx_3330 < (unsigned int)i; v0 = dtor_idx_3330 )
    {
      dtor_idx_3330 = v0 + 1;
      ((void (*)(void))_DTOR_LIST__[v0 + 1])();
    }
    deregister_tm_clones();
    completed_3328 = 1;
  }
}
// 804900C: using guessed type int _DTOR_LIST__[];
// 804928C: using guessed type char completed_3328;
// 8049290: using guessed type int dtor_idx_3330;

//----- (08048A40) --------------------------------------------------------
int frame_dummy()
{
  return register_tm_clones();
}
// 8048A40: could not find valid save-restore pair for ebp

//----- (08048A70) --------------------------------------------------------
int nextInt(void)
{
  int v1; // [sp+8h] [bp-10h]@1
  char v2; // [sp+Fh] [bp-9h]@2

  v1 = 0;
  do
    v2 = getchar();
  while ( (unsigned int)(v2 - 48) > 9 );
  do
  {
    v1 = 10 * v1 + v2 - 48;
    v2 = getchar();
  }
  while ( (unsigned int)(v2 - 48) <= 9 );
  return v1;
}

//----- (08048ACF) --------------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  int v3; // eax@4
  int v4; // eax@7
  int v5; // eax@8
  int v7; // [sp+18h] [bp-1Ch]@2
  int v8; // [sp+1Ch] [bp-18h]@2
  int v9; // [sp+20h] [bp-14h]@1
  int v10; // [sp+24h] [bp-10h]@1
  int j; // [sp+28h] [bp-Ch]@2
  int i; // [sp+2Ch] [bp-8h]@1

  mapping[0] = 24;
  byte_8049295 = 7;
  byte_8049296 = 4;
  byte_8049297 = 18;
  byte_8049298 = 14;
  byte_8049299 = 2;
  byte_804929A = 21;
  byte_804929B = 23;
  byte_804929C = 3;
  byte_804929D = 20;
  byte_804929E = 8;
  byte_804929F = 6;
  byte_80492A0 = 11;
  byte_80492A1 = 1;
  byte_80492A2 = 10;
  byte_80492A3 = 17;
  byte_80492A4 = 25;
  byte_80492A5 = 19;
  byte_80492A6 = 13;
  byte_80492A7 = 22;
  byte_80492A8 = 9;
  byte_80492A9 = 15;
  byte_80492AA = 5;
  byte_80492AB = 12;
  byte_80492AC = 0;
  byte_80492AD = 16;
  std::istream::operator>>(&std::cin, &v10);
  std::string::string((std::string *)&v9);
  std::getline<char,std::char_traits<char>,std::allocator<char>>(&std::cin, &v9);
  for ( i = 0; i < v10; ++i )
  {
    printf("Case #%d: ", i + 1);
    std::string::string((std::string *)&v8);
    std::string::string((std::string *)&v7);
    std::getline<char,std::char_traits<char>,std::allocator<char>>(&std::cin, &v8);
    for ( j = 0; ; ++j )
    {
      v4 = std::string::size((std::string *)&v8);
      if ( v4 <= j )
        break;
      if ( *(_BYTE *)std::string::operator[](&v8, j) == 32 )
      {
        std::string::operator+=(&v7, 32);
      }
      else
      {
        v3 = std::string::operator[](&v8, j);
        std::string::operator+=(&v7, (char)(mapping[*(_BYTE *)v3 - 97] + 97));
      }
    }
    v5 = std::operator<<<char,std::char_traits<char>,std::allocator<char>>(&std::cout, &v7);
    std::ostream::operator<<(v5, (const char *)&std::endl<char,std::char_traits<char>>);
    std::string::~string((std::string *)&v7);
    std::string::~string((std::string *)&v8);
  }
  std::string::~string((std::string *)&v9);
  return 0;
}
// 8048850: using guessed type int __cdecl std::string::operator+=(_DWORD, _DWORD);
// 8048860: using guessed type int __cdecl std::getline<char,std::char_traits<char>,std::allocator<char>>(_DWORD, _DWORD);
// 8048880: using guessed type int __cdecl std::string::operator[](_DWORD, _DWORD);
// 80488F0: using guessed type int __cdecl std::operator<<<char,std::char_traits<char>,std::allocator<char>>(_DWORD, _DWORD);
// 8048900: using guessed type int __cdecl std::istream::operator>>(_DWORD, _DWORD);
// 8048910: using guessed type int std::ostream::operator<<(_DWORD, const char *, ...);
// 8049295: using guessed type char byte_8049295;
// 8049296: using guessed type char byte_8049296;
// 8049297: using guessed type char byte_8049297;
// 8049298: using guessed type char byte_8049298;
// 8049299: using guessed type char byte_8049299;
// 804929A: using guessed type char byte_804929A;
// 804929B: using guessed type char byte_804929B;
// 804929C: using guessed type char byte_804929C;
// 804929D: using guessed type char byte_804929D;
// 804929E: using guessed type char byte_804929E;
// 804929F: using guessed type char byte_804929F;
// 80492A0: using guessed type char byte_80492A0;
// 80492A1: using guessed type char byte_80492A1;
// 80492A2: using guessed type char byte_80492A2;
// 80492A3: using guessed type char byte_80492A3;
// 80492A4: using guessed type char byte_80492A4;
// 80492A5: using guessed type char byte_80492A5;
// 80492A6: using guessed type char byte_80492A6;
// 80492A7: using guessed type char byte_80492A7;
// 80492A8: using guessed type char byte_80492A8;
// 80492A9: using guessed type char byte_80492A9;
// 80492AA: using guessed type char byte_80492AA;
// 80492AB: using guessed type char byte_80492AB;
// 80492AC: using guessed type char byte_80492AC;
// 80492AD: using guessed type char byte_80492AD;

//----- (08048D4D) --------------------------------------------------------
int __cdecl __static_initialization_and_destruction_0(int a1, int a2)
{
  int result; // eax@3

  if ( a1 == 1 && a2 == 0xFFFF )
  {
    std::ios_base::Init::Init((std::ios_base::Init *)&std::__ioinit);
    result = __cxa_atexit((const char *)std::ios_base::Init::~Init, &std::__ioinit, &_dso_handle);
  }
  return result;
}
// 8048830: using guessed type int __cxa_atexit(const char *, ...);

//----- (08048D8C) --------------------------------------------------------
int GLOBAL__sub_I__Z7nextIntv()
{
  return __static_initialization_and_destruction_0(1, 0xFFFF);
}

//----- (08048DB0) --------------------------------------------------------
void _libc_csu_fini()
{
  ;
}

//----- (08048DC0) --------------------------------------------------------
void __cdecl _libc_csu_init()
{
  init_proc();
}

//----- (08048E1A) --------------------------------------------------------
void _i686_get_pc_thunk_bx()
{
  ;
}

//----- (08048E20) --------------------------------------------------------
int __fastcall _do_global_ctors_aux(int a1, int a2)
{
  int (**v2)(); // ebx@1
  void (__cdecl *v3)(); // eax@1
  int v5; // [sp-4h] [bp-8h]@1

  v5 = a2;
  v2 = &off_8049004;
  v3 = (void (__cdecl *)())off_8049004;
  if ( off_8049004 != (int (*)())-1 )
  {
    do
    {
      --v2;
      v3();
      v3 = (void (__cdecl *)())*v2;
    }
    while ( *v2 != (int (*)())-1 );
  }
  return v5;
}
// 8049004: using guessed type int (*off_8049004)();

//----- (08048E48) --------------------------------------------------------
void term_proc()
{
  _do_global_dtors_aux();
}

#error "There were 1 decompilation failure(s) on 15 function(s)"
